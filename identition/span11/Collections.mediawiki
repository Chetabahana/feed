<table>
  <thead>
    <tr>
      <td>[[<img src="https://avatars1.githubusercontent.com/u/36441664?f=1&v=3&s=20" class="avatar">|https://github.com/chetabahana]]</td><td colspan="7">This [[wiki|https://github.com/chetabahana/chetabahana.github.io/wiki]] is courtesy of '''[[Chetabahana Project|https://github.com/MarketLeader]]'''. Find all of them on '''[[Project Map|https://github.com/chetabahana/chetabahana.github.io/wiki/Skema#Implementasi]]'''.</td><td>[[<img src="https://avatars2.githubusercontent.com/u/36441943?v=3&s=20">|https://github.com/MarketLeader]]</td>   
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>[[:arrow_double_up:|https://github.com/chetabahana/chetabahana.github.io/wiki]]</th>
      <th>[[:arrow_up_small:|https://github.com/MarketLeader/marketleader.github.io/wiki]]</th>
      <th>[[Home|:rewind:]] [[Home|Intro]]</th>
      <th>[[:arrow_backward:|https://github.com/MarketLeader/Tutorial-HelloWorld/wiki]] [[Prev|https://github.com/MarketLeader/Tutorial-HelloWorld/wiki]]</th>
      <th>[[:repeat:|https://github.com/MarketLeader/Tutorial-HelloWorld/wiki]] [[Repo|https://github.com/chetabahana/chetabahana.github.io]]</th>
      <th>[[Next|https://github.com/MarketLeader/Google-Sites-API/wiki]] [[:arrow_forward:|https://github.com/MarketLeader/Google-Sites-API/wiki]]</th>
      <th>[[Last|https://github.com/MarketLeader/Google-Content-API/wiki]] [[:fast_forward:|https://github.com/MarketLeader/Google-Content-API/wiki]]</th>
      <th>[[:arrow_down_small:|https://github.com/MarketLeader/Google-AdWords-API/wiki]]</th>
      <th>[[:arrow_double_down:|https://github.com/MarketLeader/Toko-Chetabahana/wiki]]</th>
    </tr>
  </tbody>
</table>

Collections (kumpulan) memiliki arti dalam kelas nomina atau kata benda sehingga dapat menyatakan nama seseorang, tempat, atau semua benda dan segala yang dibendakan.

__TOC__

==Layout==
* [[Listing all Collections in Jekyll|https://stackoverflow.com/questions/31171041/listing-all-collections-in-jekyll]]
* [[Explain like I’m five: Jekyll collections|https://ben.balter.com/2015/02/20/jekyll-collections/]]

[[Programming|<img src=https://user-images.githubusercontent.com/36441664/82759549-62ab0400-9e18-11ea-9913-09c73d207dd6.jpg>]]

[[Programming|<img src=https://user-images.githubusercontent.com/36441664/70564806-6c6ee100-1bc3-11ea-8beb-3843de6ef1c7.jpg>]]

[[Jekyll/Liquid|<img src=https://user-images.githubusercontent.com/36441664/84057290-a76e9780-a9e1-11ea-87c5-d4a9de0b72c2.png width=600>]]

===Setup===

[[Programming|<img src=https://user-images.githubusercontent.com/36441664/84057287-a63d6a80-a9e1-11ea-9120-7d171ce30459.png width=400>]]

[[Programming|<img src=https://user-images.githubusercontent.com/36441664/70690599-915d7400-1ce9-11ea-8f87-f09a9154d4e8.png width=600>]]

[[<img src=https://user-images.githubusercontent.com/36441664/70026746-0686c600-15d3-11ea-9d4a-27c28b09de9d.png?|https://user-images.githubusercontent.com/36441664/70027358-8e210480-15d4-11ea-82b4-4d3c2a869f4f.png]]

====Output====
[[<img src=https://user-images.githubusercontent.com/36441664/71581711-14c7f380-2b39-11ea-9f61-8cf3df12a100.png>|https://github.com/MarketLeader/Tutorial-Buka-Toko/wiki/Continuous-Integration]]

====Custom====

[[https://user-images.githubusercontent.com/36441664/71191184-80e46500-22b8-11ea-9f97-5ce856a39820.png]]

[[<img src=https://user-images.githubusercontent.com/36441664/82048729-58358f80-96df-11ea-8176-14c26328a12f.png>|https://github.com/MarketLeader/Tutorial-Buka-Toko/wiki]]

[[https://user-images.githubusercontent.com/36441664/83940402-172c2900-a80e-11ea-8508-f112780c1737.jpg]]

===Atribut===
```
├── _config.yml
├── _data
│   └── members.yml
├── _drafts
│   ├── begin-with-the-crazy-ideas.md
│   └── on-simplicity-in-technology.md
├── _includes
│   ├── footer.html
│   └── header.html
├── _layouts
│   ├── default.html
│   └── post.html
├── _posts
│   ├── 2007-10-29-why-every-programmer-should-play-nethack.md
│   └── 2009-04-26-barcamp-boston-4-roundup.md
├── _sass
│   ├── _base.scss
│   └── _layout.scss
├── _site
├── .jekyll-metadata
└── index.html # can also be an 'index.md' with valid front matter
```

====Sorting====

====Ordering====
```
{% for collection in site.collections %}
  <h2>Items from {{ collection.label }}</h2>
  <ul>
    {% for item in site[collection.label] %}
      <li><a href="{{ item.url }}">{{ item.title }}</a></li>
    {% endfor %}
  </ul>
{% endfor %}
```

===Formasi===

====Susunan====

[[https://user-images.githubusercontent.com/36441664/59960482-f2527f00-94f2-11e9-84aa-f7ef5eb4ae89.png]]

====Tampilan====
[[Route|<img src=https://user-images.githubusercontent.com/36441664/69799589-23ec1680-1206-11ea-88d1-81528fbceb64.png>]]

==Content==

* [[In Jekyll, can we group multiple collections inside the same folder?|https://stackoverflow.com/questions/36851496/in-jekyll-can-we-group-multiple-collections-inside-the-same-folder]]

[[Programming#prinsip|<img src=https://user-images.githubusercontent.com/36441664/71182939-9e5e0280-22a9-11ea-8b70-4de1c91df802.png>]]

[[https://user-images.githubusercontent.com/36441664/83940931-7d667b00-a811-11ea-9b74-cf670bda59b2.jpg]]

===Properti===
[[Flowchart|<img src=https://user-images.githubusercontent.com/36441664/71985808-de3b5880-325d-11ea-9604-de20e3846293.png>]]

[[Programming|<img src=https://user-images.githubusercontent.com/36441664/83940419-24e1ae80-a80e-11ea-82e7-f7307761788f.jpg>]]


====Identity====
====Struktur====
===Karakter===
====Routing====
====Integrasi====

Spiral [[bilangan heksagonal|https://en.wikipedia.org/wiki/Ulam_spiral#Variants]] dengan bilangan prima berwarna hijau dan bilangan komposit yang lebih tinggi dalam bayangan biru yang lebih gelap.

[[<img src=https://user-images.githubusercontent.com/36441664/92418059-c53dcb00-f18f-11ea-88d9-e0e4f60c0fe1.png>|https://upload.wikimedia.org/wikipedia/commons/8/8e/Hexgrid_prime_number_sprial.svg]]


===Destinasi===

* [[Brilian! Teka-teki Matematika Kompleks Ini Akhirnya Terpecahkan|https://magazine.job-like.com/teka-teki-matematika-terpecahkan/amp/]]
* [[Pecahkan Salah Satu 6 Problem Utama Matematika ini akan Dapat US$1 Juta|https://sinarharapan.net/2018/01/pecahkan-salah-satu-6-problem-utama-matematika-ini-akan-dapat-us1-juta/]]

Sesuai bahasan tentang [[Program#assessment|assessment]] kita akan coba algoritma yang sudah dijelaskan di atas dengan mengambil sejumlah kasus untuk disertakan sebagai ''[[objek|https://github.com/chetabahana/chetabahana.github.io/wiki/%23#umum]]'' dalam bagian projek. 

<br>[[Implementasi#model|<img src=https://user-images.githubusercontent.com/36441664/83940381-05e31c80-a80e-11ea-80e3-f3339c957058.jpg>]]

Untuk itu kita ambil kasus yang belum dapat dipecahkan namun dia valid untuk ditelusuri bahwa ada solusinya dan dipilih secara konsensus oleh suatu badan yang kompeten. 

Saya mulai dulu dari latar belakangnya. 

Pada 8 Agustus 1900, di depan peserta Kongres Matematika Internasional ke-2 di Paris, Perancis, ahli matematika ''[[David Hilbert|https://id.m.wikipedia.org/wiki/David_Hilbert]]'' menggelar kuliah umum yang sangat terkenal. 

Kuliahnya tentang problem-problem matematika terbuka. 

Seabad kemudian, terilhami dari kuliah itu, yayasan nirlaba The Clay Mathematics Institute (CMI) yang bermarkas di Cambridge, Massachusetts, Amerika, mencetuskan Sayembara Problem Milenium. 

Problem-problem matematika yang tak terpecahkan dipilih oleh sebuah Dewan Pertimbangan Ilmiah CMI. 

Ada tujuh problem matematika pada milenium ini yang menjadi tantangan bagi semua ahli matematika di dunia untuk membuat formulasinya. 

Barang siapa yang dapat mengungkap rahasia itu, tersedia hadiah US$ 1 juta.

; [[Millennium Prize Problems|https://en.wikipedia.org/wiki/Millennium_Prize_Problems]]

[[<img src=https://user-images.githubusercontent.com/36441664/83953381-322c8680-a86a-11ea-8716-b48801ff169c.png>|https://www.claymath.org/millennium-problems]]

Untuk hindari kesalahan interpretasi berikut ini saya salin deskripsi dari masing² kasus sesuai [[bunyi aslinya|https://www.claymath.org/millennium-problems]]:

----

; [[Poincaré Conjecture|https://www.claymath.org/millennium-problems/poincar%C3%A9-conjecture]] (solved) 
In 1904 the French mathematician Henri Poincaré asked if the three dimensional sphere is characterized as the unique simply connected three manifold. This question, the Poincaré conjecture, was a special case of Thurston's geometrization conjecture. Perelman's proof tells us that every three manifold is built from a set of standard pieces, each with one of eight well-understood geometries.

----

; [[Birch and Swinnerton-Dyer (BSD) Conjecture|https://www.claymath.org/millennium-problems/birch-and-swinnerton-dyer-conjecture]]
Supported by much experimental evidence, this conjecture relates the number of points on an elliptic curve mod p to the rank of the group of rational points. Elliptic curves, defined by cubic equations in two variables, are fundamental mathematical objects that arise in many areas: Wiles' proof of the Fermat Conjecture, factorization of numbers into primes, and cryptography, to name three.

; [[Hodge Conjecture|https://www.claymath.org/millennium-problems/hodge-conjecture]]
The answer to this conjecture determines how much of the topology of the solution set of a system of algebraic equations can be defined in terms of further algebraic equations. The Hodge conjecture is known in certain special cases, e.g., when the solution set has dimension less than four. But in dimension four it is unknown.

----

; [[Yang–Mills and Mass Gap|https://www.claymath.org/millennium-problems/yang%E2%80%93mills-and-mass-gap]]
Experiment and computer simulations suggest the existence of a "mass gap" in the solution to the quantum versions of the Yang-Mills equations. But no proof of this property is known.

; [[Navier–Stokes Equation|https://www.claymath.org/millennium-problems/navier%E2%80%93stokes-equation]]
This is the equation which governs the flow of fluids such as water and air. However, there is no proof for the most basic questions one can ask: do solutions exist, and are they unique? Why ask for a proof? Because a proof gives not only certitude, but also understanding.

----

; [[Riemann Hypothesis|https://www.claymath.org/millennium-problems/riemann-hypothesis]]
The prime number theorem determines the average distribution of the primes. The Riemann hypothesis tells us about the deviation from the average. Formulated in Riemann's 1859 paper, it asserts that all the 'non-obvious' zeros of the zeta function are complex numbers with real part 1/2.

; [[P vs NP Problem|https://www.claymath.org/millennium-problems/p-vs-np-problem]]
If it is easy to check that a solution to a problem is correct, is it also easy to solve the problem? This is the essence of the P vs NP question. Typical of the NP problems is that of the Hamiltonian Path Problem: given N cities to visit, how can one do this without visiting a city twice? If you give me a solution, I can easily check that it is correct. But I cannot so easily find a solution.

----

====Limitasi====

[[<img src=https://user-images.githubusercontent.com/36441664/71641952-46c28c80-2cd6-11ea-8974-5e3028b3ee65.jpg width=800>|https://blog.cdpinstitute.org/blog/Blog953/AI-powered-personalised-omnichannel-experience-is-the-future-of-customer-experience]]

```
+-------------------------------------+         +----------------+
| Can the things be logically grouped?|---No--->|    Use pages   |
+-------------------------------------+         +----------------+
                |
               Yes
                |
                V
+-------------------------------------+         +----------------+
|      Are they grouped by date?      |---No--->|Use a collection|
+-------------------------------------+         +----------------+
                |
               Yes
                |
                V
+-------------------------------------+
|             Use posting             |
+-------------------------------------+

```
====Delegasi====

[[Mapping#Penelusuran|<img src=https://user-images.githubusercontent.com/36441664/83422567-ecc81d80-a453-11ea-880c-1a9dff069339.jpeg width=700>]]

Seperti dijelaskan di awal ''Collections (kumpulan)'' memiliki arti dalam kelas nomina atau kata benda sehingga dapat menyatakan nama seseorang, tempat, atau semua benda dan segala yang dibendakan.

Salah ''satu (1)'' dari ''tujuh (7)'' kasus ini sudah dipecahkan. Dengan demikian ada ''enam (6)'' masalah lain yang belum dapat dipecahkan. 

Kasus yang sudah dipecahkan adalah [[Poincaré Conjecture|https://www.claymath.org/millennium-problems/poincar%C3%A9-conjecture]].

[[Implementasi#geometri|<img src=https://user-images.githubusercontent.com/36441664/84181987-e53bf080-aab3-11ea-9738-184af2f8b60c.jpg width=450>]]

Sebuah bukti konjektur ini diberikan oleh [[Grigori Perelman|https://en.wikipedia.org/wiki/Grigori_Perelman]] pada tahun 2003; peninjauannya selesai pada Agustus 2006, Perelman terpilih untuk menerima Medali Fields atas [[solusinya|https://github.com/chetabahana/skema/files/4752116/0211159.pdf]]. 

Perelman secara resmi dianugerahi [[Penghargaan Milenium|https://www.claymath.org/sites/default/files/millenniumprizefull.pdf]] pada tanggal 18 Maret 2010:

[[<img src=https://user-images.githubusercontent.com/36441664/84165825-54a6e580-aa9e-11ea-9edc-388a75aaa7f8.jpg>|https://www.claymath.org/sites/default/files/millenniumprizefull.pdf]]

Perelman menolak penghargaan itu.

Kantor berita Interfax mewawancarai Perelman yang mengatakan bahwa ia yakin penghargaan itu tidak adil. 

Perelman mengatakan kepada Interfax ia menganggap kontribusinya untuk memecahkan Konjektur Poincare tidak lebih besar dari matematikawan Universitas Columbia, [[Richard Hamilton|https://en.wikipedia.org/wiki/Richard_S._Hamilton]].

==Artifacts==

[[Conjecture (konjektur)|https://id.wikipedia.org/wiki/Konjektur]] adalah sebuah proposisi yang dipradugakan sebagai hal yang nyata, benar, atau asli, sebagian besarnya didasarkan pada landasan yang tidak konklusif (tanpa kesimpulan). [[Karl Popper|https://id.m.wikipedia.org/wiki/Karl_Popper]] merintis penggunaan istilah "konjektur" di dalam filsafat ilmu.

Kebetulan semua kasus yang diberi nama dengan istilah ''konjektur'' adalah proyeksi atau perhitungan terhadap suatu bentuk. Hal ini dikenal dengan istilah: ''geometri''.

''[[Geometri|https://id.m.wikipedia.org/wiki/Geometri]]'' (Yunani Kuno: γεωμετρία, geo-"bumi",-metron "pengukuran"), ilmu ukur, atau ilmu bangun adalah cabang matematika yang bersangkutan dengan pertanyaan bentuk, ukuran, posisi relatif gambar, dan sifat ruang. 

[[https://user-images.githubusercontent.com/36441664/84094223-83817500-aa26-11ea-8af9-e14ffb3a118b.png]]

Berdasarkan objeknya saya membagi ''enam (6)'' kasus yang tersisa dalam ''tiga (3)'' kelompok yaitu: (1). [[Collections#geometri|geometri]], (2). [[Collections#mekanika|mekanika]], dan (3). [[Collections#algoritma|algoritma]]. Kebetulan hasilnya mereka itu ''berpasang²an'': 

; Pengelompokan

```
Kelompok  | Sifat Objek: Statis                | Sifat Objek: Dinamis
----------+------------------------------------+------------------------
Geometri  | BSD Conjecture (Kurva Elips)       | Hodge Conjecture (Topologi) 
Mekanika  | Yang–Mills and Mass Gap (Partikel) | Navier–Stokes (Turbulensi) 
Algoritma | Riemann Hypothesis (Bilangan)      | P vs NP Problem (Kerumitan) 
```

Karena salah satu dari kasusnya sudah dipecahkan maka saya tempatkan geometri sebagai urutan pertama. 

===Geometri===

Dalam topologi, sebuah bola dengan permukaan dua dimensi pada dasarnya ditandai oleh kenyataan bahwa bangun tersebut bersifat kompak dan terhubung sederhana. 

Juga benar bahwa setiap permukaan dua dimensi yang keduanya padat dan terhubung sederhana adalah topologi bola. 

[[Implementasi#model|<img src=https://user-images.githubusercontent.com/36441664/84094226-85e3cf00-aa26-11ea-8c28-516fd5e7a433.jpg>]]

[[Konjektur Poincaré|https://en.wikipedia.org/wiki/Poincar%C3%A9_conjecture]] mempermasalahkan bahwa ini juga berlaku untuk bidang dengan permukaan tiga dimensi. Pertanyaannya sudah lama diselesaikan untuk semua dimensi di atas tiga. 

Pemecahan tiga dimensi adalah pusat masalah mengklasifikasikan 3-manifold.

[[Implementasi#geometri|<img src=https://user-images.githubusercontent.com/36441664/84522434-d138fe80-ad00-11ea-9235-ea797b22596c.png>]]

; Risalah
* [[Official Problem Description|https://www.claymath.org/sites/default/files/poincare.pdf]]
* [[Press Release|https://www.claymath.org/sites/default/files/millenniumprizefull.pdf]]
Jika kita merentangkan karet gelang di sekitar permukaan apel, maka kita dapat mengecilkannya hingga ke suatu titik dengan menggerakkannya perlahan, tanpa merobeknya dan tanpa membiarkannya meninggalkan permukaan. 

<br>Di sisi lain, jika kita membayangkan bahwa pita karet yang sama entah bagaimana telah direntangkan ke arah yang tepat di sekitar donat, maka tidak ada cara untuk mengecilkannya ke suatu titik tanpa memutus karet gelang atau donat. 

Kami mengatakan permukaan apel "hanya terhubung," tetapi permukaan donat tidak. 

Poincaré, hampir seratus tahun yang lalu, tahu bahwa bola dua dimensi pada dasarnya ditandai oleh sifat konektivitas sederhana ini, dan mengajukan pertanyaan yang sesuai untuk bola tiga dimensi. 

Pertanyaan ini ternyata sangat sulit. 

Hampir seabad berlalu antara perumusannya pada tahun 1904 oleh Henri Poincaré dan solusinya oleh Grigoriy Perelman, diumumkan dalam pracetak yang diposting di ArXiv.org pada tahun 2002 dan 2003. 

Solusi Perelman didasarkan pada teori aliran Ricci Richard Hamilton, dan memanfaatkan hasil pada ruang metrik karena Cheeger, Gromov, dan Perelman sendiri. 

# [[Perelman's Solution|https://www.claymath.org/millennium-problems-poincar%C3%A9-conjecture/perelmans-solution]]
# [[Perelman's Laudation|https://www.claymath.org/perelman-laudations]]

Dalam makalah-makalah ini Perelman juga membuktikan dugaan Geometriisasi William Thurston, kasus khusus di antaranya adalah dugaan Poincaré. 

; Identifikasi
Sesuai ''[[Tree#pola|pola]]'' maka [[Route#identifikasi|identifikasi]] via [[realisasi|https://github.com/chetabahana/tree/actions]] dari [[Tree#metode|instance]] yang [[Tree#model|dimodelkan]] dalam [[Trace|implementasi]] pada ''[[data|https://github.com/chetabahana/chetabahana.github.io/blob/Chetabahana/_data/_feeds/_section/_skema/tree.json]]'' untuk [[skema|https://chetabahana.github.io/#chetabahana-skema?pad=6]] dari [[diagram|https://chetabahana.github.io/tree]] ini [[disetel|https://github.com/chetabahana/chetabahana.github.io/tree/master/_feeds/section/skema/tree]] di [[Tree#collections|collections]] dan [[disusun|https://chetabahana.github.io/skema/js/draw/Tree.js]] dengan [[konfigurasi|https://github.com/chetabahana/tree/blob/gh-pages/package.json]]:<br><br>

<table>
<tr><th rowspan="3">Object</th><th rowspan="3">Instance</th><th colspan="2">Eksternal</th><th colspan="6">Internal</th><th colspan="2">Eksternal</th><th rowspan="3">All</th></tr>
<tr><th rowspan="2" textAlign='center' verticalAlign='middle'>Get</th><th rowspan="2">Input</th><th colspan="3">Interaksi Input (Query)</th><th colspan="3">Interaksi Output (Result)</th><th rowspan="2">Output</th><th rowspan="2">Set</th></tr>
<tr><th>Fix</th><th>Let</th><th>Uji</th><th>Let</th><th>Uji</th><th>Fix*</th></tr>
<tr align="center"><td rowspan="3">[[tree|https://github.com/MarketLeader/marketleader.github.io/wiki/Toko-ke-Stok]]</td><td align="left">[[route|https://github.com/chetabahana/chetabahana.github.io/blob/master/_feeds/section/skema/sequence/method/method1.md]]</td><td title="Start">-</td><td>7,37
</td><td>-</td><td>2</td><td>3</td><td>4</td><td>3</td><td>-</td><td>7,37</td><td>-</td><td rowspan="3">140</td></tr>
<tr align="center"><td align="left">[[channel|https://github.com/chetabahana/chetabahana.github.io/blob/master/_feeds/section/skema/sequence/method/method1.md]]</td><td title="Start">-</td><td>20,20,28,28</td><td>-</td><td>4</td><td>4</td><td>7</td><td>9</td><td>-</td><td>7,13,20,28,28</td><td>-</td></tr>
</table>

====Kurva====
[[Konjektur Birch dan Swinnerton-Dyer|https://en.wikipedia.org/wiki/Birch_and_Swinnerton-Dyer_conjecture]] menawarkan jenis tertentu dari persamaan, mendefinisikan kurva eliptik atas bilangan rasional. 

Konjektur ini mempermasalahkan bahwa ada cara sederhana untuk mengetahui apakah persamaan tersebut memiliki jumlah terbatas atau tak terbatas dari solusi rasional. 

Masalah Hilbert kesepuluh ditangani dengan jenis yang lebih umum dari persamaan, dan dalam hal itu terbukti bahwa tidak ada cara untuk memutuskan apakah suatu persamaan yang diberikan bahkan mempunyai solusi.

[[Implementasi#kurva|<img src=https://user-images.githubusercontent.com/36441664/84094224-841a0b80-aa26-11ea-9013-e5607cb22cc4.png>]]

; Risalah
* [[Official Problem Description|https://www.claymath.org/sites/default/files/birchswin.pdf]]
Matematikawan selalu terpesona oleh masalah menggambarkan semua solusi dalam bilangan bulat x, y, z untuk persamaan aljabar seperti<br><br>

    x²  + y²  = z²

Euclid memberikan solusi lengkap untuk persamaan itu, tetapi untuk persamaan yang lebih rumit ini menjadi sangat sulit. 

Memang pada tahun 1970 Yu. V. Matiyasevich menunjukkan bahwa masalah kesepuluh Hilbert tidak dapat dipecahkan, yaitu, tidak ada metode umum untuk menentukan kapan persamaan tersebut memiliki solusi dalam bilangan bulat. 

Tetapi dalam kasus khusus seseorang dapat berharap untuk mengatakan sesuatu. 

Ketika solusi adalah titik-titik dari varietas abelian, dugaan Birch dan Swinnerton-Dyer menegaskan bahwa ukuran kelompok titik-titik rasional terkait dengan perilaku fungsi zeta terkait ζ (s) di dekat titik s = 1. 

Secara khusus dugaan yang luar biasa ini menyatakan bahwa jika ζ (1) sama dengan 0, maka ada jumlah poin rasional (solusi) yang tak terbatas, dan sebaliknya, jika ζ (1) tidak sama dengan 0, maka hanya ada yang terbatas sejumlah poin tersebu

; Identifikasi
Sesuai ''[[Tree#pola|pola]]'' maka [[Route#identifikasi|identifikasi]] via [[realisasi|https://github.com/chetabahana/tree/actions]] dari [[Tree#metode|instance]] yang [[Tree#model|dimodelkan]] dalam [[Trace|implementasi]] pada ''[[data|https://github.com/chetabahana/chetabahana.github.io/blob/Chetabahana/_data/_feeds/_section/_skema/tree.json]]'' untuk [[skema|https://chetabahana.github.io/#chetabahana-skema?pad=6]] dari [[diagram|https://chetabahana.github.io/tree]] ini [[disetel|https://github.com/chetabahana/chetabahana.github.io/tree/master/_feeds/section/skema/tree]] di [[Tree#collections|collections]] dan [[disusun|https://chetabahana.github.io/skema/js/draw/Tree.js]] dengan [[konfigurasi|https://github.com/chetabahana/tree/blob/gh-pages/package.json]]:<br><br>

<table>
<tr><th rowspan="3">Object</th><th rowspan="3">Instance</th><th colspan="2">Eksternal</th><th colspan="6">Internal</th><th colspan="2">Eksternal</th><th rowspan="3">All</th></tr>
<tr><th rowspan="2" textAlign='center' verticalAlign='middle'>Get</th><th rowspan="2">Input</th><th colspan="3">Interaksi Input (Query)</th><th colspan="3">Interaksi Output (Result)</th><th rowspan="2">Output</th><th rowspan="2">Set</th></tr>
<tr><th>Fix</th><th>Let</th><th>Uji</th><th>Let</th><th>Uji</th><th>Fix*</th></tr>
<tr align="center"><td rowspan="3">[[tree|https://github.com/MarketLeader/marketleader.github.io/wiki/Toko-ke-Stok]]</td><td align="left">[[route|https://github.com/chetabahana/chetabahana.github.io/blob/master/_feeds/section/skema/sequence/method/method1.md]]</td><td title="Start">-</td><td>7,37
</td><td>-</td><td>2</td><td>3</td><td>4</td><td>3</td><td>-</td><td>7,37</td><td>-</td><td rowspan="3">140</td></tr>
<tr align="center"><td align="left">[[channel|https://github.com/chetabahana/chetabahana.github.io/blob/master/_feeds/section/skema/sequence/method/method1.md]]</td><td title="Start">-</td><td>20,20,28,28</td><td>-</td><td>4</td><td>4</td><td>7</td><td>9</td><td>-</td><td>7,13,20,28,28</td><td>-</td></tr>
</table>

Catatan (lihat tanda bintang <code>(*)</code>pada tabel di atas & no. 7 pada bagan di bawah):    

====Bentuk====
[[Konjektur Hodge|https://en.wikipedia.org/wiki/Hodge_conjecture]] menyatakan bahwa untuk proyektif varietas aljabar, siklus Hodge adalah kombinasi linear rasional dari siklus aljabar.

[[Implementasi#bentuk|<img src=https://user-images.githubusercontent.com/36441664/84251018-f712a780-ab36-11ea-994d-961cc1e371b9.png>]]

; Risalah
* [[Official Problem Description|https://www.claymath.org/sites/default/files/hodge.pdf]]
* [[Lecture by Dan Freed|https://claymath.msri.org/hodgeconjecture.mov]]
Pada abad kedua puluh ahli matematika menemukan cara ampuh untuk menyelidiki bentuk objek yang rumit. 

<br>Ide dasarnya adalah untuk bertanya sejauh mana kita dapat memperkirakan bentuk objek yang diberikan dengan menempelkan blok-blok pembangun geometris sederhana dari dimensi yang bertambah. 

Teknik ini ternyata sangat berguna sehingga digeneralisasikan dalam banyak cara yang berbeda, akhirnya mengarah ke alat yang kuat yang memungkinkan ahli matematika untuk membuat kemajuan besar dalam membuat katalog berbagai objek yang mereka temui dalam penyelidikan mereka. 

Sayangnya, asal-usul geometris prosedur menjadi tidak jelas dalam generalisasi ini. Dalam beberapa hal perlu menambahkan potongan-potongan yang tidak memiliki interpretasi geometris. 

Dugaan Hodge menegaskan bahwa untuk jenis ruang yang sangat bagus yang disebut varietas aljabar projektif.

; Identifikasi

Sesuai ''[[Tree#pola|pola]]'' maka [[Route#identifikasi|identifikasi]] via [[realisasi|https://github.com/chetabahana/tree/actions]] dari [[Tree#metode|instance]] yang [[Tree#model|dimodelkan]] dalam [[Trace|implementasi]] pada ''[[data|https://github.com/chetabahana/chetabahana.github.io/blob/Chetabahana/_data/_feeds/_section/_skema/tree.json]]'' untuk [[skema|https://chetabahana.github.io/#chetabahana-skema?pad=6]] dari [[diagram|https://chetabahana.github.io/tree]] ini [[disetel|https://github.com/chetabahana/chetabahana.github.io/tree/master/_feeds/section/skema/tree]] di [[Tree#collections|collections]] dan [[disusun|https://chetabahana.github.io/skema/js/draw/Tree.js]] dengan [[konfigurasi|https://github.com/chetabahana/tree/blob/gh-pages/package.json]]:<br><br>

<table>
<tr><th rowspan="3">Object</th><th rowspan="3">Instance</th><th colspan="2">Eksternal</th><th colspan="6">Internal</th><th colspan="2">Eksternal</th><th rowspan="3">All</th></tr>
<tr><th rowspan="2" textAlign='center' verticalAlign='middle'>Get</th><th rowspan="2">Input</th><th colspan="3">Interaksi Input (Query)</th><th colspan="3">Interaksi Output (Result)</th><th rowspan="2">Output</th><th rowspan="2">Set</th></tr>
<tr><th>Fix</th><th>Let</th><th>Uji</th><th>Let</th><th>Uji</th><th>Fix*</th></tr>
<tr align="center"><td rowspan="3">[[tree|https://github.com/MarketLeader/marketleader.github.io/wiki/Toko-ke-Stok]]</td><td align="left">[[route|https://github.com/chetabahana/chetabahana.github.io/blob/master/_feeds/section/skema/sequence/method/method1.md]]</td><td title="Start">-</td><td>7,37
</td><td>-</td><td>2</td><td>3</td><td>4</td><td>3</td><td>-</td><td>7,37</td><td>-</td><td rowspan="3">140</td></tr>
<tr align="center"><td align="left">[[channel|https://github.com/chetabahana/chetabahana.github.io/blob/master/_feeds/section/skema/sequence/method/method1.md]]</td><td title="Start">-</td><td>20,20,28,28</td><td>-</td><td>4</td><td>4</td><td>7</td><td>9</td><td>-</td><td>7,13,20,28,28</td><td>-</td></tr>
</table>

Catatan (lihat tanda bintang <code>(*)</code>pada tabel di atas & no. 7 pada bagan di bawah):    

===Mekanika===

[[Mekanika (Mechanics)|https://id.m.wikipedia.org/wiki/Mekanika]] juga berarti ilmu pengetahuan yang mempelajari gerakan suatu benda serta efek gaya dalam gerakan itu. 

Cabang ilmu Mekanika terbagi dua ; Mekanika Statik dan Mekanika Dinamik, sedang Mekanika Dinamik dapat dibagi dua pula, yaitu Kinematik dan Kinetik.

Perbedaan pengelompokan antara mekanika dengan [[Collections#geometri|geometri]] adalah bahwasanya objectnya bewujud atau mempunyai bentuk namun dia disertai dengan efek gaya (mekanik).

[[Teori Yang-Mills|https://en.wikipedia.org/wiki/Yang%E2%80%93Mills_existence_and_mass_gap]] objeknya partikel, [[Teori Navier-Stokes|https://en.wikipedia.org/wiki/Navier%E2%80%93Stokes_existence_and_smoothness]] objeknya turbulensi. 

Keduanya sama² mengenai efek gaya. Bedanya adalah bahwasanya yang satu bicara tentang bentuk gaya statik sedangkan yang lain bicara tentang gaya dinamik. 

====Partikel====

* [[Yang-Mills and Mass Gap|https://sinarharapan.net/2018/01/yang-mills-mass-gap/]]

[[Teori Yang-Mills|https://en.wikipedia.org/wiki/Yang%E2%80%93Mills_existence_and_mass_gap]] dan selisih massa adalah generalisasi dari teori elektromagnetisme Maxwell dimana medan elektromagnetik khrom itu sendiri membawa dugaan. 

<br>Sebagai teori medan klasik memiliki solusi perjalanan dengan kecepatan cahaya sehingga versi kuantum harus menjelaskan partikel tak bermassa (gluon). 

Namun, fenomena didalilkan dari keelutan pengungkungan warna hanya menyatakan terikat gluon, membentuk partikel masif. 

Fenomena ini merupakan kesenjangan massa. Aspek lain dari pengungkungan adalah kebebasan asimtotik yang membuatnya dibayangkan bahwa teori kuantum Yang-Mills ada tanpa pembatasan untuk skala energi rendah. 

Masalahnya adalah untuk menetapkan bukti cermat keberadaan teori kuantum Yang-Mills dan selisih massa.

Pernyataan resmi dari masalah ini diberikan oleh Arthur Jaffe dan Edward Witten.

Sebuah solusi diklaim oleh peneliti Korea Selatan pada tahun 2013 dianggap tidak cukup.[6]

[[Implementasi#partikel|<img src=https://user-images.githubusercontent.com/36441664/83946824-5faf0b00-a83d-11ea-8e48-b3551297b17a.png width=300>]]

; Risalah
* [[Official Problem Description|https://www.claymath.org/sites/default/files/yangmills.pdf]]
* [[Status of the Problem by Michael Douglas|https://claymath.msri.org/yangmillsexistence.mov]]
* [[Lecture by Lorenzo Sadun|https://claymath.msri.org/yangmillsexistence.mov]]
Hukum fisika kuantum berlaku bagi dunia partikel elementer sebagaimana hukum mekanika klasik Newton berlaku bagi dunia makroskopis. 

<br>Hampir setengah abad yang lalu, Yang dan Mills memperkenalkan kerangka kerja baru yang luar biasa untuk menggambarkan partikel elementer menggunakan struktur yang juga terjadi dalam geometri. 

Teori Quantum Yang-Mills sekarang menjadi dasar dari sebagian besar teori partikel elementer, dan prediksinya telah diuji di banyak laboratorium eksperimental, tetapi dasar matematikanya masih belum jelas. 

Keberhasilan penggunaan teori Yang-Mills untuk menggambarkan interaksi kuat partikel-partikel elementer bergantung pada sifat mekanis kuantum yang halus yang disebut "celah massa": partikel-partikel kuantum memiliki massa positif, meskipun gelombang klasik bergerak dengan kecepatan cahaya. 

Properti ini telah ditemukan oleh fisikawan dari percobaan dan dikonfirmasi oleh simulasi komputer, tetapi masih belum dipahami dari sudut pandang teoritis. 

Kemajuan dalam membangun keberadaan teori Yang-Mills dan kesenjangan massa akan membutuhkan pengenalan ide-ide baru yang mendasar baik dalam fisika dan matematika.

; Identifikasi
Sesuai ''[[Tree#pola|pola]]'' maka [[Route#identifikasi|identifikasi]] via [[realisasi|https://github.com/chetabahana/tree/actions]] dari [[Tree#metode|instance]] yang [[Tree#model|dimodelkan]] dalam [[Trace|implementasi]] pada ''[[data|https://github.com/chetabahana/chetabahana.github.io/blob/Chetabahana/_data/_feeds/_section/_skema/tree.json]]'' untuk [[skema|https://chetabahana.github.io/#chetabahana-skema?pad=6]] dari [[diagram|https://chetabahana.github.io/tree]] ini [[disetel|https://github.com/chetabahana/chetabahana.github.io/tree/master/_feeds/section/skema/tree]] di [[Tree#collections|collections]] dan [[disusun|https://chetabahana.github.io/skema/js/draw/Tree.js]] dengan [[konfigurasi|https://github.com/chetabahana/tree/blob/gh-pages/package.json]]:<br><br>

<table>
<tr><th rowspan="3">Object</th><th rowspan="3">Instance</th><th colspan="2">Eksternal</th><th colspan="6">Internal</th><th colspan="2">Eksternal</th><th rowspan="3">All</th></tr>
<tr><th rowspan="2" textAlign='center' verticalAlign='middle'>Get</th><th rowspan="2">Input</th><th colspan="3">Interaksi Input (Query)</th><th colspan="3">Interaksi Output (Result)</th><th rowspan="2">Output</th><th rowspan="2">Set</th></tr>
<tr><th>Fix</th><th>Let</th><th>Uji</th><th>Let</th><th>Uji</th><th>Fix*</th></tr>
<tr align="center"><td rowspan="3">[[tree|https://github.com/MarketLeader/marketleader.github.io/wiki/Toko-ke-Stok]]</td><td align="left">[[route|https://github.com/chetabahana/chetabahana.github.io/blob/master/_feeds/section/skema/sequence/method/method1.md]]</td><td title="Start">-</td><td>7,37
</td><td>-</td><td>2</td><td>3</td><td>4</td><td>3</td><td>-</td><td>7,37</td><td>-</td><td rowspan="3">140</td></tr>
<tr align="center"><td align="left">[[channel|https://github.com/chetabahana/chetabahana.github.io/blob/master/_feeds/section/skema/sequence/method/method1.md]]</td><td title="Start">-</td><td>20,20,28,28</td><td>-</td><td>4</td><td>4</td><td>7</td><td>9</td><td>-</td><td>7,13,20,28,28</td><td>-</td></tr>
</table>

Catatan (lihat tanda bintang <code>(*)</code>pada tabel di atas & no. 7 pada bagan di bawah):    

====Turbulen====

* [[Persamaan Navier-Stokes, Hanya Bisa Menjelaskan Fenomena yang Sederhana|https://sinarharapan.net/2018/01/persamaan-navier-stokes-hanya-bisa-menjelaskan-fenomena-yang-sederhana/]]

[[Teori Navier-Stokes|https://en.wikipedia.org/wiki/Navier%E2%80%93Stokes_existence_and_smoothness]] menjelaskan gerak fluida. Meskipun masalah ini ditemukan pada abad ke-19, mereka masih tidak dipahami dengan baik. 

<br>Masalahnya adalah untuk membuat kemajuan menuju teori matematika yang akan memberikan wawasan tentang persamaan ini.

[[Implementasi#turbulen|<img src=https://user-images.githubusercontent.com/36441664/85412349-b0d83200-b593-11ea-8cb0-15de138a96bc.gif width=400>]]

; Risalah
* [[Official Problem Description|https://www.claymath.org/sites/default/files/navierstokes.pdf]]
* [[Lecture by Luis Cafarelli|https://claymath.msri.org/navierstokes.mov]]
Gelombang mengikuti perahu kami saat kami berkelana melintasi danau, dan arus udara yang bergolak mengikuti penerbangan kami dengan jet modern. 

<br>Matematikawan dan ahli fisika percaya bahwa penjelasan untuk dan prediksi angin dan turbulensi dapat ditemukan melalui pemahaman solusi untuk persamaan Navier-Stokes. 

Meskipun persamaan ini ditulis pada abad ke-19, pemahaman kita tentang mereka tetap minimal. Tantangannya adalah membuat kemajuan substansial menuju teori matematika yang akan membuka kunci rahasia yang tersembunyi dalam persamaan Navier-Stokes.

; Identifikasi
Sesuai ''[[Tree#pola|pola]]'' maka [[Route#identifikasi|identifikasi]] via [[realisasi|https://github.com/chetabahana/tree/actions]] dari [[Tree#metode|instance]] yang [[Tree#model|dimodelkan]] dalam [[Trace|implementasi]] pada ''[[data|https://github.com/chetabahana/chetabahana.github.io/blob/Chetabahana/_data/_feeds/_section/_skema/tree.json]]'' untuk [[skema|https://chetabahana.github.io/#chetabahana-skema?pad=6]] dari [[diagram|https://chetabahana.github.io/tree]] ini [[disetel|https://github.com/chetabahana/chetabahana.github.io/tree/master/_feeds/section/skema/tree]] di [[Tree#collections|collections]] dan [[disusun|https://chetabahana.github.io/skema/js/draw/Tree.js]] dengan [[konfigurasi|https://github.com/chetabahana/tree/blob/gh-pages/package.json]]:<br><br>

<table>
<tr><th rowspan="3">Object</th><th rowspan="3">Instance</th><th colspan="2">Eksternal</th><th colspan="6">Internal</th><th colspan="2">Eksternal</th><th rowspan="3">All</th></tr>
<tr><th rowspan="2" textAlign='center' verticalAlign='middle'>Get</th><th rowspan="2">Input</th><th colspan="3">Interaksi Input (Query)</th><th colspan="3">Interaksi Output (Result)</th><th rowspan="2">Output</th><th rowspan="2">Set</th></tr>
<tr><th>Fix</th><th>Let</th><th>Uji</th><th>Let</th><th>Uji</th><th>Fix*</th></tr>
<tr align="center"><td rowspan="3">[[tree|https://github.com/MarketLeader/marketleader.github.io/wiki/Toko-ke-Stok]]</td><td align="left">[[route|https://github.com/chetabahana/chetabahana.github.io/blob/master/_feeds/section/skema/sequence/method/method1.md]]</td><td title="Start">-</td><td>7,37
</td><td>-</td><td>2</td><td>3</td><td>4</td><td>3</td><td>-</td><td>7,37</td><td>-</td><td rowspan="3">140</td></tr>
<tr align="center"><td align="left">[[channel|https://github.com/chetabahana/chetabahana.github.io/blob/master/_feeds/section/skema/sequence/method/method1.md]]</td><td title="Start">-</td><td>20,20,28,28</td><td>-</td><td>4</td><td>4</td><td>7</td><td>9</td><td>-</td><td>7,13,20,28,28</td><td>-</td></tr>
</table>

Catatan (lihat tanda bintang <code>(*)</code>pada tabel di atas & no. 7 pada bagan di bawah):    

===Algoritma===
Pengertian [[Algoritma|https://en.m.wikipedia.org/wiki/Algorithm]] dalam matematika dan ilmu komputer, algoritma adalah urutan atau langkah-langkah untuk penghitungan atau untuk menyelesaikan suatu masalah yang ditulis secara berurutan. 

Sehingga, algoritma pemrograman adalah urutan atau langkah-langkah untuk menyelesaikan masalah [[Programming|pemrograman komputer]].

Perbedaan pengelompokan antara algoritma dengan [[Collections#geometri|geometri]] dan [[Collections#mekanika|mekanika]] adalah bahwasanya objectnya itu tidak berwujud atau tidak berbentuk contohnya bilangan² atau kerumitan. 

[[Hipotesis Riemann|https://en.wikipedia.org/wiki/Riemann_hypothesis]] objeknya adalah bilangan² sedangkan [[Masalah P versus NP|https://en.wikipedia.org/wiki/P_versus_NP_problem]] objeknya adalah tentang rumit atau mudahnya suatu masalah. 

Keduanya adalah objek yang sama² tak memiliki wujud. Bedanya adalah bahwasanya bilangan² itu objek diam (statis), sedangkan yang satunya lagi objeknya berubah² (dinamis).

====Bilangan====
* [[Hipotesis Riemann Hampir Terpecahkan Tahun 2004|https://sinarharapan.net/2018/01/hipotesis-riemann-hampir-terpecahkan-tahun-2004/]]

[[Hipotesis Riemann|https://en.wikipedia.org/wiki/Riemann_hypothesis]] adalah bahwa semua nol nontrivial dari kelanjutan analitis dari ''[[fungsi zeta Riemann|https://id.m.wikipedia.org/wiki/Fungsi_zeta_Riemann]]'' memiliki bagian nyata dari 1/2. 

<br>Sebuah bukti atau pembantahan ini akan memiliki implikasi yang luas di [[teori bilangan|https://id.m.wikipedia.org/wiki/Teori_bilangan]], khususnya untuk distribusi [[bilangan prima|https://id.m.wikipedia.org/wiki/Bilangan_prima]]. 

Hipotesis ini merupakan [[masalah kedelapan Hilbert|https://id.m.wikipedia.org/wiki/Masalah_Hilbert]], dan masih dianggap masalah terbuka yang penting pada abad kemudian.

[[Implementasi#bilangan|<img src=https://user-images.githubusercontent.com/36441664/84144957-48f9f580-aa83-11ea-8171-2499767ae319.png width=600>]]

; Risalah
* [[Official Problem Description|https://www.claymath.org/sites/default/files/official_problem_description.pdf]]
* [[The Riemann Hypothesis by Peter Sarnak|https://www.claymath.org/sites/default/files/sarnak_rh_0.pdf]]
* [[Riemann's 1859 Manuscript|https://www.claymath.org/publications/riemanns-1859-manuscript]]
* [[Lecture by Jeff Vaaler|https://claymath.msri.org/riemannhypothesis.mov]]

Beberapa angka memiliki sifat khusus yang tidak dapat dinyatakan sebagai produk dari dua angka yang lebih kecil, misalnya, 2, 3, 5, 7, dll. 

<br>Angka tersebut disebut bilangan prima, dan mereka memainkan peran penting, baik dalam matematika murni maupun aplikasinya. 

Distribusi bilangan prima tersebut di antara semua bilangan asli tidak mengikuti pola reguler. 

Namun, ahli matematika Jerman GFB Riemann (1826 - 1866) mengamati bahwa frekuensi bilangan prima sangat erat kaitannya dengan perilaku fungsi yang rumit.

    ζ = 1 + 1/2 s  + 1/3 s  + 1/4 s  + ...

disebut fungsi  Riemann Zeta . Riemann hipotesis menegaskan bahwa semua  menarik  solusi dari persamaan

    ζ (s) = 0

berbaring di garis lurus vertikal tertentu.

Ini telah diperiksa untuk 10.000.000.000.000 solusi pertama. 

Sebuah bukti bahwa itu benar untuk setiap solusi yang menarik akan menjelaskan banyak misteri di sekitar distribusi bilangan prima.

; Identifikasi
Sesuai ''[[Tree#pola|pola]]'' maka [[Route#identifikasi|identifikasi]] via [[realisasi|https://github.com/chetabahana/tree/actions]] dari [[Tree#metode|instance]] yang [[Tree#model|dimodelkan]] dalam [[Trace|implementasi]] pada ''[[data|https://github.com/chetabahana/chetabahana.github.io/blob/Chetabahana/_data/_feeds/_section/_skema/tree.json]]'' untuk [[skema|https://chetabahana.github.io/#chetabahana-skema?pad=6]] dari [[diagram|https://chetabahana.github.io/tree]] ini [[disetel|https://github.com/chetabahana/chetabahana.github.io/tree/master/_feeds/section/skema/tree]] di [[Tree#collections|collections]] dan [[disusun|https://chetabahana.github.io/skema/js/draw/Tree.js]] dengan [[konfigurasi|https://github.com/chetabahana/tree/blob/gh-pages/package.json]]:<br><br>

<table>
<tr><th rowspan="3">Object</th><th rowspan="3">Instance</th><th colspan="2">Eksternal</th><th colspan="6">Internal</th><th colspan="2">Eksternal</th><th rowspan="3">All</th></tr>
<tr><th rowspan="2" textAlign='center' verticalAlign='middle'>Get</th><th rowspan="2">Input</th><th colspan="3">Interaksi Input (Query)</th><th colspan="3">Interaksi Output (Result)</th><th rowspan="2">Output</th><th rowspan="2">Set</th></tr>
<tr><th>Fix</th><th>Let</th><th>Uji</th><th>Let</th><th>Uji</th><th>Fix*</th></tr>
<tr align="center"><td rowspan="3">[[tree|https://github.com/MarketLeader/marketleader.github.io/wiki/Toko-ke-Stok]]</td><td align="left">[[route|https://github.com/chetabahana/chetabahana.github.io/blob/master/_feeds/section/skema/sequence/method/method1.md]]</td><td title="Start">-</td><td>7,37
</td><td>-</td><td>2</td><td>3</td><td>4</td><td>3</td><td>-</td><td>7,37</td><td>-</td><td rowspan="3">140</td></tr>
<tr align="center"><td align="left">[[channel|https://github.com/chetabahana/chetabahana.github.io/blob/master/_feeds/section/skema/sequence/method/method1.md]]</td><td title="Start">-</td><td>20,20,28,28</td><td>-</td><td>4</td><td>4</td><td>7</td><td>9</td><td>-</td><td>7,13,20,28,28</td><td>-</td></tr>
</table>

Catatan (lihat tanda bintang <code>(*)</code>pada tabel di atas & no. 7 pada bagan di bawah):    

====Kelompok====
* [[Problem P vs NP: Tak Mudah Dilakukan Komputer, namun Mudah untuk Diperiksa|https://sinarharapan.net/2018/01/problem-p-vs-np-masalah-yang-tak-mudah-dilakukan-komputer-namun-mudah-untuk-diperiksa/]]

[[Masalah P versus NP|https://en.wikipedia.org/wiki/P_versus_NP_problem]] adalah apakah, untuk semua masalah [[algoritme|https://id.m.wikipedia.org/wiki/Algoritme]] dapat memverifikasi sebuah solusi yang diberikan cepat (yaitu, dalam waktu polinomial), algoritme juga dapat menemukan solusi yang cepat. 

<br>Yang pertama menggambarkan kelas masalah disebut NP, sedangkan yang kedua menggambarkan P. Pertanyaannya adalah apakah atau tidak semua masalah di NP juga di P. 

Ini umumnya dianggap salah satu pertanyaan terbuka yang paling penting dalam matematika dan ilmu komputer teoretis karena memiliki konsekuensi yang luas dengan masalah lain dalam matematika, biologi, filsafat, dan kriptografi.

''<blockquote>Jika P = NP, maka dunia akan menjadi tempat yang sangat berbeda dari biasanya yang kita anggap hal itu terjadi. Tidak akan ada nilai khusus dalam 'lompatan kreatif', ada kesenjangan mendasar antara pemecahan masalah dan mengakui solusi setelah hal itu ditemukan. Setiap orang akan bisa menghargai simfoni karya Mozart, setiap orang akan bisa mengikuti argumen Gauss langkah demi langkah ... 
 — Scott Aaronson, MIT</blockquote>''

Matematikawan dan ilmuwan komputer berharap bahwa P ≠ NP.

[[Implementasi#kelompok|<img src=https://user-images.githubusercontent.com/36441664/83947957-71e07780-a844-11ea-9076-1cc768c7d851.png width=400>]]

; Risalah
* [[Official Problem Description|https://www.claymath.org/sites/default/files/pvsnp.pdf]]
* [[Minesweeper|https://www.claymath.org/sites/default/files/minesweeper.pdf]]
* [[Lecture by Vijaya Ramachandran|https://claymath.msri.org/pversusnp.mov]]

Misalkan Anda sedang mengatur akomodasi perumahan untuk sekelompok empat ratus mahasiswa. Ruang terbatas dan hanya seratus siswa yang akan menerima tempat di asrama. 

<br>Untuk memperumit masalah, Dekan telah memberi Anda daftar pasangan siswa yang tidak kompatibel, dan meminta agar tidak ada pasangan dari daftar ini muncul dalam pilihan akhir Anda. 

Ini adalah contoh dari apa yang oleh para ilmuwan komputer disebut sebagai masalah NP, karena mudah untuk memeriksa apakah pilihan yang diberikan dari seratus siswa yang diusulkan oleh rekan kerja memuaskan (yaitu, tidak ada pasangan yang diambil dari daftar rekan kerja Anda juga muncul pada daftar dari kantor Dean), namun tugas menghasilkan daftar seperti itu dari awal tampaknya sangat sulit sehingga sama sekali tidak praktis. 

Memang, jumlah total cara memilih seratus siswa dari empat ratus pelamar lebih besar dari jumlah atom di alam semesta yang diketahui! 

Dengan demikian tidak ada peradaban masa depan yang bisa berharap untuk membangun superkomputer yang mampu menyelesaikan masalah dengan kekerasan; yaitu dengan memeriksa setiap kemungkinan kombinasi 100 siswa. 

Namun, kesulitan yang tampak ini mungkin hanya mencerminkan kurangnya kecerdikan programmer Anda. 

Bahkan, salah satu masalah yang menonjol dalam ilmu komputer adalah menentukan apakah ada pertanyaan yang jawabannya dapat dengan cepat diperiksa, tetapi yang membutuhkan waktu yang sangat lama untuk diselesaikan dengan prosedur langsung apa pun. 

Masalah-masalah seperti yang tercantum di atas tentu saja tampaknya seperti ini, tetapi sejauh ini belum ada yang berhasil membuktikan bahwa salah satu dari mereka benar-benar sangat keras seperti yang terlihat, yaitu, bahwa memang tidak ada cara yang layak untuk menghasilkan jawaban dengan bantuan komputer. 

''[[Stephen Cook|https://id.wikipedia.org/wiki/Stephen_Cook]]'' dan ''[[Leonid Levin|https://en.wikipedia.org/wiki/Leonid_Levin]]'' merumuskan masalah P (yaitu, mudah ditemukan) versus NP (yaitu, mudah diperiksa) secara independen pada tahun 1971.

[[<img src=https://user-images.githubusercontent.com/36441664/84744560-a5a66480-afdd-11ea-87ed-4cdedd1b08fe.jpg>|https://id.wikipedia.org/wiki/Stephen_Cook]]

; Identifikasi
Sesuai ''[[Tree#pola|pola]]'' maka [[Route#identifikasi|identifikasi]] via [[realisasi|https://github.com/chetabahana/tree/actions]] dari [[Tree#metode|instance]] yang [[Tree#model|dimodelkan]] dalam [[Trace|implementasi]] pada ''[[data|https://github.com/chetabahana/chetabahana.github.io/blob/Chetabahana/_data/_feeds/_section/_skema/tree.json]]'' untuk [[skema|https://chetabahana.github.io/#chetabahana-skema?pad=6]] dari [[diagram|https://chetabahana.github.io/tree]] ini [[disetel|https://github.com/chetabahana/chetabahana.github.io/tree/master/_feeds/section/skema/tree]] di [[Tree#collections|collections]] dan [[disusun|https://chetabahana.github.io/skema/js/draw/Tree.js]] dengan [[konfigurasi|https://github.com/chetabahana/tree/blob/gh-pages/package.json]]:<br><br>

<table>
<tr><th rowspan="3">Object</th><th rowspan="3">Instance</th><th colspan="2">Eksternal</th><th colspan="6">Internal</th><th colspan="2">Eksternal</th><th rowspan="3">All</th></tr>
<tr><th rowspan="2" textAlign='center' verticalAlign='middle'>Get</th><th rowspan="2">Input</th><th colspan="3">Interaksi Input (Query)</th><th colspan="3">Interaksi Output (Result)</th><th rowspan="2">Output</th><th rowspan="2">Set</th></tr>
<tr><th>Fix</th><th>Let</th><th>Uji</th><th>Let</th><th>Uji</th><th>Fix*</th></tr>
<tr align="center"><td rowspan="3">[[tree|https://github.com/MarketLeader/marketleader.github.io/wiki/Toko-ke-Stok]]</td><td align="left">[[route|https://github.com/chetabahana/chetabahana.github.io/blob/master/_feeds/section/skema/sequence/method/method1.md]]</td><td title="Start">-</td><td>7,37
</td><td>-</td><td>2</td><td>3</td><td>4</td><td>3</td><td>-</td><td>7,37</td><td>-</td><td rowspan="3">140</td></tr>
<tr align="center"><td align="left">[[channel|https://github.com/chetabahana/chetabahana.github.io/blob/master/_feeds/section/skema/sequence/method/method1.md]]</td><td title="Start">-</td><td>20,20,28,28</td><td>-</td><td>4</td><td>4</td><td>7</td><td>9</td><td>-</td><td>7,13,20,28,28</td><td>-</td></tr>
</table>

Catatan (lihat tanda bintang <code>(*)</code>pada tabel di atas & no. 7 pada bagan di bawah):    

Dapat Anda lihat bahwa [[Masalah P versus NP|https://en.wikipedia.org/wiki/P_versus_NP_problem]] adalah identik dengan topik yang kita bahas. 

Coba saja Anda tentukan mana kasus atau kelompok yang paling rumit dari semuanya? Jelas jika belum ada pemecahan² lain yang valid maka sepertinya mustahil dapat dibuktikan. 

''<blockquote>If it is easy to check that a solution to a problem is correct, is it also easy to solve the problem? This is the essence of '''[[Collections#kelompok|the P vs NP question]]'''. Typical of the NP problems is that of the Hamiltonian Path Problem: given N cities to visit, how can one do this without visiting a city twice? If you give me a solution, I can easily check that it is correct. But I cannot so easily find a solution.</blockquote>''

; Keterkaitan

Pada sesi berikutnya kita akan bahas dimana kasus yang sudah terpecahkan saya tempatkan sebagai subjek dengan ''enam (6)'' kasus lainnya yang belum dapat dipecahkan. 

[[Bagan#index|<img src=https://user-images.githubusercontent.com/36441664/72317825-1236d380-36cd-11ea-9533-cf8d02b52c23.png>]]

Dengan formasi ini akan diterapkan konfigurasi secara berurut yaitu angka ''[[3|tiga (3)]]'' ke ''[[Sizing|formasi-139]]'', angka ''[[4|empat (4)]]'' ke ''[[Sorting|formasi-248]]'', angka ''[[5|lima (5)]]'' ke ''[[Optimasi|formasi-285]]'', angka
''[[6|enam (6)]]'' ke ''[[Looping|formasi-114]]'' dan berujung di angka ''[[7|tujuh (7)]]'' ke ''[[Directions|formasi-157]]''.

[[Skema#Implementasi|<img src=https://user-images.githubusercontent.com/36441664/85205823-ea1c6200-b347-11ea-8d6f-1ab3f9ec95c8.gif width=500>]]

Dapat Anda lihat bahwa bagan pengelompokkan terbagi masing² dalam ''tiga (3)'' sub atau bagian sesuai dengan ''[[Collections#Integrasi|formasi (3,4,5)]]'' yang sudah kita bahas sebelumnya.

```json

id: 26

---+-----+-----
 1 | 1   | 6
---+-----+-----
 2 | 7   | 9
---+-----+-----
 3 | 10  | 68
---+-----+-----
 4 | 69  | 104
---+-----+-----
 5 | 105 | 122
---+-----+-----
 6 | 123 | 140
---+-----+-----
 7 | 141 | 159
---+-----+-----
 8 | 160 | 175
---+-----+-----
 9 | 175 | 191
---+-----+-----
10 | 192 | 227
---+-----+-----
```

Sampai tahap ini metoda pengelompokan pada project ini saya cukupkan sampai disini. 

Sekian.<br><br>
'''SALAM Sukses!'''<br>
'''© [[Chetabahana Project|https://github.com/MarketLeader]]'''<br>
[[<img src=https://stackexchange.com/users/flair/5054985.png>|https://stackoverflow.com/users/4058484/chetabahana?tab=profile]]  

==''Referensi''==
* [[Integrate different sources of 'omics data' in environmental science|https://userweb.eng.gla.ac.uk/umer.ijaz/]]
* [[Passing multiple variables in a jekyll include and detecting wich ones are assigned|https://stackoverflow.com/questions/25094970/passing-multiple-variables-in-a-jekyll-include-and-detecting-wich-ones-are-assig]]

<table>
  <thead>
    <tr>
      <th>[[:arrow_double_up:|https://github.com/chetabahana/chetabahana.github.io/wiki]]</th>
      <th>[[:arrow_up_small:|https://github.com/MarketLeader/marketleader.github.io/wiki]]</th>
      <th>[[Home|:rewind:]] [[Home|Intro]]</th>
      <th>[[:arrow_backward:|https://github.com/MarketLeader/Tutorial-HelloWorld/wiki]] [[Prev|https://github.com/MarketLeader/Tutorial-HelloWorld/wiki]]</th>
      <th>[[:repeat:|https://github.com/MarketLeader/Tutorial-HelloWorld/wiki]] [[Repo|https://github.com/chetabahana/chetabahana.github.io]]</th>
      <th>[[Next|https://github.com/MarketLeader/Google-Sites-API/wiki]] [[:arrow_forward:|https://github.com/MarketLeader/Google-Sites-API/wiki]]</th>
      <th>[[Last|https://github.com/MarketLeader/Google-Content-API/wiki]] [[:fast_forward:|https://github.com/MarketLeader/Google-Content-API/wiki]]</th>
      <th>[[:arrow_down_small:|https://github.com/MarketLeader/Google-AdWords-API/wiki]]</th>
      <th>[[:arrow_double_down:|https://github.com/MarketLeader/Toko-Chetabahana/wiki]]</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>[[<img src="https://avatars1.githubusercontent.com/u/36441664?v=3&s=20" class="avatar">|https://github.com/chetabahana]]</td><td colspan="7">This [[Collections#table-of-contents|wiki]] is courtesy of '''[[Chetabahana Project|https://github.com/MarketLeader]]'''. Find all of them on '''[[Project Map|https://github.com/chetabahana/chetabahana.github.io/wiki/Skema#Implementasi]]'''.</td><td>[[<img src="https://avatars2.githubusercontent.com/u/36441943?v=3&s=20">|https://github.com/MarketLeader]]</td>   
    </tr>
  </tbody>
</table>
