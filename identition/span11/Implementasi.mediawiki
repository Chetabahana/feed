__TOC__

==Arsitektur==

* [[Dokumentasi - githooks|https://mirrors.edge.kernel.org/pub/software/scm/git/docs/githooks.html]]
* [[How can I get Git to follow symlinks?|https://stackoverflow.com/a/18692600/4058484]]

''[[Implementasi|https://en.wikipedia.org/wiki/Implementation]]'' adalah sebuah tindakan atau proses gagasan yang sudah disusun dengan cermat dan detail. Implementasi ini umumnya tuntas sesudah di anggap permanen.

[[Programming#desain|<img src=https://user-images.githubusercontent.com/36441664/83968203-ad854b00-a8f1-11ea-9c75-e3e0c72bfc30.jpg>]]

Pada project ini kita akan bahas tentang pengejawantahan dari implementasi lebih ke realisasi aplikasi, atau pelaksanaan rencana, ide, model, desain, spesifikasi, standar, algoritma, atau kebijakan untuk spesifikasi atau standar perhitungan kedalam [[Programming#desain|bahasa pemrograman]].

[[https://user-images.githubusercontent.com/36441664/84744663-be167f00-afdd-11ea-89ec-0a89f3e7b94f.jpg]]

Detilnya dibahas ''[[Attribute#branching|terpisah]]'' yang berujung pada konfigurasi ''[[Program]]'' dalam ''[[3#skema|tiga (3)]]'' proses: (1). '''''[[Bagan]]''''' (formasi-329), (2). '''''[[Diagram]]''''' (formasi-289), dan (3). '''''[[Mapping]]''''' (formasi-168).

===Struktur===

* [[Document Object Model|https://eloquentjavascript.net/14_dom.html]]
* [[DOM API Comparisons|https://accessibility.linuxfoundation.org/a11yspecs/atspi/adoc/a11y-dom-apis.html]]

[[Program#bagan|<img src=https://user-images.githubusercontent.com/36441664/72199762-e8827000-3472-11ea-8185-d8caf6c77af3.jpg>]]

<source lang="Ruby">
directory _assets  
   directory a  
     file a1 <- weight: 1    
     file a2 <- weight: 2       
   directory b    
     file b1 <- weight: 1    
     file b2 <- weight: 2        
     directory c    
        file c1 <- weight: 1    
        file c2 <- weight: 2  
</source>

===Githooks===

[[https://user-images.githubusercontent.com/36441664/84744616-b22abd00-afdd-11ea-8e41-1fbe57183b3c.jpg]]

```
#!/bin/sh
# (replace "find ." with "find ./<path>" below, to work with only specific paths)

# (these lines are really all one line, on multiple lines for clarity)
# ...find symlinks which do not dereference to directories...
find . -type l -exec test '!' -d {} ';' -print -exec sh -c \
# ...remove the symlink blob, and add the content diff, to the index/cache
    'git rm --cached "$1"; diff -au /dev/null "$1" | git apply --cached -p1 -' \
# ...and call out to "sh".
    "process_links_to_nondir" {} ';'

# the end
```
Dalam pemrograman Hooks dapat Anda tempatkan di direktori hooks untuk memicu tindakan pada titik tertentu dalam eksekusi git. Kait yang tidak memiliki set bit yang dapat dieksekusi diabaikan.

<br>Tehnik ini sering sekali digunakan dalam pembuatan plugin,component dalam suatu aplikasi baik cms,ecommerce,intranet aplikasi.

Secara default direktori hooks adalah $ GIT_DIR / hooks, tetapi itu dapat diubah melalui variabel konfigurasi core.hooksPath (lihat git-config (1)).

Sebelum Git memanggil sebuah hook, ia mengubah direktori kerjanya menjadi $ GIT_DIR dalam repositori kosong atau root dari pohon yang berfungsi dalam repositori non-telanjang. 

Pengecualian adalah kait yang dipicu selama push (pra-terima, perbarui, pasca-terima, pasca-pembaruan, push-to-checkout) yang selalu dijalankan dalam $ GIT_DIR.

Hooks bisa mendapatkan argumen mereka melalui lingkungan, argumen command-line, dan stdin. Lihat dokumentasi untuk setiap kait di bawah ini untuk detailnya.

git init dapat menyalin kait ke repositori baru, tergantung pada konfigurasinya. Lihat bagian "TEMPLATE DIRECTORY" di git-init (1) untuk detailnya. Ketika sisa dokumen ini mengacu pada "kait default", itu berbicara tentang templat default yang dikirimkan bersama Git.

===Mekanisme===

====Parameter====

Alur '''[[Flowchart#Parameter|6 ke 9]]''' berasal dari alur [[Flowchart#Delegasi|5 ke 6]] adalah proses ke-1/2 Formasi '''25-29 (id: 83)''' pada [[Flowchart#Eksternal|Partisi ke-5]] atau ke-11/12 dari [[Flowchart#Model|Flowchart]]. Scope: Blok 16 ke (39,50) via (25,26).

[[Program#assessment|<img src=https://user-images.githubusercontent.com/36441664/72606783-d52f4300-3951-11ea-852b-3d262dd20f10.jpg>]]

[[7|<img src=https://user-images.githubusercontent.com/36441664/75158168-24824380-5748-11ea-8687-13d3f3183e15.png width=200>]]

Angka ''[[29#khusus|1771]]'' memiliki sekaligus '''''[[2|dua (2)]]''''' angka ''[[7|tujuh (7)]]'' demikian juga dengan akar digitalnya sehingga menjadikannya sebagai angka paling dominan disini.

```
+-----+-----+-----+-----+-----+-----+-----+
|   1 |   2 |   3 |   4 |   5 |  6  |   7 |
+-----+-----+-----+-----+-----+-----+-----+
|     |     |     |     |     |     |     |
+-----+-----+-----+-----+-----+-----+-----+

```

Cermin

''<blockquote><b>11 is the top left prime position</b> it cascades out to the left and circles back around the system.</blockquote>''

```
+-----+-----+-----+-----+-----+-----+-----+
|   1 |   2 |   3 |   4 |   5 |   6 |   7 |
+-----+-----+-----+-----+-----+-----+-----+
|     |     |     |  11 |     |     |     |
+-----+-----+-----+-----+-----+-----+-----+
```

Batas

''<blockquote>1 or 19 is rather the top right prime position it mirrors 11, cascading out to the right and back around the system.</blockquote>''

```
+-----+-----+-----+-----+-----+-----+-----+
|   1 |   2 |   3 |   4 |   5 |   6 |   7 |
+-----+-----+-----+-----+-----+-----+-----+
|  19 |     |     |  11 |  19 |     |     |
+-----+-----+-----+-----+-----+-----+-----+
```

Mirror

''<blockquote><b>2 and 10 act as "doubler" alternating between the doubling of prime next to them and across</b> (Red: illustrated by an <b>[[hexagon|https://en.wikipedia.org/wiki/Hexagon]]</b> covering number <b>2</b>).</blockquote>''

'''''<blockquote>The number 6 multiplies itself trough the system as a straight line.</blockquote>'''''

''<blockquote>13 is <b>rather</b> the top right prime position it mirrors <b>18</b>, cascading out to the <b>left</b> and back around the system.</blockquote>''


```
+-----+-----+-----+-----+-----+-----+-----+
|   1 |   2 |   3 |   4 |   5 |   6 |   7 |
+-----+-----+-----+-----+-----+-----+-----+
|  19 |  17 |     |  11 |  19 |  18 |     |
+-----+-----+-----+-----+-----+-----+-----+
```

''<blockquote><b>The number 3 multiplies itself trough the system as a perfect square.</b>. It bounces from position 3 to 6, to 9, to 12. All multiplies of 3 are found in these positions (Red: illustrated by a perfect square covering number <b>3</b>).</blockquote>''

```
+-----+-----+-----+-----+-----+-----+-----+
|   1 |   2 |   3 |   4 |   5 |   6 |   7 |
+-----+-----+-----+-----+-----+-----+-----+
|  19 |  17 |  12 |  11 |  19 |  18 |     |
+-----+-----+-----+-----+-----+-----+-----+
```

''<blockquote>5 is the first prime position. <b>It functions as a star in some respects bouncing back and forth across the system counter clockwise</b> (Red: illustrated by [[counter clockwise|https://en.wikipedia.org/wiki/Clockwise]] of bouncing [[star polygon|https://en.wikipedia.org/wiki/Star_polygon]])</blockquote>''

```
+-----+-----+-----+-----+-----+-----+-----+
|   1 |   2 |   3 |   4 |   5 |  6  |   7 |
+-----+-----+-----+-----+-----+-----+-----+
|                 1771                    |
+-----+-----+-----+-----+-----+-----+-----+

+-----+-----+-----+-----+-----+-----+-----+
|   1 |   2 |   3 |   4 |   5 |  6  |   7 |
+-----+-----+-----+-----+-----+-----+-----+
         17       |        71 - 17        


+-----+-----+-----+-----+-----+-----+-----+
|   1 |   2 |   3 |   4 |   5 |  6  |   7 |
+-----+-----+-----+-----+-----+-----+-----+
         17       |  11 |   71 - 17 - 11  
```

''<blockquote>7 is the second prime position. <b>It mirrors the path of 5 touching each postions exactly opposite criss-crossing 5's path clockwise</b> (Red: illustrated by [[clockwise|https://en.wikipedia.org/wiki/Clockwise]] of bouncing [[star polygon|https://en.wikipedia.org/wiki/Star_polygon]])</blockquote>''


'''''X<sub>7</sub> = 71 - 17 - 11 = 43'''''<br>

```
+-----+-----+-----+-----+-----+-----+-----+
|   1 |   2 |   3 |   4 |   5 |   6 |   7 |
+-----+-----+-----+-----+-----+-----+-----+
|  19 |  17 |  12 |  11 |  19 |  18 |  43 |
+-----+-----+-----+-----+-----+-----+-----+

```

[[https://user-images.githubusercontent.com/36441664/77237821-f46e7900-6bfd-11ea-92a5-477e3920f35f.jpg]]

```
Twin Primes:
P(5, 7), (11, 13), (17, 19)
│    │    │
5:19 │    │
│    7:17 │
└──  5 + 7 = 12
          11 │
          │  └── 12 + 7 = 19
          │
          └──    11 + 7 = 18
             └── 71 - 17 - 11 = 43
                                └── 4 + 3 = 7

∑Terms = 19 + 17 + 12 + 11 + 19 + 18 + 43 = 139
                                            └── 1 + 3 + 9 = 13
                                                            └── 1 + 3 = 4
Permutations:
∑(5,7,11,13,17,19)=72
6 & 7 = 67 = 19th prime
6+7=13, 7+2=9, 67+72=139
```
Jumlahnya ''[[Attribute|139]]'' cocok dengan angka kunci pertama..

<br>Untuk selanjutnya kita sebut saja formasi ini sebagai ''[[Attribute|formasi 1-3-9]]''.

Sampai disini kita sudah menentukan metoda untuk kunci pertama yaitu ''[[Attribute|139]]''.

```
+-----+-----+-----+-----+-----+-----+-----+
|   1 |   2 |   3 |   4 |   5 |   6 |   7 |
+-----+-----+-----+-----+-----+-----+-----+
|  19 |  17 |  12 |  11 |  19 |  18 |  43 | 139
+-----+-----+-----+-----+-----+-----+-----+

```

Keistimewaan angka 139 menurut [[wikipedia|https://en.m.wikipedia.org/wiki/139_(number)]]:
<blockquote>
* 139 adalah bilangan prima ke-34. 
* Ini adalah prime kembar dengan 137. 
* Karena 141 adalah semiprime, 139 adalah prima Chen. 
* 139 adalah prime terkecil sebelum gap prime length 10. [1]
* Angka ini adalah jumlah dari lima bilangan prima berurutan ( 19 + 23 + 29 + 31 + 37 ).
* Ini adalah faktor terkecil dari 64079.
* Ini juga merupakan faktor terkecil dari sembilan istilah pertama dari urutan Euclid-Mullin, menjadikannya istilah kesepuluh.
* 139 adalah angka bahagia dan angka yang sangat non-palindromik.
* Simak untuk ''[[keistimewaan² lainnya|https://primes.utm.edu/curios/page.php/139.html]]''.
</blockquote>

Dari teori ''DNA'' maka fenomena yang paling cocok dengan uraian di atas adalah ''[[Rekombinasi DNA|https://en.wikipedia.org/wiki/DNA#Genetic_recombination]]'' yaitu mencakup pemutusan dan penggabungan kembali sel kromososm.

<br><table>
<tr><td>[[<img src=https://user-images.githubusercontent.com/36441664/75581426-0431ec00-5a9c-11ea-8708-82e1ff2624c6.png width=300>|https://en.wikipedia.org/wiki/DNA#Genetic_recombination]]</td><td>[[<img src=https://user-images.githubusercontent.com/36441664/75581511-36434e00-5a9c-11ea-8adf-522cb9568c4f.png width=300>|https://en.wikipedia.org/wiki/DNA#Genetic_recombination]]</td></tr>
</table>

====Identifikasi====

Alur '''[[Flowchart#Identifikasi|9 ke 10]]''' berasal dari alur [[Flowchart#Parameter|6 ke 9]] adalah proses ke-2/2 Formasi '''25-29 (id: 83)''' pada [[Flowchart#Eksternal|Partisi ke-5]] atau ke-12/12 dari [[Flowchart#Model|Flowchart]]. Scope: Blok 17 ke (51,68) via (27,29).

Pada bagian ini kita akan bahas tentang detil [[Flowchart#pewarisan|pewarisan]] dari Diagram Flowchart berikut dengan [[Flowchart#instantiation|instantiation]] dan [[Flowchart#implementasi|implementasinya]]. 

```json

id: 43

---+-----+-----
 1 | 1   | 8
---+-----+-----
 2 | 9   | 14
---+-----+-----
 3 | 15  | 25
---+-----+-----
 4 | 26  | 45
---+-----+-----
 5 | 46  | 56
---+-----+-----
 6 | 57  | 66
---+-----+-----
 7 | 67  | 73
---+-----+-----
 8 | 74  | 80
---+-----+-----
 9 | 81  | 89
---+-----+-----
```

```
Twin Primes: 
(5,7), (11,13), (17,19)
```

Horizontal
```
+----+----+----+----+----+----+
|  5 |  7 | 11 | 13 | 17 | 19 |
+----+----+----+----+----+----+
```
Hexagon
```
     1    |    2    |    3    |
+----+----+----+----+----+----+
|  5 |  7 | 11 | 13 | 17 | 19 |
+----+----+----+----+----+----+
        7 |      13 |      19 |

Permutations:
7 x 13 x 19 = 1729
1729 = 19 x 91
```

Untuk mendapatkan kombinasi ulang maka kita lakukan pemecahan dan penyatuan kembali seperti peta ''[[Rekombinasi DNA|https://en.wikipedia.org/wiki/DNA#Genetic_recombination]]'' berikut ini:

<br>[[<img src=https://user-images.githubusercontent.com/36441664/74346136-b18cda80-4de1-11ea-8da0-8d2bcd831717.png width=400>|https://en.wikipedia.org/wiki/DNA#Genetic_recombination]]


Transformasi 
```
     1    |    2    |    3    |    3    |    2    |    1    |
+----+----+----+----+----+----+----+----+----+----+----+----+
|  5 |  7 | 11 | 13 | 17 | 19 |    |    |    |    |    |    |
+----+----+----+----+----+----+----+----+----+----+----+----+
                         |  Φ |
```

; Posisi-1

''<blockquote>1 or 13 is rather the top right prime position it mirrors 11, cascading out to the right and back around the system.</blockquote>''

Seharusnya: 

''<blockquote><b>1 or 19 is the top right prime position it mirrors 11</b>, cascading out to the right and back around the system.</blockquote>''

Sequence:
```
                         |  1    2    3    4    5    6   7
+----+----+----+----+----+----+----+----+----+----+----+----+
|  5 |  7 | 11 | 13 | 17 | 19 |    |    |    |    |    |    |
+----+----+----+----+----+----+----+----+----+----+----+----+
                         |
```

; Posisi-2

''<blockquote><b>2</b> and <b>10</b> act as "doubler" alternating between the doubling of prime next to them and across (Red: illustrated by an [[hexagon|https://en.wikipedia.org/wiki/Hexagon]] covering number <b>2</b>).</blockquote>''

```
                         |  1    2    3    4    5    6    7
+----+----+----+----+----+----+----+----+----+----+----+----+
|  5 |  7 | 11 | 13 | 17 | 19 |    |    |    |    |    |    |
+----+----+----+----+----+----+----+----+----+----+----+----+
                       | |      17
                       |         ^
                       └─ ─  ─ ─┘

                         |  1    2    3    4    5    6   7
+----+----+----+----+----+----+----+----+----+----+----+----+
|  5 |  7 | 11 | 13 |    | 19 | 17 |    |    |    |    |    |
+----+----+----+----+----+----+----+----+----+----+----+----+
                         |       √
```

; Posisi-3

''<blockquote>The number <b>3</b> multiplies itself trough the system as a perfect square. It bounces from position 3 to 6, to 9, to 12. All multiplies of 3 are found in these positions (Red: illustrated by a [[perfect square|https://en.wikipedia.org/wiki/Quadrilateral]] covering number <b>3</b>).</blockquote>''

```
                         |  1    2    3    4    5    6    7
+----+----+----+----+----+----+----+----+----+----+----+----+
|  5 |  7 | 11 | 13 |    | 19 | 17 |    |    |    |    |    |
+----+----+----+----+----+----+----+----+----+----+----+----+
                  |      |           12
                  |                   ^
                  └─ ─ ─ ─ ─ ─   ─ ─┘

                         |  1    2    3    4    5    6   7
+----+----+----+----+----+----+----+----+----+----+----+----+
|  5 |  7 | 11 |    |    | 19 | 17 | 12 |    |    |    |    |
+----+----+----+----+----+----+----+----+----+----+----+----+
                         |            √
```

; Posisi-4

''<blockquote>The number <b>4</b> multiplies itself trough the system as a [[Equilateral Triangles|https://en.wikipedia.org/wiki/Equilateral_triangle]]. It bounces from position 4, 8, and 12. All multiplies of 4 are found in these positions ''(Red: illustrated by a [[triangle|https://en.wikipedia.org/wiki/Triangle]] covering number <b>4</b>).<blockquote>''
''<blockquote><b>11</b> is the top left prime position it cascades out to the left and circles back around the system (Red: illustrated by [[counter clockwise|https://en.wikipedia.org/wiki/Clockwise]] of [[golden ratio|https://en.wikipedia.org/wiki/Golden_ratio]])</blockquote>''

```
                         |  1    2    3    4    5    6    7
+----+----+----+----+----+----+----+----+----+----+----+----+
|  5 |  7 | 11 |    |    | 19 | 17 | 12 |    |    |    |    |
+----+----+----+----+----+----+----+----+----+----+----+----+
             |      |                     11
             |                             ^
             └─ ─ ─ ─ ─ ─ ─ ─ ── ─ ─ ─ ─┘

                         |  1    2    3    4    5    6   7
+----+----+----+----+----+----+----+----+----+----+----+----+
|  5 |  7 |    |    |    | 19 | 17 | 12 | 11 |    |    |    |
+----+----+----+----+----+----+----+----+----+----+----+----+
                         |                 √
```

; Posisi-5

''<blockquote><b>5</b> is the first prime position. It functions as a star in some respects bouncing back and forth across the system counter clockwise (Red: illustrated by [[counter clockwise|https://en.wikipedia.org/wiki/Clockwise]] of bouncing [[star polygon|https://en.wikipedia.org/wiki/Star_polygon]])
</blockquote>''
''<blockquote>All other exception are multiplies of 5 and 7 or 11 and 13. All squarred primes land in position 1. All twin primes (pairs on the sides of 6 and 12 up) to be a multiplies of 12.</blockquote>''

```
                         |  1    2    3    4    5    6    7
+----+----+----+----+----+----+----+----+----+----+----+----+
|  5 |  7 |    |    |    | 19 | 17 | 12 | 11 |    |    |    |
+----+----+----+----+----+----+----+----+----+----+----+----+
                         |  |                  19
                            |                   ^
                            └─ ─ ─ ─ ─ ─ ─ ─ ─┘

                         |  1    2    3    4    5    6   7
+----+----+----+----+----+----+----+----+----+----+----+----+
|  5 |  7 |    |    |    | 19 | 17 | 12 | 11 | 19 |    |    |
+----+----+----+----+----+----+----+----+----+----+----+----+
                         |                      √
```

; Posisi-6

''<blockquote>The number <b>6</b> multiplies itself trough the system as a straight line. It bounces back and forth between 6 and 12 (Red: illustrated by a [[straight line|https://en.wikipedia.org/wiki/Line_(geometry)]]).</blockquote>''
''<blockquote>All other exception are multiplies of 5 and 7 or 11 and 13. All squarred primes land in position 1. All twin primes (pairs on the sides of 6 and 12 up) to be a multiplies of 12.</blockquote>''

```
                         |  1    2    3    4    5    6    7
+----+----+----+----+----+----+----+----+----+----+----+----+
|  5 |  7 |    |    |    | 19 | 17 | 12 | 11 | 19 |    |    |
+----+----+----+----+----+----+----+----+----+----+----+----+
        |                |                 |        11+7
        |                                  |         ^
        └── ─ ─ ─ ─ ─ ─ ─ ─ ── ─ ─ ─ ─  └── ─ ─ ─┘

                         |  1    2    3    4    5    6   7
+----+----+----+----+----+----+----+----+----+----+----+----+
|  5 |    |    |    |    | 19 | 17 | 12 | 11 | 19 | 18 |    |
+----+----+----+----+----+----+----+----+----+----+----+----+
                         |                           √
```

; Posisi-7

''<blockquote><b>7</b> is the second prime position. It mirrors the path of 5 touching each postions exactly opposite criss-crossing 5's path clockwise (Red: illustrated by [[clockwise|https://en.wikipedia.org/wiki/Clockwise]] of bouncing [[star polygon|https://en.wikipedia.org/wiki/Star_polygon]]).</blockquote>''

```
                         |  1    2    3    4    5    6    7
+----+----+----+----+----+----+----+----+----+----+----+----+
|  5 |    |    |    |    | 19 | 17 | 12 | 11 | 19 | 18 |    |
+----+----+----+----+----+----+----+----+----+----+----+----+
   |                     |                              18+5 ?
   |                                                      ^
   └─ ─ ─ ─ ─ ─ ─ ─ ── ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─  ─┘
```

''<blockquote>Exception to the prime position occur when prime interact with each other. The first exception ('''25''') to the prime position is when 5 multiplies by itself or is '''squared'''. The second exception (35) is 5 interracting with 7.</blockquote>''

; 114 + 18 + 5² = 114 + 43 = 157

```
                         |  1    2    3    4    5    6    7
+----+----+----+----+----+----+----+----+----+----+----+----+
|  5 |    |    |    |    | 19 | 17 | 11 | 12 | 19 | 18  |    |
+----+----+----+----+----+----+----+----+----+----+----+----+
   |                     |                              18+5²
   |                                                      ^
   └─ ─ ─ ─ ─ ─ ─ ─ ── ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─  ─┘

                         |  1    2    3    4    5    6   7
+----+----+----+----+----+----+----+----+----+----+----+----+
|    |    |    |    |    | 19 | 17 | 12 | 11 | 19 | 18 | 43 |
+----+----+----+----+----+----+----+----+----+----+----+----+
                         |                                √
```

```
Twin Primes: 
(5,7), (11,13), (17,19)

+-----+-----+-----+-----+-----+-----+-----+
|   1 |   2 |   3 |   4 |   5 |  6  |   7 |
+-----+-----+-----+-----+-----+-----+-----+
|                 1771                    |
+-----+-----+-----+-----+-----+-----+-----+


+-----+-----+-----+-----+-----+-----+-----+
|   1 |   2 |   3 |   4 |   5 |  6  |   7 |
+-----+-----+-----+-----+-----+-----+-----+
         17       |        71 - 17        


+-----+-----+-----+-----+-----+-----+-----+
|   1 |   2 |   3 |   4 |   5 |  6  |   7 |
+-----+-----+-----+-----+-----+-----+-----+
         17       |  11 |   71 - 17 - 11 = 43


+-----+-----+-----+-----+-----+-----+-----+
|   1 |   2 |   3 |   4 |   5 |   6 |   7 |
+-----+-----+-----+-----+-----+-----+-----+
|  19 |  17 |  12 |  11 |  19 |  18 |  43 | 139
+-----+-----+-----+-----+-----+-----+-----+  |
|               1             |   3 |   9 |  └── 1»3»9
+-----+-----+-----+-----+-----+-----+-----+

Permutations:
19, 17+12=29, 11+19=30, 18+43=61 » d(1,2,3,7)
139 = d(1,2+3,7) = d(1,5,7) = d(67) = d(13) = d(4)
119 + 217 + 312 + 411 + 519 + 618 + 743 = 2939 = 29 & 39
```

''Rekombinasi'' melibatkan pemecahan dan penyatuan kembali '''''[[2|dua (2) kromosom]]''''' (M dan F) untuk menghasilkan '''''[[2|dua (2) kromosom]]''''' yang disusun ulang (C1 dan C2).

[[Program#matriks|<img src=https://user-images.githubusercontent.com/36441664/74215243-0261dd80-4cd3-11ea-83f3-280bdc27e407.png>]]

Disini formasi bilateral ada di angka '''30 ke 60''' yang bergabung dengan angka 9 menjadi 69 objek karenanya proses kita alihkan ke angka dua (2) pada bagan berikutnya.

[[<img src=https://user-images.githubusercontent.com/36441664/71309214-f0cd2980-2437-11ea-837f-61ed14e3c213.png>|https://github.com/chetabahana/sequence/wiki]]

===Metoda===

[[https://user-images.githubusercontent.com/36441664/70721601-75c58e00-1d28-11ea-8329-d780c27ee7bd.png]]

[[https://user-images.githubusercontent.com/36441664/69497959-189e9f80-0f15-11ea-86bd-457378ca7567.png]]

====Saring====
https://jekyllrb.com/docs/templates/ <br>
sort: 'weight'

<source lang="Ruby">
{% assign assets = site.assets | sort: 'weight' %}
{% for asset in assets %} 
{ 
    "title": {{ asset.title }}
} 
{% unless forloop.last %},{% endunless %}
{% endfor %}
</source>

===Hasil Saring===
<source lang="Ruby">
{  
    "title": file a1     <- weight: 1 
}, 
{  
    "title": file b1     <- weight: 1
}, 
{  
    "title": file c1     <- weight: 1
}, 
{  
    "title": file a2     <- weight: 2
}, 
{  
    "title": file b2     <- weight: 2
}, 
{  
    "title": file c2     <- weight: 2
}
</source>


===Target Saring===
<source lang="Ruby">
{   
   "title": directory a,   
   "files": [               
      {   
         "title": file a1     <-- weight: 1 
      },                       
      {   
         "title": file a2     <-- weight: 2
      }                       
   ]                       
}, 
{   
   "title": directory b,
   "files": [             
      {   
         "title": file b1     <-- weight: 1
      },                        
      {   
         "title": file b2     <-- weight: 2   
      },                        
      {   
         "title": directory c,
         "files": [            
            {   
               "title": file c1      <-- weight: 1 
            },                        
            {   
               "title": file c2      <-- weight: 2  
            }                                         
         ]           
      }                                         
   ]                                                       
}   
</source>

==Pemetaan==
* [[Jekyll Liquid Template: Use Variable of Layout in Page|https://stackoverflow.com/questions/44782518/jekyll-liquid-template-use-variable-of-layout-in-page]]
* [[How can I pass variables between DRY templates and ncludes in Jekyll|https://stackoverflow.com/questions/26742959/how-can-i-pass-variables-between-dry-templates-and-ncludes-in-jekyll]]

<code>{{ asset.title }}</code> => Capital

===Titik Awal===
<source lang="Ruby">
{% assign assets = site.assets | sort: 'weight' %}
{% for asset in assets %} 
{ 
    "title": {{ asset.title }}
} 
{% unless forloop.last %},{% endunless %}
{% endfor %}
</source>

[[<img src=https://chetabahana.files.wordpress.com/2018/06/assets.png>|https://chetabahana.github.io/images/github/skema/assets-sort-weight.png?raw=true]]

===Konversi Awal===
<source lang="Ruby">
_assets/head/head.md
_assets/skema/sequence.md
_assets/skema/sequence/object.md
_assets/head/beranda.md
_assets/skema/flowchart.md
_assets/skema/sequence/method.md
_assets/head/abstrak.md
_assets/skema/railroad.md
_assets/head/skema.md
_assets/head/eksekusi.md
_assets/head/portfolio.md
_assets/head/network.md
_assets/head/publikasi.md
_assets/head/diskusi.md
_assets/head/bottom.md
</source>


<source lang="Ruby">
_assets/head/head.md
_assets/head/beranda.md
_assets/head/abstrak.md
_assets/head/skema.md
_assets/skema/sequence.md
_assets/skema/sequence/object.md
_assets/skema/sequence/method.md
_assets/skema/flowchart.md
_assets/skema/railroad.md
_assets/head/eksekusi.md
_assets/head/portfolio.md
_assets/head/network.md
_assets/head/publikasi.md
_assets/head/diskusi.md
_assets/head/bottom.md
</source>

===Penyederhanaan===
<source lang="Ruby">
_assets/head/
_assets/head/
_assets/head/
_assets/head/
_assets/skema/sequence/
_assets/skema/sequence/
_assets/skema/
_assets/skema/
_assets/skema/
_assets/head/
_assets/head/
_assets/head/
_assets/head/
_assets/head/
_assets/head/
</source>

<source lang="Ruby">
_assets/head/
_assets/skema/sequence/
_assets/skema/
</source>

<source lang="Ruby">
_assets/skema/sequence/
_assets/head/
_assets/skema/
</source>

<source lang="Ruby">
_assets/skema/sequence/
_assets/skema/sequence/object.md
_assets/skema/sequence/method.md
</source>

===Konversi Ahir===
<source lang="Ruby">
_assets/skema/sequence/md
_assets/skema/sequence/object.md
_assets/skema/sequence/method.md
_assets/skema/flowchart.md
_assets/skema/railroad.md
</source>

<source lang="Ruby">
_assets/head/skema/md
_assets/skema/sequence/md
_assets/skema/sequence/object.md
_assets/skema/sequence/method.md
_assets/skema/flowchart.md
_assets/skema/railroad.md
</source>

<source lang="Ruby">
_assets/head/md
_assets/head/beranda.md
_assets/head/abstrak.md
_assets/head/skema/md
_assets/skema/sequence/md
_assets/skema/sequence/object.md
_assets/skema/sequence/method.md
_assets/skema/flowchart.md
_assets/skema/railroad.md
_assets/head/eksekusi.md
_assets/head/portfolio.md
_assets/head/network.md
_assets/head/publikasi.md
_assets/head/diskusi.md
_assets/head/bottom.md
</source>

<source lang="Ruby">
_assets/head/md
   _assets/head/beranda.md
   _assets/head/abstrak.md
   _assets/head/skema/md
      _assets/skema/sequence/md
         _assets/skema/sequence/object.md
         _assets/skema/sequence/method.md
      _assets/skema/flowchart.md
      _assets/skema/railroad.md
   _assets/head/eksekusi.md
   _assets/head/portfolio.md
   _assets/head/network.md
   _assets/head/publikasi.md
   _assets/head/diskusi.md
   _assets/head/bottom.md
</source>

===Struktur Ahir===
<source lang="Ruby">
{   
   "title": "Beranda",
   --> atribut..   
}, 
{   
   "title": "Abstrak",
   --> atribut..   
}, 
{   
   "title": "Skema",
   --> atribut..,     
   "files": [             
      {   
         "title": "Sequence",
          --> atribut..,     
         "files": [            
            {   
               "title": "Object",
               --> atribut..     
            },                        
            {   
               "title": "Method",
                --> atribut..      
            }                                         
         ]           
      },
      {   
         "title": "Flowchart",
         --> atribut..     
      },                        
      {   
         "title": "Railroad",
         --> atribut..     
      },                        
   ]                                                       
}, 
{   
   "title": "Eksekusi",
   --> atribut..        
}, 
{   
   "title": "Portfolio",
   --> atribut..          
}, 
{   
   "title": "Publikasi",
   --> atribut..         
}, 
{   
   "title": "Diskusi",
   --> atribut..        
}, 
{   
   "title": "Bottom",
   --> atribut..       
}
</source>

==Pemrograman==
https://github.com/chetabahana/chetabahana.github.io/blob/master/feed.json
https://github.com/chetabahana/chetabahana.github.io/blob/master/_includes/feed/Json
===Size===
size: https://shopify.github.io/liquid/filters/size/

<source lang="Ruby">
    [
{% assign my_assets = site.assets | sort: 'weight' %}
{% assign my_size = 0 %}
{% for asset in my_assets %}
   {% assign my_split = asset.path | split: "/" %}
   {% assign size = my_split | size %}
   {% if my_size < size  %}
      {% assign my_size = size %}
   {% endif %}
        { 
            "size": {{ my_size }}
        }{% unless forloop.last %},{% endunless %}
{% endfor %}
    ]
</source>

Catatan: Bila dijumpai Error [[nil:NilClass|https://github.com/chetabahana/chetabahana.github.io/commit/dda092196c3a1628ff02a4c10383896c097481ff/checks#step:3:12]] sbb:

```
Error: could not read file /srv/jekyll/_assets/docs/Header: undefined method `split' for nil:NilClass

```
[[Solusinya|https://stackoverflow.com/questions/16678473/how-to-fix-undefined-method-split-for-nilnilclass-error]] adalah [[safe navigation operator (&.):|http://mitrev.net/ruby/2015/11/13/the-operator-in-ruby/]]
```
nil&.split(",")
```


<source lang="Ruby">
    [
        {
            "size": 3
        },
        {
            "size": 3
        },
        {
            "size": 4
        },
        {
            "size": 4
        },
        {
            "size": 4
        },
        {
            "size": 4
        },
        {
            "size": 4
        },
        {
            "size": 4
        },
        {
            "size": 4
        },
        {
            "size": 4
        },
        {
            "size": 4
        },
        {
            "size": 4
        },
        {
            "size": 4
        },
        {
            "size": 4
        },
        {
            "size": 4
        }
    ]
</source>

===Reversed===

[[optional|https://github.com/Shopify/liquid/wiki/Liquid-for-Designers#optional-arguments]]

<source lang="Ruby">
    [
{% assign my_assets = site.assets | sort: 'weight' %}
{% assign my_size = 2 %}
{% assign my_path = "" | split: "," %}
{% for asset in my_assets %}
   {% assign my_split = asset.path | split: "/" %}
   {% assign size = my_split | size %}
   {% if size > my_size %}
      {% assign my_path = my_path | push:size %}
      {% assign my_size = size %}
   {% endif %}
{% endfor %}
{% for my_size in my_path reversed %}
        {
            "size": {{ my_size }}
        }{% unless forloop.last %},{% endunless %}
{% endfor %}
    ]
</source>

<source lang="Ruby">
    [
        {
            "size": 4
        },
        {
            "size": 3
        }
    ]
</source>

===Path===

[[optional|https://github.com/Shopify/liquid/wiki/Liquid-for-Designers#optional-arguments]]

<source lang="Ruby">
    [
{% assign my_assets = site.assets | sort: 'weight' %}
{% assign my_size = 2 %}
{% assign my_path = "" | split: "," %}
{% for asset in my_assets %}
   {% assign my_split = asset.path | split: "/" %}
   {% assign size = my_split | size %}
   {% if size > my_size %}
      {% assign my_path = my_path | push:size %}
      {% assign my_size = size %}
   {% endif %}
{% endfor %}
{% for my_size in my_path reversed %}
   {% for asset in my_assets %}
      {% assign my_split = asset.path | split: "/" %}
      {% assign size = my_split | size %}
      {% if size == my_size %}
         {
            "path": {{ asset.path | jsonify }}
         }{% unless forloop.last %},{% endunless %}
      {% endif %}
   {% endfor %}
{% endfor %}
    ]
</source>

<source lang="Ruby">
    [
        {
            "path": "_assets/skema/sequence/object.md"
        },
        {
            "path": "_assets/skema/sequence/method.md"
        },
        {
            "path": "_assets/head/head.md"
        },
        {
            "path": "_assets/skema/sequence.md"
        },
        {
            "path": "_assets/head/beranda.md"
        },
        {
            "path": "_assets/skema/flowchart.md"
        },
        {
            "path": "_assets/head/abstrak.md"
        },
        {
            "path": "_assets/skema/railroad.md"
        },
        {
            "path": "_assets/head/skema.md"
        },
        {
            "path": "_assets/head/eksekusi.md"
        },
        {
            "path": "_assets/head/portfolio.md"
        },
        {
            "path": "_assets/head/network.md"
        },
        {
            "path": "_assets/head/publikasi.md"
        },
        {
            "path": "_assets/head/diskusi.md"
        },
        {
            "path": "_assets/head/bottom.md"
        }
    ] 
</source>

===Capture===
<source lang="Ruby">
    [
{% assign my_assets = site.assets | sort: 'weight' %}
{% assign my_tab = "    " %}
{% assign my_size = 2 %}
{% assign my_path = "" | split: "," %}
{% for asset in my_assets %}
   {% assign my_split = asset.path | split: "/" %}
   {% assign size = my_split | size %}
   {% if size > my_size %}
      {% assign my_path = my_path | push:size %}
      {% assign my_size = size %}
   {% endif %}
{% endfor %}
{% assign my_paths = "" | split: "," %}
{% for my_size in my_path reversed %}
   {% for asset in my_assets %}
      {% unless asset.path contains "/head/" %}   
         {% assign my_split = asset.path | split: "/" %}
         {% assign size = my_split | size %}
         {% if size == my_size %}
            {% assign my_paths = my_paths | push:asset %}
         {% endif %}
      {% endunless %}
   {% endfor %}
{% endfor %}
{% assign my_captures = "" | split: "::" %}
{% for my_path in my_paths %}
   {% assign my_size = my_path.path | split: "/" | size %}
   {% capture my_capture %}
{% for i in (1..my_size) %}{{ my_tab }}{% endfor %}{
{% for i in (1..my_size) %}{{ my_tab }}{% endfor %}{{ my_tab }}"path": {{ my_path.path | jsonify }}
{% for i in (1..my_size) %}{{ my_tab }}{% endfor %}}{% unless forloop.last %},{% endunless %}
   {% endcapture %}
   {% assign my_captures =  my_captures | push:my_capture %}
{% endfor %}
{% for my_capture in my_captures %}
   {{ my_capture }}
{% endfor %}
{% assign my_asset = "" | split: "," %}
{% for asset in my_assets %}
   {% if asset.path contains "/head/" %} 
      {% assign my_asset = my_asset | push:asset %}
   {% endif %}
{% endfor %}
{% for asset in my_asset %}
{{ my_tab }}{{ my_tab }}{
{{ my_tab }}{{ my_tab }}{{ my_tab }}"path": {{ asset.path | jsonify }}
{{ my_tab }}{{ my_tab }}}{% unless forloop.last %},{% endunless %}
{% endfor %}
{{ my_tab }}]
</source>

<source lang="Ruby">
    [
                {
                    "path": "_assets/skema/sequence/object.md"
                },
                {
                    "path": "_assets/skema/sequence/method.md"
                },
            {
                "path": "_assets/skema/sequence.md"
            },
            {
                "path": "_assets/skema/flowchart.md"
            },
            {
                "path": "_assets/skema/railroad.md"
            },
        {
            "path": "_assets/head/head.md"
        },
        {
            "path": "_assets/head/beranda.md"
        },
        {
            "path": "_assets/head/abstrak.md"
        },
        {
            "path": "_assets/head/skema.md"
        },
        {
            "path": "_assets/head/eksekusi.md"
        },
        {
            "path": "_assets/head/portfolio.md"
        },
        {
            "path": "_assets/head/network.md"
        },
        {
            "path": "_assets/head/publikasi.md"
        },
        {
            "path": "_assets/head/diskusi.md"
        },
        {
            "path": "_assets/head/bottom.md"
        }
    ]
</source>

===Index===
<source lang="Ruby">
    [
{% assign my_assets = site.assets | sort: 'weight' %}
{% assign my_tab = "    " %}
{% assign my_size = 2 %}
{% assign my_path = "" | split: "," %}
{% for asset in my_assets %}
   {% assign my_split = asset.path | split: "/" %}
   {% assign size = my_split | size %}
   {% if size > my_size %}
      {% assign my_path = my_path | push:size %}
      {% assign my_size = size %}
   {% endif %}
{% endfor %}
{% assign my_paths = "" | split: "," %}
{% for my_size in my_path reversed %}
   {% for asset in my_assets %}
      {% unless asset.path contains "/head/" %}
         {% assign my_split = asset.path | split: "/" %}
         {% assign size = my_split | size %}
         {% if size == my_size %}
             {% assign my_paths = my_paths | push:asset %}
         {% endif %}
      {% endunless %}
   {% endfor %}
{% endfor %}
{% assign my_captures = "" | split: "," %}
{% for my_path in my_paths %}
   {% assign my_split = my_path.path | split: "/" %}
   {% assign my_part = my_split | size | minus:2 %}
   {% assign my_size = my_split | size | | times: 2 | minus:2 %}
   {% assign my_dir = my_split[my_part] | prepend: "/" | append: "/" %}
   {% assign my_title = my_path.title | downcase | prepend: my_dir | append: "/" %}
   {% assign my_index = "" | split: "," %}
   {% for my_push in my_paths %}
      {% if my_push.path contains my_title %}
         {% assign my_index = my_index | push:forloop.index0 %}
      {% endif %}
   {% endfor %}
   {% capture my_capture %}
        {% for i in (1..my_size) %}{{ my_tab }}{% endfor %}{
        {% for i in (1..my_size) %}{{ my_tab }}{% endfor %}{{ my_tab }}"path": {{ my_path.path | jsonify }}{% assign my_index_size = my_index | size %}{% if my_index_size > 0 %},
        {% for i in (1..my_size) %}{{ my_tab }}{% endfor %}{{ my_tab }}"item": [{% for index in my_index %}{{ my_captures[index] }}{% unless forloop.last %},{% endunless %}{% endfor %}
        {% for i in (1..my_size) %}{{ my_tab }}{% endfor %}{{ my_tab }}]{% endif %}
        {% for i in (1..my_size) %}{{ my_tab }}{% endfor %}}
   {% endcapture %}
   {% assign my_captures =  my_captures | push:my_capture %}
{% endfor %}
{% assign my_asset = "" | split: "," %}
{% for asset in my_assets %}
   {% if asset.path contains "/head/" %}
      {% assign my_asset = my_asset | push:asset %}
   {% endif %}
{% endfor %}
{% for asset in my_asset %}
   {% assign my_title = asset.title | downcase | prepend: "_assets/" | append: "/" %}
   {% assign my_index = "" | split: "," %}
   {% for my_path in my_paths %}
      {% assign my_size = my_path.path | split: "/" | size %}
      {% if my_size == 3 and my_path.path contains my_title %}
          {% assign my_index = my_index | push:forloop.index0 %}
      {% endif %}
   {% endfor %}
   {{ my_tab }}{{ my_tab }}{
   {{ my_tab }}{{ my_tab }}{{ my_tab }}"path": {{ asset.path | jsonify }}{% assign my_index_size = my_index | size %}{% if my_index_size > 0 %},
   {{ my_tab }}{{ my_tab }}{{ my_tab }}"item": [{% for index in my_index %}{{ my_captures[index] }}{% unless forloop.last %},{% endunless %}{% endfor %}
   {{ my_tab }}{{ my_tab }}{{ my_tab }}]{% endif %}
   {{ my_tab }}{{ my_tab }}}{% unless forloop.last %},{% endunless %}
{% endfor %}
{{ my_tab }}]
</source>

<source lang="Ruby">
    [
        {
            "path": "_assets/head/head.md"
        },
        {
            "path": "_assets/head/beranda.md"
        },
        {
            "path": "_assets/head/abstrak.md"
        },
        {
            "path": "_assets/head/skema.md",
            "item": [
                {
                    "path": "_assets/skema/sequence.md",
                    "item": [
                        {
                            "path": "_assets/skema/sequence/object.md"
                        },
                        {
                            "path": "_assets/skema/sequence/method.md"
                        }
                    ]
                },
                {
                    "path": "_assets/skema/flowchart.md"
                },
                {
                    "path": "_assets/skema/railroad.md"
                }
            ]
        },
        {
            "path": "_assets/head/eksekusi.md"
        },
        {
            "path": "_assets/head/portfolio.md"
        },
        {
            "path": "_assets/head/network.md"
        },
        {
            "path": "_assets/head/publikasi.md"
        },
        {
            "path": "_assets/head/diskusi.md"
        },
        {
            "path": "_assets/head/bottom.md"
        }
    ]
</source>

===Atribut===
* [[Jekyll array contains check|https://stackoverflow.com/a/50782089/4058484]]
Dengan beberapa penyempurnaan didapat [[code|https://github.com/chetabahana/chetabahana.github.io/blob/master/_includes/feed/Json]] dengan hasil yang cukup stabil sbb:

<source lang="Ruby">
{
    "version": "https://jsonfeed.org/version/1",
    "title": "{{ site.title | xml_escape }}",
    "description": {{ site.description | jsonify }},
    "home_page_url": "{{ "/" | absolute_url }}",
    "feed_url": "{{ "/feed.json" | absolute_url }}",
    "user_comment": "This feed allows you to read the posts from this site in any feed reader that supports the JSON Feed format.",
    "items": [{% assign assets = site.assets | sort:0 %}{% assign my_tab = "    " %}{% assign my_size = 2 %}{% assign my_path = "" | split: "," %}{% assign atributs = "weight, title, next, content, output, previous, relative_path, id, collection, excerpt, categories, ext, tags, path, url, draft, slug" | split:", " %}{% for asset in assets %}{% assign my_split = asset.path | split: "/" %}{% assign size = my_split | size %}{% if size > my_size %}{% assign my_path = my_path | push:size %}{% assign my_size = size %}{% endif %}{% endfor %}{% assign assets = site.assets | sort: 'weight' %}{% assign my_paths = "" | split: "," %}{% for my_size in my_path reversed %}{% for asset in assets %}{% unless asset.path contains "/head/" %}{% assign my_split = asset.path | split: "/" %}{% assign size = my_split | size %}{% if size == my_size %}{% assign my_paths = my_paths | push:asset %}{% endif %}{% endunless %}{% endfor %}{% endfor %}{% assign my_captures = "" | split: "," %}{% for my_asset in my_paths %}{% assign my_split = my_asset.path | split: "/" %}{% assign my_path_size = my_split | size %}{% assign my_part = my_split | size | minus:2 %}{% assign my_size = my_split | size | times:2 | minus:2 %}{% assign my_dir = my_split[my_part] | prepend: "/" | append: "/" %}{% assign my_title = my_asset.title | downcase | prepend: my_dir | append: "/" %}{% assign my_index = "" | split: "," %}{% for my_push in my_paths %}{% assign my_num = my_push.path | split: "/" | size | minus:my_path_size %}{% if my_num == 1 and my_push.path contains my_title %}{% assign my_index = my_index | push:forloop.index0 %}{% endif %}{% endfor %}{% capture my_capture %}
{% for i in (1..my_size) %}{{ my_tab }}{% endfor %}{
{% for i in (1..my_size) %}{{ my_tab }}{% endfor %}{{ my_tab }}"weight": {{ my_asset.weight | jsonify }},
{% for i in (1..my_size) %}{{ my_tab }}{% endfor %}{{ my_tab }}"title": {{ my_asset.title | jsonify }},{% for item in my_asset %}{% unless atributs contains item %} 
{% for i in (1..my_size) %}{{ my_tab }}{% endfor %}{{ my_tab }}{{ item | jsonify }}: {{ my_asset[item] | jsonify }},{% endunless %}{% endfor %}
{% for i in (1..my_size) %}{{ my_tab }}{% endfor %}{{ my_tab }}"path": {{ my_asset.path | jsonify }},
{% for i in (1..my_size) %}{{ my_tab }}{% endfor %}{{ my_tab }}"input": {% assign input = "" %}{% for item_hash in site.data.skema %}{% assign item = item_hash[1] %}{% unless item.title == null %}{% if item.title == my_asset.slug %}{% assign input = item.content %}{% endif %}{% endunless %}{% endfor %}{{ input | jsonify }},
{% for i in (1..my_size) %}{{ my_tab }}{% endfor %}{{ my_tab }}"content": {{ my_asset.content | jsonify }},
{% for i in (1..my_size) %}{{ my_tab }}{% endfor %}{{ my_tab }}"output": {{ my_asset.output | jsonify }},{% assign my_index_size = my_index | size %}{% if my_index_size > 0 %}
{% for i in (1..my_size) %}{{ my_tab }}{% endfor %}{{ my_tab }}"items": [{% for index in my_index %}{{ my_captures[index] }}{% unless forloop.last %},{% endunless %}{% endfor %}
{% for i in (1..my_size) %}{{ my_tab }}{% endfor %}{{ my_tab }}]{% else %}
{% for i in (1..my_size) %}{{ my_tab }}{% endfor %}{{ my_tab }}"items": []{% endif %}
{% for i in (1..my_size) %}{{ my_tab }}{% endfor %}}{% endcapture %}{% assign my_captures =  my_captures | push:my_capture %}{% endfor %}{% assign my_assets = "" | split: "," %}{% for asset in assets %}{% if asset.path contains "/head/" %}{% assign my_assets = my_assets | push:asset %}{% endif %}{% endfor %}{% for my_asset in my_assets %}{% assign my_title = my_asset.title | downcase | prepend: "_assets/" | append: "/" %}{% assign my_index = "" | split: "," %}{% for my_path in my_paths %}{% assign my_size = my_path.path | split: "/" | size %}{% if my_size == 3 and my_path.path contains my_title %}{% assign my_index = my_index | push:forloop.index0 %}{% endif %}{% endfor %}
{{ my_tab }}{{ my_tab }}{
{{ my_tab }}{{ my_tab }}{{ my_tab }}"weight": {{ my_asset.weight | jsonify }},
{{ my_tab }}{{ my_tab }}{{ my_tab }}"title": {{ my_asset.title | jsonify }},{% for item in my_asset %}{% unless atributs contains item %}
{{ my_tab }}{{ my_tab }}{{ my_tab }}{{ item | jsonify }}: {{ my_asset[item] | jsonify }},{% endunless %}{% endfor %}
{{ my_tab }}{{ my_tab }}{{ my_tab }}"path": {{ my_asset.path | jsonify }},
{{ my_tab }}{{ my_tab }}{{ my_tab }}"input": {% assign input = "" %}{% for item_hash in site.data %}{% assign item = item_hash[1] %}{% if item.title == my_asset.slug %}{% assign input = item.content %}{{ input | jsonify }}{% endif %}{% endfor %}{% if input == "" %}{{ input | jsonify }}{% endif %},
{{ my_tab }}{{ my_tab }}{{ my_tab }}"content": {{ my_asset.content | jsonify }},
{{ my_tab }}{{ my_tab }}{{ my_tab }}"output": {{ my_asset.output | jsonify }},{% assign my_index_size = my_index | size %}{% if my_index_size > 0 %}
{{ my_tab }}{{ my_tab }}{{ my_tab }}"items": [{% for index in my_index %}{{ my_captures[index] }}{% unless forloop.last %},{% endunless %}{% endfor %}
{{ my_tab }}{{ my_tab }}{{ my_tab }}]{% else %}
{{ my_tab }}{{ my_tab }}{{ my_tab }}"items": []{% endif %}
{{ my_tab }}{{ my_tab }}}{% unless forloop.last %},{% endunless %}{% endfor %}
{{ my_tab }}]
}
</source>

Penyederhanaan Hasil:  
[[https://chetabahana.github.io/feed.json|https://chetabahana.github.io/feed.json]]

<source lang="Ruby">
    [
        { 
            "weight": 1,
            "title": "Head",
            "items": []
        },
        { 
            "weight": 2,
            "title": "Beranda",
            "items": []
        },
        { 
            "weight": 3,
            "title": "Abstrak",
            "items": []
        },
        { 
            "weight": 4,
            "title": "Skema",
            "items": [
                { 
                "weight": 1,
                "title": "Sequence",
                    "item": [
                        { 
                        "weight": 1,
                        "title": "Object",
                            "items": []
                        },
                        { 
                        "weight": 2,
                        "title": "Method",
                            "items": []
                        }
                    ]
                },
                { 
                "weight": 2,
                "title": "Flowchart",
                    "items": []
                },
                { 
                "weight": 3,
                "title": "Railroad",
                    "items": []
                }
            ]
        },
        { 
            "weight": 5,
            "title": "Eksekusi",
            "items": []
        },
        { 
            "weight": 6,
            "title": "Portfolio",
            "items": []
        },
        { 
            "weight": 7,
            "title": "Network",
            "items": []
        },
        { 
            "weight": 8,
            "title": "Publikasi",
            "items": []
        },
        { 
            "weight": 9,
            "title": "Diskusi",
            "items": []
        },
        { 
            "weight": 10,
            "title": "Bottom",
            "items": []
        }
    ]
</source>

==Penerapan Hasil==
* Input API: [[https://github.com/MarketLeader|https://github.com/MarketLeader]] 
* Dokumentasi: [[https://github.com/MarketLeader/marketleader.github.io/wiki|https://github.com/MarketLeader/marketleader.github.io/wiki]]
* Implementasi: [[https://chetabahana.github.io/#chetabahana-skema|https://chetabahana.github.io/#chetabahana-skema]] 
* Dokumentasi Implementasi: [[https://github.com/MarketLeader/marketleader.github.io/wiki|https://github.com/MarketLeader/marketleader.github.io/wiki]]

[[https://user-images.githubusercontent.com/36441664/83467417-0db85f00-a4a4-11ea-8d68-22bb7e9e24bd.jpg]]

==''Referensi''==
* [[DOM|https://docs.w3cub.com/dom/]]
* [[WebGLQuery|https://developer.mozilla.org/en-US/docs/Web/API/WebGLQuery]]
* [[Ace and CodeMirror|https://blog.aeste.my/2014/04/11/witty-with-ace-and-codemirror/]]
* [[DOMSubtreeModified event|http://help.dottoro.com/ljrmcldi.php]]
* [[Event : Detect changes to the html/text of a div|https://stackoverflow.com/questions/15657686/jquery-event-detect-changes-to-the-html-text-of-a-div]]
* [[Panduan Komplit Asynchronous Programming pada Javascript |https://medium.com/coderupa/panduan-komplit-asynchronous-programming-pada-javascript-part-1-fca22279c056]]
