<table>
  <thead>
    <tr>
      <td>[[<img src="https://avatars1.githubusercontent.com/u/36441664?v=3&s=20" class="avatar">|https://github.com/chetabahana]]</td><td colspan="7">This [[wiki|https://github.com/chetabahana/chetabahana.github.io/wiki]] is courtesy of '''[[Chetabahana Project|https://github.com/MarketLeader]]'''. Find all of them on '''[[Project Map|https://github.com/chetabahana/chetabahana.github.io/wiki/Skema#Implementasi]]'''.</td><td>[[<img src="https://avatars2.githubusercontent.com/u/36441943?v=3&s=20">|https://github.com/MarketLeader]]</td>   
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>[[:arrow_double_up:|https://github.com/chetabahana/chetabahana.github.io/wiki]]</th>
      <th>[[:arrow_up_small:|https://github.com/MarketLeader/marketleader.github.io/wiki]]</th>
      <th>[[Home|:rewind:]] [[Home|Intro]]</th>
      <th>[[:arrow_backward:|https://github.com/MarketLeader/Tutorial-HelloWorld/wiki]] [[Prev|https://github.com/MarketLeader/Tutorial-HelloWorld/wiki]]</th>
      <th>[[:repeat:|https://github.com/MarketLeader/Tutorial-HelloWorld/wiki]] [[Repo|https://github.com/chetabahana/chetabahana.github.io]]</th>
      <th>[[Next|https://github.com/MarketLeader/Google-Sites-API/wiki]] [[:arrow_forward:|https://github.com/MarketLeader/Google-Sites-API/wiki]]</th>
      <th>[[Last|https://github.com/MarketLeader/Google-Content-API/wiki]] [[:fast_forward:|https://github.com/MarketLeader/Google-Content-API/wiki]]</th>
      <th>[[:arrow_down_small:|https://github.com/MarketLeader/Google-AdWords-API/wiki]]</th>
      <th>[[:arrow_double_down:|https://github.com/MarketLeader/Toko-Chetabahana/wiki]]</th>
    </tr>
  </tbody>
</table>

__TOC__

==Formasi==
* [[The Millennium Prize Problems - Pdf (4.8MB)|https://people.maths.ox.ac.uk/cmi/library/monographs/MPPc.pdf]]
* [[Online Books: Clay Mathematics Intstitute - Publications|https://www.claymath.org/publications/online-books]]

<br>[[<img src=https://user-images.githubusercontent.com/36441664/84674358-09387f80-af55-11ea-9fe2-954f020edb21.jpg>|https://github.com/chetabahana/chetabahana.github.io/search?q=%22mapping%22&type=Wikis]]

Dengan menerapkan skema ini terhadap ke angka dasar pada akar digital kita dapat lakukan penelusuran dari formasi output via tata letak di ''[[Jekyll/Liquid]]'' via file ''[[Collections]]'':

[[Programming#penampilan|<img src=https://user-images.githubusercontent.com/36441664/89821160-611bed00-db78-11ea-808b-e26c88887aad.png>]]

Detilnya saya bahas ''[[Sizing#Dimensi|terpisah]]'' dimana formasi tahap pertama adalah seperti berikut ini:

; (5,7) » (2+3, 7)

```json
True Prime Pairs:
(5,7), (11,13), (17,19)

layer|  i  |   f
-----+-----+------
     |  1  | (2+3) -----
  1  +-----+            |
     |  2  | (7)        |
-----+-----+------      |
     |  3  | ..  ‹--3®--
  2  +-----+            |
     |  4  | (13)       |
-----+-----+------      |      
     |  5  | ..  ‹--2®--
  3  +-----+
     |  6  | (19)
-----+-----+------

Note:
® = Repository
```

Berdasarkan tabulasi di atas maka proses yang pertama kali terjadi diterjemahkan sebagai proses pada baris paling awal yaitu transformasi angka 5 ke formasi (2,3).

```json
True Prime Pairs:
(5,7), (11,13), (17,19)

layer|  i  |   f
-----+-----+------
     |  1  | {(2,3)} -----> 5®
  1  +-----+
     |  2  | (7)
-----+-----+------
     |  3  | (10,11,12) <-- 3®
  2  +-----+
     |  4  | (13)
-----+-----+------
     |  5  | (14,15)   <--- 2®
  3  +-----+
     |  6  | (19)
-----+-----+------

Note:
® = Repository
```

Seperti Anda lihat pada tabulasi ini maka pemetaan untuk tahap pertama ini akan berlanjut dalam enam (6) tahap sampai batas (19). Detilnya akan saya uraikan berikut ini.

```json
True Prime Pairs:
(5,7), (11,13), (17,19)

layer|  i    |   f
-----+-------+------
     | 1,2:1 | (2,3) --------------
     +-------+                     |
     |   3:2 | (7)                 |
     +-------+------               |
     | 4,6:3 | (10,11,12) ---      |
  1  +-------+               |     |
     |   7:4 | (13)          |{5®} |
     +-------+------         |     |
     | 8,9:5 | (14,15) ------      |
     +-------+                     |
     |  10:6 | (19)                |
-----+-------+------               | 6®
     |  11:7 | (20)                |
     +-------+                     |
  2  |  12:8 | (26) ---------      |
     +-------+               |     |
     |  13:9 | (27)          |{2®} |
-----+-------+------         |     |
     | 14:10 | (28) ---------      |
     +-------+                     |
  3  |    11 | (29,30,31,32) √ ----
     +-------+
     | 19:12 | 1®
-----+-------+------

6® = (2,3), (29,30,31,32) --> organization
7® = 5® + 2® = (10,11,12,14,15), (26,28) --> user

Note:
® = Repository
```

Pada tahap ini kita perlu tujuh (7) objek dengan formasi satu (1) tambah enam (6).

Saya cari apapun yang berhubungan dengan tujuh (7). Cari sana-sini ternyata ada kasus yang namanya ''[[Collections#Destinasi|The Seven Millenium Prize Problems]]'' dimana satu (1) kasusnya sudah close. 

[[Collections#Destinasi|<img src=https://user-images.githubusercontent.com/36441664/88532912-903a4680-d02f-11ea-90f8-f26f972daf9e.jpg width=400>]]

Berhubung sedang butuh objek maka saya pikir tidak ada salahnya pelajari. Kemudian saya kelompokkan enam (6) kasus yang tersisa mengikuti karakter angka enam (6):

; 1 + 2 + 3 = 1 x 2 x 3 = 6

Sama sekali diluar dugaan. Ternyata cocok..<br><br>

```
Kelompok  | Sifat Objek: Statis              | Sifat Objek: Dinamis        | ∑
----------+------------------------------------+------------------------------
Geometri  | BSD Conjecture (Kurva Elips)     | Hodge Conjecture (Topologi) | 2
Mekanika  | Yang–Mills & Mass Gap (Partikel) | Navier–Stokes (Turbulensi)  | 2
Algoritma | Riemann Hypothesis (Bilangan)    | P vs NP Problem (Kerumitan) | 2
==========+==================================+=============================+==
 ∑ items  |             3 items              |            3 items          | 6
```

Pada formasi 7® ini harus ada dua (2®) objek yang berkaitan dalam hal kelompok dengan subjeknya (1®). 

; 7 = 1 + 6 = 1 + (1 x 2 x 3) = (1 + (1 x 2)) + (1 x 2) + (1 x 2)

Dalam tujuh (7) kasus ini kasus yang sudah close yaitu ''[[Collections#Geometri|Poincare Conjecture]]'' berada dalam kelompok pertama (Geometri). Jadi ini cocok yang ke-2.

===Kurva===

Selain dua (2) prasyarat pengelompokan di atas maka untuk memenuhi cara Sistem DNA itu bekerja yaitu urutan prosesnya berlaku ''[[sequence|palindromik]]'' terhadap urutan dalam kelompok.

[[<img src=https://user-images.githubusercontent.com/36441664/83655710-e7e8a280-a5e8-11ea-9f2b-4eabe6e61d9d.jpg width=500>]]

Dengan demikian urutan dalam prosesnya "tidak" dilakukan seperti ini:

# Kasus-1 (Geometri): BSD Conjecture (Kurva Elips)
# Kasus-2 (Geometri): Hodge Conjecture (Topologi) 
# Kasus-3 (Mekanika): <b>Yang–Mills and Mass Gap (Partikel)</b>
# Kasus-4 (Mekanika): Navier–Stokes (Turbulensi)
# Kasus-5: (Algoritma): Riemann Hypothesis (Bilangan) 
# Kasus-6: (Algoritma): P vs NP Problem (Kerumitan) 

Untuk jelasnya perhatikan simbol Δ pada tabulasi ini:

; a b c » c b a

```
  Kelompok  | Sifat Objek: Statis                | Sifat Objek: Dinamis
  ----------+------------------------------------+------------------------
  Geometri  | BSD Conjecture (Kurva Elips)       | Hodge Conjecture (Topologi) Δ
Δ Mekanika  | Yang–Mills and Mass Gap (Partikel) | Navier–Stokes (Turbulensi)  Δ
Δ Algoritma | Riemann Hypothesis (Bilangan)      | P vs NP Problem (Kerumitan) 
```

Sekarang hubungkan Δ diatas, lalu urutkan lagi.

Maka urutan yang sesuai dengan Sistem DNA adalah seperti ini:

# Kasus-1 (Geometri): BSD Conjecture (Kurva Elips)
# Kasus-2 (Geometri): Hodge Conjecture (Topologi) 
# Kasus-4 (Mekanika): Navier–Stokes (Turbulensi)
# Kasus-3 (Mekanika): <b>Yang–Mills and Mass Gap (Partikel)</b>
# Kasus-5: (Algoritma): Riemann Hypothesis (Bilangan) 
# Kasus-6: (Algoritma): P vs NP Problem (Kerumitan) 

Dengan pengelompokan ini saya melihat ada benang merahnya antara satu (1) kasus yang sudah dipecahkan dan enam (6) kasus yang tersisa dengan Sistem DNA.

<br>[[https://user-images.githubusercontent.com/36441664/88384290-54f10b00-cdd6-11ea-878d-c687cc1afbea.gif]]

Dilain pihak ini juga pertanda bahwa tidak sembarang kasus bisa disertakan. Jika tidak sesuai dengan Sistem DNA maka kita akan terbentur dengan sifat alamiah dari bilangan² prima.

[[<img src=https://user-images.githubusercontent.com/36441664/83953381-322c8680-a86a-11ea-8716-b48801ff169c.png>|https://www.claymath.org/millennium-problems]]

Dengan keyakinan bahwa semuanya berhubungan dengan bilangan² prima maka sebelum maju ke persoalan kita akan bahas cara memetakan angka² ini terlebih dahulu.

Untuk itu saya akan uraikan cara memeriksa karakter masing² kasus terhadap Sistem DNA.

====Track====

* [[Translasi pada Prokariotik|https://kamriantiramli.wordpress.com/tag/inisiasi/]]

Sesuai dengan penjelasan di atas, sebelum kita masuk ke tahapan proses maka hal yang pertama dilakukan adalah menerapkan ''[[Publishing#Subject|angka subjek]]'' agar "berkaitan" dengan kelompok pertama.

<br>[[GitHub Actions|<img src=https://user-images.githubusercontent.com/36441664/84270340-bb86d600-ab54-11ea-9e6a-18cbd0d6fa87.jpg width=200>]]

Hal ini terlenuhi dengan cara menempatkan kasus geometri di kelompok pertama sehingga subjek terkait dengan dua (2) kasus pertama ibarat ada di satu (1) jangkar dengan tiga (3) kaitan.

[[Size#validasi|<img src=https://user-images.githubusercontent.com/36441664/84269385-57afdd80-ab53-11ea-89d6-6e1d8c3e1350.png width=300>]]

Prosesnya kita akan lakukan dengan mengadopsi bentuk ''[[Collections#routing|tetraktis]]'' yaitu segitiga  karakter seratus dua (102) memiliki dua (2) angka yang membentuknya berupa 10 node dan angka 2 itu sendiri.

[[Program#konfigurasi|<img src=https://user-images.githubusercontent.com/36441664/86161308-4301ac80-bb37-11ea-82de-5ff977329e53.png width=500>]]

Karena angka dua (2) sudah dialokasikan di repository dari organisasi maka kita cari property berupa angka sepuluh (10) pada objek yang 7®.

Ternyata dia ada di urutan pertama dan posisinya di "true prime pairs" tepat di indeks ke-3. Dia ada di jangkar (10,11,12). Berarti angka 10 untuk subjek, dan 11,12 kasus ke-1 dan ke-2.

; 7® = 5® + 2® = (10,11,12,14,15), (26,28)

```json
True Prime Pairs:
(5,7), (11,13), (17,19)

layer|  i  |   f
-----+-----+------
     |  1  | (2,3)
  1  +-----+
     |  2  | (7)
-----+-----+------
     |  3  | (10,11,12)  <---- {10'} = subject of the taken cases
  2  +-----+
     |  4  | (13)
-----+-----+------
     |  5  | (14,15)
  3  +-----+
     |  6  | (19)
-----+-----+------
```

Setelah itu kita akan gunakan dalam hubungan antara transformasi angka lima (5) ke komposisi (2,3) dengan proses awal rekombinasi pada Sistem-DNA khususnya pemetaan secara geometri.

[[Attribute#Komposisi|<img src=https://user-images.githubusercontent.com/36441664/84574574-7fac7480-add1-11ea-9687-2e04b58d3f0a.png>]]

Dengan demikian kita akan susun sesuai angka pada objek 7®. Dari 7® ini kita simak satu kasus yang sudah close sebagai subjek untuk memastikan apakah bisa kita terapkan angka 10 ini.

Anda bisa ikuti jalan ceritanya dimana kita akan sampai pada ''[[Bagan#Perhitungan|kesimpulan]]'' bahwa dia sesuai untuk ditempatkan sebagai subjek dengan <b><i>id: 10</i></b>. Karenanya saya anggap sebagai cocok yang ke-3.

[[<img src=https://user-images.githubusercontent.com/36441664/84181979-e3722d00-aab3-11ea-9868-982020dcd4b3.png>|https://github.com/chetabahana/builder/wiki]]

Pada perjalanan ke tahap berikutnya kita akan menjumpai bentuk yang bahkan lebih kompleks menyangkut pemetaan dalam bentuk 3 dimensi, bentuk partikel, vektor gaya dll dimana secara konsensus dinyatakan bahwa teorinya masih berupa dugaan² yang belum terbukti.

====Trace====

* [[The Cell: A Molecular Approach|https://www.ncbi.nlm.nih.gov/books/NBK9940/]]

Sekarang kita masuk ke kasus pertama yaitu ''[[Implementasi#geometri|BSD Conjecture]]''. 

<br>Sesuai uraian sebelumnya tentang subjek maka untuk maju ke pemrograman disini kita akan alokasikan angka 11.

```json
True Prime Pairs:
(5,7), (11,13), (17,19)

layer|  i  |   f
-----+-----+------
     |  1  | (2,3)
  1  +-----+
     |  2  | (7)
-----+-----+------
     |  3  | (10,11,12)  <---- {11'} = 1st case
  2  +-----+
     |  4  | (13)
-----+-----+------
     |  5  | (14,15)
  3  +-----+
     |  6  | (19)
-----+-----+------
```

Berikut ini intisari dari kasusnya:

''<blockquote>
* Konjektur Birch dan Swinnerton-Dyer menawarkan jenis tertentu dari persamaan, mendefinisikan kurva eliptik atas bilangan rasional. 
* Konjektur ini mempermasalahkan bahwa ada cara sederhana untuk mengetahui apakah persamaan tersebut memiliki jumlah terbatas atau tak terbatas dari solusi rasional. 
* Masalah Hilbert kesepuluh ditangani dengan jenis yang lebih umum dari persamaan, dan dalam hal itu terbukti bahwa tidak ada cara untuk memutuskan apakah suatu persamaan yang diberikan bahkan mempunyai solusi.
* Matematikawan selalu terpesona oleh masalah menggambarkan semua solusi dalam bilangan bulat x, y, z untuk persamaan aljabar seperti:
```
    x²  + y²  = z²
```
* Euclid memberikan solusi lengkap untuk persamaan itu, tetapi untuk persamaan yang lebih rumit ini menjadi sangat sulit. 
* Memang pada tahun 1970 Yu. V. Matiyasevich menunjukkan bahwa masalah kesepuluh Hilbert tidak dapat dipecahkan, yaitu, tidak ada metode umum untuk menentukan kapan persamaan tersebut memiliki solusi dalam bilangan bulat. 
* Tetapi dalam kasus khusus seseorang dapat berharap untuk mengatakan sesuatu. 
* Ketika solusi adalah titik-titik dari varietas abelian, dugaan Birch dan Swinnerton-Dyer menegaskan bahwa ukuran kelompok titik-titik rasional terkait dengan perilaku fungsi zeta terkait ζ (s) di dekat titik s = 1. 
* Secara khusus dugaan yang luar biasa ini menyatakan bahwa jika ζ (1) sama dengan 0, maka ada jumlah poin rasional (solusi) yang tak terbatas, dan sebaliknya, jika ζ (1) tidak sama dengan 0, maka hanya ada yang terbatas sejumlah poin tersebut.
</blockquote>''

Sekarang kita amati secara seksama gambar dari animasi Rekombinasi dari Sistem DNA. Dengan cara memilah gambar maka tahap pertama kedua kromosom mengambil posisi seperti ini:

[[https://user-images.githubusercontent.com/36441664/87246384-479f5c80-c477-11ea-9044-a6602bf27a4f.gif]]

Dengan mengamati gambar ini maka secara kasat mata proses yang terjadi saat pengambilan posisi ini bentuknya seperti kurva, jadi ini cocok dengan kasusnya. 

Yang jadi pertanyaan kurva apa ini, dan mengapa Sistem DNA mengambil posisi ini. 

Sekarang bandingkan dengan kurva dari posisi bilangan² prima. 

[[https://user-images.githubusercontent.com/36441664/87860712-d1fd2a00-c969-11ea-9dab-77823bcf09e2.png]]

Menurut saya ini adalah pengambilan posisi dari Sistem DNA yang mengharuskan kedua objek masing² mengambil posisi bilangan² prima ini agar terkoneksi.

Namun bentuknya seperti kurva linier (bukan eliptik):

[[102#pattern|<img src=https://user-images.githubusercontent.com/36441664/86430033-6a18d380-bd1b-11ea-8ce1-7e6479dec848.png>]]

Ternyata dalam realisasinya ini tidak terjadi dalam kurva linier melainkan bentuk eliptik.

[[Mapping#Layout|<img src=https://user-images.githubusercontent.com/36441664/84094224-841a0b80-aa26-11ea-9013-e5607cb22cc4.png>]]

Hal ini diperkuat dengan kalimat ini:

''<blockquote>
Ketika solusi adalah titik-titik dari varietas abelian, dugaan Birch dan Swinnerton-Dyer menegaskan bahwa ukuran kelompok titik-titik rasional terkait dengan perilaku fungsi zeta terkait ζ (s) di dekat titik s = 1. 
</blockquote>''

Dan kurva dari fungsi zeta itu seperti ini:

[[Branching|<img src=https://user-images.githubusercontent.com/36441664/84902281-d28a7280-b0d6-11ea-9277-26f50780c129.png width=600>]]

Ini memperkuat dugaan saya jika posisi Sistem DNA ini adalah posisi bilang² prima namun bukan dalam bentuk linier melainkan seperti fungsi zeta sehingga bentuknya eliptik.

Jika dugaan saya ini benar maka gambar animasi di atas ini yang kurang persis seperti keadaan sebenarnya. Dan ternyata memang sengaja dibuat tidak mirip supaya memudahkan pemahaman saja karena aslinya DNA itu berpilin, jika Anda simak video ini maka akan jadi jelas. 

[[<img src=https://user-images.githubusercontent.com/36441664/88582289-ab7d7400-d078-11ea-8d12-5bb08e4cccc0.jpg>|https://www.youtube.com/watch?v=TNKWgcFPHqw>]]

Bayangkan jika berpilin seperti itu maka pengambilan bilangan prima yang terjadi tidak hanya elliptik melainkan juga muter² seperi fungsi zeta jadi malahan kurvanya lebih mumet lagi..

Kesimpulan dari kasus pertama ini solusinya gak jauh² dengan subjek. Jika pada subjek bilangan prima itu melakukan aksi untuk "menghitung bentuk" dari suatu objek, maka disini solusi yang diminta adalah bagaimana cara dia ketika melakukan aksi itu. 

Karena nya masih merupakan ''[[Implementasi#kurva|unsolved case]]''. Maka disini kita akan lakukan analisa objek secara lebih detil. Pada tahap ini kita akan menganalisa solusi dari berbagai sumber. 

[[Flowchart#Identifikasi|<img src=https://user-images.githubusercontent.com/36441664/85223595-40dc7700-b3ee-11ea-9b7d-a63b5149a06c.png>]]

Untuk itu kita alokasikan repository dengan <b><i>id: 11</i></b> pada akun user dimana kita akan lakukan pembahasan secara detil untuk kasus yang berhubungan dengan kurva eliptik. 

[[<img src=https://user-images.githubusercontent.com/36441664/85223584-39b56900-b3ee-11ea-9fb8-94ccf6d62009.jpg>|https://github.com/chetabahana/attribute/wiki]]

Karena kasus pertama ini sesuai dengan proses pertama dari Sistem DNA maka jika saya hitung mulai dari pengelompokan kesesuaian ini saya anggap sebagai cocok yang ke-4.

Kita lanjut ke kasus berikutnya untuk memastikan sampai mana cocok nya.

===Bentuk===

Sekarang kita masuk ke kasus ke-2. Disini kita akan terapkan angka duabelas (12).

```json
Twin Prime Pairs:
(5,7), (11,13), (17,19)

layer|  i  |   f
-----+-----+------
     |  1  | (2,3)
  1  +-----+
     |  2  | (7)
-----+-----+------
     |  3  | (10,11,12)  <---- {12'} = 2nd case
  2  +-----+
     |  4  | (13)
-----+-----+------
     |  5  | (14,15)
  3  +-----+
     |  6  | (19)
-----+-----+------
```

Angka 12 dibentuk oleh angka satu (1) dan dua (2) merepresentasikan gabungan enam (6) repository yang disematkan pada akun user dan organisasi total seluruhnya 6 + 6 = 12.

[[Program#layout|<img src=https://user-images.githubusercontent.com/36441664/81160907-e8bff180-8fb4-11ea-99d2-a32870457c11.png width=300>]]

Dia juga merupakan titik distribusi dari angka 2,3,4,6,12 sehingga memiliki jangkauan melebar termasuk formasi bilangan prima kembar (2,3), (3,5) dan (5,7).

; 7th (object) = (2,3) object = 2nd (form) + 3rd (object) = 6 + 200 = 206

[[Mapping#formulasi|<img src=https://user-images.githubusercontent.com/36441664/82737446-3ed5b880-9d5b-11ea-99d8-41f67bb1a8df.png width=400>]]

====Sizing====

Jumlah 12 ini berproses via 10 node tetraktis yang terhubung secara bilatera (2) di angka 102 sehingga total angka dasar yang terkait adalah 102 + 12 = 100 + 12 + 2 = 114.

[[Artifacts#Kompisisi|<img src=https://user-images.githubusercontent.com/36441664/85205999-34521300-b349-11ea-98b5-b4b04681f050.jpg width=500>]]

Dengan demikian fungsinya adalah central operasi angka² dengan implikasi yang sangat luas, sehingga Sistem DNA yang merupakan basis dari projek ini:

```json
True Prime Pairs:
(5,7), (11,13), (17,19)

layer|  i  |   f
-----+-----+------
     |  1  | (2,3)
  1  +-----+
     |  2  | (7)
-----+-----+------
     |  3  | (10,11,12)  <---- {12'} = 2nd case ----
  2  +-----+                                        |
     |  4  | (13)                                   Δ 2nd and 3rd are connected
-----+-----+------                                  |
     |  5  | (14,15)  <--------{15'} = 3rd case ----
  3  +-----+
     |  6  | (19)
-----+-----+------

Note:
12' = 2nd case: Hodge Conjecture, connected to 3rd case, not 4th case
14' = 4th case: Navier–Stokes ({not} Yang–Mills and Mass Gap  Δ palindrome
15' = 3rd case: Yang–Mills and Mass Gap ({not} Navier–Stokes) Δ palindrome
```

Akhirnya dapat juga. Kalimat ini membahas tentang adanya hubungan antara kasus-2 yaitu Hodge Conjecture yang kita sedang bahas ini dengan kasus-3 yaitu Mills and Mass Gap:

''<blockquote>Summarize: It is well known that neutrinos have mass. But quantum field theories cannot demonstrate mathematically they have a mass bigger than zero. I think it could be demonstrated that neutrinos have positive mass working with a non conventional atomic model of two entangled – I use the term “[[entanglement|https://curvaturasvariantes.com/2014/09/02/the-mass-gap-and-hodge-conjecture-link/amp/]]” in the sense of physical intersection – fields that vary periodically. I guess that there is some kind of link between the solution of this problem and the Hodge Conjecture. I attached a picture at the end for easier understanding.</blockquote>''

Kita akan bahas mengenai kaitan ini pada [[Mapping#objects|kasus-3]]. Dimana jika urutan palindrome ini sesuai maka saya akan hitung sebagai salah satu kecocokan dengan Sistem DNA.

```json
  Kelompok  | Sifat Objek: Statis                | Sifat Objek: Dinamis
  ----------+------------------------------------+------------------------
  Geometri  | BSD Conjecture (Kurva Elips)       | Hodge Conjecture (Topologi) Δ
Δ Mekanika  | Yang–Mills and Mass Gap (Partikel) | Navier–Stokes (Turbulensi)  Δ
Δ Algoritma | Riemann Hypothesis (Bilangan)      | P vs NP Problem (Kerumitan) 
```

Karena referensi ini penting sebagai rujukan palindromatik pada kasus-3 dan -4 sekaligus kuatir jika situs ini suatu saat tidak beredar lagi maka saya ambil tangkapan layarnya. Jadi rujukan adanya pernyataan ini akan valid selamanya:

[[<img src=https://user-images.githubusercontent.com/36441664/88973013-ac184380-d2e0-11ea-9d58-7f645cc16304.png>|https://curvaturasvariantes.com/2014/09/02/the-mass-gap-and-hodge-conjecture-link/amp/]]

====Sorting====

Berikut ini ihtisar dari kasusnya yaitu ''[[Collections#Bentuk|Hodge Conjecture]]'':

''<blockquote>
* Pada abad kedua puluh ahli matematika menemukan cara ampuh untuk menyelidiki bentuk objek yang rumit. Ide dasarnya adalah untuk bertanya sejauh mana kita dapat memperkirakan bentuk objek yang diberikan dengan menempelkan blok-blok pembangun geometris sederhana dari dimensi yang bertambah.
* Teknik ini ternyata sangat berguna sehingga digeneralisasikan dalam banyak cara yang berbeda, akhirnya mengarah ke alat yang kuat yang memungkinkan ahli matematika untuk membuat kemajuan besar dalam membuat katalog berbagai objek yang mereka temui dalam penyelidikan mereka.
* Sayangnya, asal-usul geometris prosedur menjadi tidak jelas dalam generalisasi ini. Dalam beberapa hal perlu menambahkan potongan-potongan yang tidak memiliki interpretasi geometris.
* Dugaan Hodge menegaskan bahwa untuk jenis ruang yang sangat bagus yang disebut varietas aljabar projektif
</blockquote>''

Nah simak lagi gambarnya, apa yang terjadi dengan proses ke-2?

<table><tr>
<td>[[https://user-images.githubusercontent.com/36441664/87246501-0e1b2100-c478-11ea-955c-292a6c912f87.gif]]
</td>
<td>[[https://user-images.githubusercontent.com/36441664/87281186-298c3780-c51d-11ea-9fee-9b1d0969497d.gif]]</td>
</tr></table>

Simak lagi kalimat ini:

''<blockquote>Pada abad kedua puluh ahli matematika menemukan cara ampuh untuk menyelidiki bentuk objek yang rumit. Ide dasarnya adalah untuk bertanya sejauh mana kita dapat memperkirakan bentuk objek yang diberikan dengan menempelkan blok-blok pembangun geometris sederhana dari dimensi yang bertambah.</blockquote>''

Dapet kan? Jadi disini DNA sedang nempelin blok-blok dimana dimensi nya itu bertambah. Nah tentu dia harus ngukur dulu supaya blok-blok yang diapasang itu pas pada tempatnya. 

Gak mungkin dia asal nempelin, kalau asal pasti kacau tu bangunan dia. Jadi disini ada mekanisme perhitungan geometris. 

[[Hooks#directions|<img src=https://user-images.githubusercontent.com/36441664/85230835-12c25b80-b41d-11ea-9061-5487b4b8e6a5.png width=600>]]

Apalagi bangunannya itu gak tetap bentuknya, udah gitu tambah lagi dengan bentuknya yang berpilin² pake muter² juga. 

[[API-v4|<img src=https://user-images.githubusercontent.com/36441664/85230297-6c288b80-b419-11ea-9261-78dcf6379b7c.jpg width=600>]]

Menurut saya canggih banget itu cara dia lakukannya. Entah seperti apa rumus matematik nya sehingga bisa seperti itu. Yang jelas pasti ada skemanya. Kita akan bahas detil nya tersendiri di repository yang terkait. 

[[Sequence#Identifikasi|<img src=https://user-images.githubusercontent.com/36441664/85230294-6a5ec800-b419-11ea-86f3-1928630bef74.jpg>]]

Dengan kesesuaian ini maka kita terapkan kasus ke-2 ini dengan <b><i>id: 12</i></b> dimana jika dihitung dari awal ini merupakan cocok yang ke-5.

[[<img src=https://user-images.githubusercontent.com/36441664/85226186-768a5b80-b400-11ea-8cf5-fcd57291ae81.jpg>|https://github.com/chetabahana/artifacts/wiki]]

Selanjutnya kita masuk ke urutan ke-3 yang berlaku urutan palindromik.

===Turbulen===

Sekarang kita masuk ke proses urutan ke-3 dimana sesuai palindrome kita alan ambil bukan kasus ke-3 melainkan kasus ke-4 yaitu ''[[Collections#Turbulen|Navier–Stokes existence and smoothness]]''.

Disini kita akan terapkan angka empatbelas (14) dimana dia berasal dari pemetaan angka 17 ke (14,15). Baik 14 maupun 15 adalah bilangan komposit.

```json
True Prime Pairs:
(5,7), (11,13), (17,19)

layer|  i  |   f
-----+-----+------
     |  1  | (2,3)
  1  +-----+
     |  2  | (7)
-----+-----+------
     |  3  | (10,11,{12}) 
  2  +-----+
     |  4  | (13)
-----+-----+------
     |  5  | (14,15) <----- {14'} = 4th case (not 3rd case}
  3  +-----+
     |  6  | (19)
-----+-----+------
```

Hubungan 14 dengan 12 ada pada angka 168 merepresentasikan kekuatan bilangan prima terhadap keseluruhan sistem.

; π (Φ x 618) = π(1000) = 168 = 12 x 14

Dimana Φ ini adalah kontanta 1,618, Anda akan jumpai pada ''[[Program#Realisasi|Golden Ratio]]'':

<br>[[Program#Internal|<img src=https://user-images.githubusercontent.com/36441664/74461885-cc368080-4ec1-11ea-814a-42acbfed8d09.png width=250>]]

Dia akan berlaku pada Sistem DNA baik tunggal seperti ini:

[[Package#validasi|<img src=https://user-images.githubusercontent.com/36441664/85040788-5e71cc80-b1b3-11ea-962f-cf26ee3419e2.jpg width=400>]]

Maupun keseluruhan tubuh kita sebagai satu unit:

[[Program#matriks|<img src=https://user-images.githubusercontent.com/36441664/85039447-f373c600-b1b1-11ea-8e2c-508ccfcf2d68.png width=500>]]

Begitu juga dengan alam semesta:

[[2#Basis|<img src=https://user-images.githubusercontent.com/36441664/85039712-32098080-b1b2-11ea-80f0-3e7e767a2ba1.jpg width=600>]]

====Model====

Pengaruh dari 168 ini akan ada pada setiap benda² termasuk gas seperti asap:

[[Model#eksternal|<img src=https://user-images.githubusercontent.com/36441664/85412349-b0d83200-b593-11ea-8cb0-15de138a96bc.gif width=300>]]

Hal ini berasal dari posisi bilangan² prima itu sendiri:

[[Mapping#formulasi|<img src=https://user-images.githubusercontent.com/36441664/83337655-a6ee4680-a2e7-11ea-9444-433bfcc66b2b.jpg width=500>]]

Karenanya angka 14 ini sesuai jika dilihat hanya dari kasusnya yang membahas turbulensi pada benda² cair (fluida) maupun gas seperti pada asap yang saya jelaskan di atas.

[[Package#directions|<img src=https://user-images.githubusercontent.com/36441664/85411658-d0bb2600-b592-11ea-9e0d-c51c1c38fdbc.gif>]]

Hubungan turbulensi ini dengan Golden Ratio dapat dengan mudah diamati dari gelombang² air:

[[Method#Komposisi|<img src=https://user-images.githubusercontent.com/36441664/73613129-23686580-4625-11ea-9f19-5588a3c33e80.gif>]]

Selanjutnya kita akan lihat hubungannya dengan kasus yang kita bahas dengan Sistem DNA. Dimana solusi yang diminta adalah seperti ini:

''<blockquote>Buktikan atau berikan contoh tandingan dari pernyataan berikut:
Dalam tiga dimensi ruang dan waktu, diberikan medan kecepatan awal, terdapat kecepatan vektor dan medan tekanan skalar, yang keduanya halus dan didefinisikan secara global, yang menyelesaikan persamaan Navier-Stokes.</blockquote>''

Jadi kasus ini meminta apakah ada persamaan atau rumus serupa untuk bentuk tiga (3) dimensi. Karena solusi yang sekarang sudah ada adalah untuk dua (2) dimensi.

====Skema====

Berikut ini ihtisar dari kasusnya. 

''<blockquote>
* Teori Navier-Stokes menjelaskan gerak fluida. Meskipun masalah ini ditemukan pada abad ke-19, mereka masih tidak dipahami dengan baik.
* Masalahnya adalah untuk membuat kemajuan menuju teori matematika yang akan memberikan wawasan tentang persamaan ini.
* Gelombang mengikuti perahu kami saat kami berkelana melintasi danau, dan arus udara yang bergolak mengikuti penerbangan kami dengan jet modern.
* Matematikawan dan ahli fisika percaya bahwa penjelasan untuk dan prediksi angin dan turbulensi dapat ditemukan melalui pemahaman solusi untuk persamaan Navier-Stokes.
* Meskipun persamaan ini ditulis pada abad ke-19, pemahaman kita tentang mereka tetap minimal. Tantangannya adalah membuat kemajuan substansial menuju teori matematika yang akan membuka kunci rahasia yang tersembunyi dalam persamaan Navier-Stokes.
</blockquote>''

Kita ambil lagi bagian dari gambar animasi untuk proses yang ke-3:

<table><tr>
<td>[[https://user-images.githubusercontent.com/36441664/87246582-8da8f000-c478-11ea-89f0-7a9ce6be2001.gif]]
</td>
<td>[[https://user-images.githubusercontent.com/36441664/87246729-5dae1c80-c479-11ea-8b55-6b8baf1b5bd6.gif]]
</td>
</tr></table>

Kita simak kalimat ini:

''<blockquote>
Gelombang mengikuti perahu kami saat kami berkelana melintasi danau, dan arus udara yang bergolak mengikuti penerbangan kami dengan jet modern.
</blockquote>''

Jelas nyambung kan..

Dari seluruh aktifitas DNA hanya tahap ini yang menunjukkan gerak mengikuti bentuk gelombang. Yang pasti ini dilakukan dalam tiga (3) dimensi. Jadi itu ada skemanya. 

Pertanyaannya buat apa mereka muter² seperti itu dan bagaimana cara mereka melakukannya. Itu yang akan kita cari infonya dengan menerapkan angka 14 ini.

[[Grammar#Identifikasi|<img src=https://user-images.githubusercontent.com/36441664/85527340-fc8ee800-b634-11ea-9e11-5c3f58a30132.jpg>]]

Dengan kesesuaian ini maka kita terapkan kasus ke-4 ini dengan <b><i>id: 14</i></b> dan jika dihitung dari awal ini merupakan cocok yang ke-6

[[<img src=https://user-images.githubusercontent.com/36441664/85907724-ae4c3580-b83c-11ea-85c5-c9c20e13bd08.png>|https://github.com/chetabahana/method/wiki]]

Urutan prosesnya yang sesuai dengan [[Mapping#skema|palindromik]] juga harus dihitung terpisah karena merupakan salah satu prinsip dari Sistem DNA sehingga sekaligus merupakan cocok yang ke-7.

Sampai disini kita sudah setengah jalan. Sofar cocok terus. Silahkan Anda nilai sendiri apakah ini sebuah [[cocoklogi|https://www.kompasiana.com/nurcahyo_aj/cocoklogi-konspirasi-diatas-konspirasi_5707aaa1d57e61b608824316]]. Disini saya jelaskan apa adanya berikut referensi dan rujukan².

==Interface==

Sampai angka batas 19 ini maka pemetaan karakter untuk tahap pertama selesai dilakukan maka kita masuk ke tahap yang kedua.

[[<img src=https://chetabahana.files.wordpress.com/2018/06/market-leader.png>|https://github.com/MarketLeader]]

Kita akan terapkan berdasarkan karakter angka dari objek tersebut pada akun organisasi dimana terdapat sejumlah repository dengan enam (6) item utama yang disematkan.

[[<img src=https://user-images.githubusercontent.com/36441664/86283081-90028300-bc0a-11ea-9ad3-0f870e509e0f.png>|https://github.com/chetabahana]]

Sekaligus untuk memeriksa validitas dari urutan proses yang terbalik antara kasus -3 dan ke-4 ini.

[[Skema#Orientasi|<img src=https://user-images.githubusercontent.com/36441664/85267819-e996df00-b49f-11ea-8581-de6907d96853.jpg>]]

===Partikel===

Seperti telah dijelaskan sebelumnya angka (14,15) berasal dari pemetaan angka 17.

```json
True Prime Pairs:
(5,7), (11,13), (17,19)

layer|  i  |   f
-----+-----+------
     |  1  | 2x3 -------
  1  +-----+            |
     |  2  | (7)        | 5' and 3'
-----+-----+------      |
     |  3  | ..  ‹--3®--
  2  +-----+            |
     |  4  | (13)       | 3' and 5'
-----+-----+------      |      
     |  5  | ..  ‹--2®--
  3  +-----+
     |  6  | (19)
-----+-----+------

Note:
® = Repository
```

Faktor prima dari 14 adalah 2 dan 7 sedangkan 15 adalah 3 dan 5, dengan demikian transformasi ini berkaitan dengan formasi dari pemetaan 5 ke (2,3) dan pasangan prima kembar (5,7).

[[Sizing#Dimensi|<img src=https://user-images.githubusercontent.com/36441664/83518883-39b7fc80-a505-11ea-8f98-9eb0708977c6.gif width=600>]]

Angka 14 dan 15 tepat berada di indeks ke lima (5). Dengan proyeksinya terhadap pasangan prima kembar (5,7) maka angka 15 dan 7 membentuk formasi di angka 157.

```json
True Prime Pairs:
(5,7), (11,13), (17,19)

layer|  i    |   f
-----+-------+------
     | 1,2:1 | (2,3) --------------          <------
     +-------+                     |           
     |   3:2 | (7)                 |
     +-------+------               |
     | 4,6:3 | (10,11,12) ---      |
  1  +-------+               |     |
     |   7:4 | (13)          | 5®  |         5' and 3'
     +-------+------         |     |
     | 8,9:5 | (14,15) ------      |
     +-------+                     |
     |  10:6 | (19)                |
-----+-------+------               | 6®      <-------
     |  11:7 | (20)                |
     +-------+                     |
  2  |  12:8 | (26) ---------      |
     +-------+               |     |          
     |  13:9 | (27)          | 2®  |         3' and 5'
-----+-------+------         |     |
     | 14:10 | (28)  --------      |
     +-------+                     |
  3  |    11 | (29,30,31,32) ------          <-------
     +-------+
     | 19:12 | (36)
-----+-------+------                      

Permutation:
36 = 2² x 3² = 6 x 6

Note:
® = Repository
```

Karena berada di sistem angka 5 dia merupakan zona Replikasi pada Sistem DNA.

[[Program#Eksternal|<img src=https://user-images.githubusercontent.com/36441664/76159498-b1b79600-6153-11ea-91e4-bc312f9456ac.png>]]

Dengan demikian maka formasi angka 157 ini tidak lain adalah formasi dari: ''[[Program#Eksternal|Replication Fork]]''.

====Method====

Selanjutnya kita bahas kaitan angka 15 ini dengan kasusnya.

[[Method#eksternal|<img src=https://user-images.githubusercontent.com/36441664/83946824-5faf0b00-a83d-11ea-8e48-b3551297b17a.png width=200>]]

Jika melihat kasusnya saya melihat hubungan dengan siklus oktaf <b><i>[[Program#Konsep|8:Primes(157248)]]</i></b> yang terdiri dari dua (2) siklus yang berpasangan secara palindromik yaitu siklus 157 dan 248.

[[Program#Interaksi|<img src=https://user-images.githubusercontent.com/36441664/81159930-b4980100-8fb3-11ea-963c-58f28b2e3926.png width=250>]]

Mereka ini bersifat anti paralel seperti pada dua (2) rantai DNA. Siklus 157 terjadi dari gabungan angka 15 dan 7. Hal ini sudah saya jelaskan pada bagian sebelumnya.

[[Program#Eksternal|<img src=https://user-images.githubusercontent.com/36441664/81163688-566e1c80-8fb9-11ea-9556-2c6ec6321fd8.png>]]

Pada cabang biologi duplikasi ini terjadi pada kromosom. Namun baru² ini muncul istilah Quantum DNA pada cabang biologi yang mengadopsi teori kuantum dari cabang fisika.

[[Program#proses|<img src=https://user-images.githubusercontent.com/36441664/75617590-b7314100-5b93-11ea-926f-fc01910cbd11.png width=400>]]

Pada cabang fisika disebut teori quantum yaitu kuantisasi energi dan pengaruhnya terhadap bagaimana energi dan materi berinteraksi.

[[Big-Size#validasi|<img src=https://user-images.githubusercontent.com/36441664/84525026-2971ff80-ad05-11ea-934e-1fb3cab8cc01.gif width=500>]]

Pada disiplin fisika teori quantum ini sudah dipelajari sejak lama, sedangkan pada cabang biologi masih baru. Hal ini karena persoalan quantum bukan hal yang prioritas pada cabang biologi.

[[Model#Komposisi|<img src=https://user-images.githubusercontent.com/36441664/84525042-2f67e080-ad05-11ea-9f9c-e07492446240.jpg>]]

Dilain pihak urutan secara palindromik dari kromosom yang diteliti cabang biologi ternyata juga diketemukan pada cabang fisika, jadi sebenarnya hal ini saling berkaitan satu sama lain.

====Delivery====

Sekarang kita bahas kasus dari angka 15 atau proses urutan ke-4. Sesuai dengan urutan palindromik kita ambil kasus ke-3 yaitu ''[[Collections#Partikel|Yang-Mills and Mass Gap]]''.

```json
True Prime Pairs:
(5,7), (11,13), (17,19)

layer|  i  |   f
-----+-----+------
     |  1  | (2,3)
  1  +-----+
     |  2  | (7)
-----+-----+------
     |  3  | (10,11,12)
  2  +-----+
     |  4  | (13)
-----+-----+------
     |  5  | (14,15)   <--- {15'} = 3rd case (not 4th case) 
  3  +-----+
     |  6  | (19)
-----+-----+------

Permutations:
14 x 12 = 168
15 x 2 = 30
```

Berikut ihtisar dari kasusnya:

''<blockquote>
* Teori Yang-Mills dan selisih massa adalah generalisasi dari teori elektromagnetisme Maxwell dimana medan elektromagnetik khrom itu sendiri membawa dugaan.
* Sebagai teori medan klasik memiliki solusi perjalanan dengan kecepatan cahaya sehingga versi kuantum harus menjelaskan partikel tak bermassa (gluon).
* Namun, fenomena didalilkan dari keelutan pengungkungan warna hanya menyatakan terikat gluon, membentuk partikel masif.
* Fenomena ini merupakan kesenjangan massa. Aspek lain dari pengungkungan adalah kebebasan asimtotik yang membuatnya dibayangkan bahwa teori kuantum Yang-Mills ada tanpa pembatasan untuk skala energi rendah.
* Masalahnya adalah untuk menetapkan bukti cermat keberadaan teori kuantum Yang-Mills dan selisih massa.
* Pernyataan resmi dari masalah ini diberikan oleh Arthur Jaffe dan Edward Witten.
* Sebuah solusi diklaim oleh peneliti Korea Selatan pada tahun 2013 dianggap tidak cukup.
* Hukum fisika kuantum berlaku bagi dunia partikel elementer sebagaimana hukum mekanika klasik Newton berlaku bagi dunia makroskopis.
* Hampir setengah abad yang lalu, Yang dan Mills memperkenalkan kerangka kerja baru yang luar biasa untuk menggambarkan partikel elementer menggunakan struktur yang juga terjadi dalam geometri.
* Teori Quantum Yang-Mills sekarang menjadi dasar dari sebagian besar teori partikel elementer, dan prediksinya telah diuji di banyak laboratorium eksperimental, tetapi dasar matematikanya masih belum jelas.
* Keberhasilan penggunaan teori Yang-Mills untuk menggambarkan interaksi kuat partikel-partikel elementer bergantung pada sifat mekanis kuantum yang halus yang disebut "celah massa": partikel-partikel kuantum memiliki massa positif, meskipun gelombang klasik bergerak dengan kecepatan cahaya.
* Properti ini telah ditemukan oleh fisikawan dari percobaan dan dikonfirmasi oleh simulasi komputer, tetapi masih belum dipahami dari sudut pandang teoritis.
* Kemajuan dalam membangun keberadaan teori Yang-Mills dan kesenjangan massa akan membutuhkan pengenalan ide-ide baru yang mendasar baik dalam fisika dan matematika.
</blockquote>''

Terus terang kasus ini yang paling membingungkan dalam hal letak kesesuaiannya dengan Sistem DNA. Satu²nya aktifitas yang bisa saya ambil adalah seperti berikut ini:

[[https://user-images.githubusercontent.com/36441664/87288077-0f565780-c525-11ea-964c-894ed5d998b1.gif]]

Aktifitas ini pun adanya ditengah² urutan yang ketiga, yaitu diantara gerak gelombang yang horizontal dan yang vertikal.

Jadi ini tidak persis setelah prosesnya sebelumnya selesai. Namun justeru karena ada ditengah maka dia merupakan aktifitas yang tidak sama dengan proses gelombang.

Akhirnya ketemu..

[[Mapping#formulasi|<img src=https://user-images.githubusercontent.com/36441664/84525028-2b3bc300-ad05-11ea-8e08-710ab1fea0e6.png width=300>]]

Kuncinya ada di situs yang saya tangkap layarnya (screenshot) di [[Mapping#Posture|kasus-2]]. Disitu ada kata² yang jika diterjemahkan hasilnya seperti ini:

''<blockquote>
* Di sisi kiri, medan neutron dikelilingi oleh tiga kekuatan tekanan yang membentuk massanya; '''dua kekuatan yang datang dari sisi kanan, dan satu kekuatan yang datang dari sisi kiri'''. Ketika kemudian medan neutron berubah menjadi neutrino, (atau ketika proton berubah menjadi antineutrino), '''terjadi kehilangan massa'''. Massa yang kehilangan neutron ketika ditransformasikan menjadi neutrino diperoleh di tempat yang berlawanan oleh proton ketika antineutrino mentransformasikannya.
* Sehubungan dengan dugaan Hodge, saya kira itu terkait erat dengan model atom yang telah saya jelaskan. Karena volume subatomik 3D dibentuk oleh wajah 2D atau dinding 3D medan gravitasi terjerat yang bervariasi secara berkala. Dan masing-masing medan gravitasi terjerat itu '''ada di persimpangan setidaknya dua medan gravitasi''' terjerat besar yang bervariasi secara berkala juga. Dan seterusnya dengan cara besar yang tak terbatas. Hal yang sama dapat dikatakan di dalam masing-masing partikel subatomik yang diciptakan, jika kita melihat pada perspektif yang sangat kecil.
</blockquote>''

Jadi bener kan dugaan saya, memang kehilangan massa ini ada di tengah² proses yang ke-3. Prinsipnya itu DNA nya putar² sebentar ke kiri sebentar ke kanan, kalau di kita mah seperti ibu² olah raga goyang poco² biar berat badan jadi turun.. :smile:

[[Channel#Identifikasi|<img src=https://user-images.githubusercontent.com/36441664/83331905-ba3aeb00-a2c2-11ea-9943-e67e7b3c0f1b.png width=600>]]

Kesesuaian ini sekaligus merupakan validitas dari cocok yang ke-7. Maka kita terapkan kasus ke-3 ini dengan <b><i>id: 15</i></b> dimana terhitung dari cocok yang ke-7 maka ini merupakan cocok yang ke-8.

[[<img src=https://user-images.githubusercontent.com/36441664/85888653-3538e800-b814-11ea-85ba-23a56243e9e0.jpg>|https://github.com/chetabahana/model/wiki]]

Sampai disini kita sudah bahas kesesuaian sampai kasus ke-4. Jadi masih ada dua kasus lagi yaitu kasus ke-5 dan ke-6. Silahkan ikuti selanjutnya..

===Bilangan===

Jika dilihat dari karakter angka nya yang berada di 2® maka saya bisa maklum. Jika angka di 5® itu berkelompok dengan masing² kelompok itu ada tiga (3) dan dua (2) maka 2® ini masing² hanya ditempati satu angka saja yaitu 26 dan 28.

```json
True Prime Pairs:
(5,7), (11,13), (17,19)

layer|  i    |   f
-----+-------+------
     | 1,2:1 | (2,3) --------------
     +-------+                     |
     |   3:2 | (7)                 |
     +-------+------               |
     | 4,6:3 | (10,11,12) ---      |
  1  +-------+               |     |
     |   7:4 | (13)          | 5®  |
     +-------+------         |     |
     | 8,9:5 | (14,15) ------      |
     +-------+                     |
     |  10:6 | (19)                |
-----+-------+------               | 6®
     |  11:7 | (20)                |
     +-------+                     |
  2  |  12:8 | ({26}) -------      |
     +-------+               |     |
     |  13:9 | (27)          | 2®  |
-----+-------+------         |     |
     | 14:10 | (28)  --------      |
     +-------+                     |
  3  |    11 | (29,30,31,32) ------
     +-------+
     | 19:12 | (36)
-----+-------+------

Permutation:
36 = 2² x 3² = 6 x 6

Note:
® = Repository
```

Ternyata dari semua struktur angka² maka hanya 2, 3, 7 dan 26 yang memiliki objek dengan jumlah 200 ke atas. Jadi kalau dibaratkan dengan pohon maka mereka itu adalah pohon angka yang paling besar diantara angka² lainnya.

[[#|<img src=https://user-images.githubusercontent.com/36441664/83331874-a2636700-a2c2-11ea-9760-542f96f4e225.jpg>]]

Kalau 2, 3, 7 bisa maklum karena mereka itu bilangan prima.<br>
Tapi 26? Apa istimewanya? Kenapa dia bisa memiliki begitu banyak objek..

Angka duapuluh enam (26) ini memiliki objek 227 merupakan jumlah terbanyak berikutnya setelah angka dua (2) yang memiliki objek terbanyak yaitu 286.

Angka tiga (3) dan tujuh (7) yang merupakan keluarga dari angka dua (2) malah lebih sedikit dari objek yang dimiliki angka 26 yaitu 200 dan 206.

====Struktur====

Sebelum masuk ke kasus yang ke-5 terlebih dahulu sebaiknya kita bahas lebih detil tentang angka 26 ini. Kita mulai dari yang paling dasar yaitu angka 2 dan 6 yang membentuknya menjadi 26.

Jika dilihat dari akar digitalnya yaitu delapan (8) berikut masing² angka pembentuknya yaitu dua (2) dan enam (6) akan mulai terkuak.

Utamanya karena kedua angka 2 dan 6 ini adalah yang angka mendominasi semua proses yang terjadi pada "seluruh bilangan² prima".

[[Program#Node|<img src=https://user-images.githubusercontent.com/36441664/83151272-904cc180-a126-11ea-8324-18078219b651.jpg width=600>]]

Singkatnya angka dua (2) adalah.. pembentuk semua bilangan² prima yang ada:

[[2#pola|<img src=https://user-images.githubusercontent.com/36441664/88474530-93f79b80-cf51-11ea-989f-b8a464b1ab6a.png>]]

Diantaranya adalah bilangan² prima kembar:

Sedangkan angka '''''enam (6)''''' sendiri itu adalah dirigen atau pengatur dari semua bilangan prima kembar. Dimana bilangan prima kembar itu selisihnya itu adalah.. '''''dua (2)''''':

[[26#Skema|<img src=https://user-images.githubusercontent.com/36441664/73700083-28f2a800-4718-11ea-97b3-2e9a738dc09e.png width=700>]]

Dari sini saja sudah kelihatan bahwa ''[[26#Skema|duapuluh enam (26)]]'' itu bukan sembarang angka.

Namun jika Anda simak di ''[[Wikipedia|https://en.wikipedia.org/wiki/26_(number)]]'' ternyata angka 26 ini relatif hanya sedikit keistimewaannya dibanding angka² lainnya yang memiliki objek lebih sedikit.

Jadi sifat 26 ini karakternya betul² tertutup sehingga orang hanya bisa gali sedikit saja dari keiistimewaan² yang sebenarnya dia miliki.

Padahal salah satu keistimewaan dari 26 ini adalah sanggup menutupi solusi dari kasus yang akan dia wakili yaitu ''[[collections#Bilangan|Hipotesa Riemann]]''. Kasus yang paling tua di antara kasus2 lainnya.

Jika saya buka sedikit. Kuncinya bukan di bilangan² prima, tapi di angka enam (6) ini. Dengan kucilkan dia apalagi anggap sebagai ''[[bilangan binatang|https://id.wikipedia.org/wiki/Bilangan_binatang]]'' jangan harap rahasia itu terbuka. 

Setelah enam (6) ini baru kemudian menyusul angka dua (2), dilanjut bilangan² prima lainnya. Jadi kesimpulannya harus lakukan pendekatan baik² ''kulonuwun'' gitu sama angka 26.

====Korelasi====

Kasus ini sudah berumur hampir dua abad sejak muncul tahun 1859. Betul² sebuah kasus tunggal murni dari penemunya tanpa campur tangan atau olahan lagi seperti kasus² lainnya.

Berikut ihtisarnya:

''<blockquote>
* Hipotesa Riemann adalah bahwa semua nol nontrivial dari kelanjutan analitis dari fungsi zeta Riemann memiliki bagian nyata dari 1/2.
* Sebuah bukti atau pembantahan ini akan memiliki implikasi yang luas di teori bilangan, khususnya untuk distribusi bilangan prima.
* Hipotesis ini merupakan masalah kedelapan Hilbert, dan masih dianggap masalah terbuka yang penting pada abad kemudian.
* Beberapa angka memiliki sifat khusus yang tidak dapat dinyatakan sebagai produk dari dua angka yang lebih kecil, misalnya, 2, 3, 5, 7, dll.
* Angka tersebut disebut bilangan prima, dan mereka memainkan peran penting, baik dalam matematika murni maupun aplikasinya.
* Distribusi bilangan prima tersebut di antara semua bilangan asli tidak mengikuti pola reguler.
* Namun, ahli matematika Jerman GFB Riemann (1826 - 1866) mengamati bahwa frekuensi bilangan prima sangat erat kaitannya dengan perilaku fungsi yang rumit yang disebut fungsi Riemann Zeta
```
    ζ = 1 + 1/2 s  + 1/3 s  + 1/4 s  + ...
```
* Riemann hipotesis menegaskan bahwa semua  menarik  solusi dari persamaan ini berbaring di garis lurus vertikal tertentu.
```
    ζ (s) = 0
```
* Ini telah diperiksa untuk 10.000.000.000.000 solusi pertama.
* Sebuah bukti bahwa itu benar untuk setiap solusi yang menarik akan menjelaskan banyak misteri di sekitar distribusi bilangan prima.
</blockquote>''

Kita pilah lagi gambar animasi dari Sistem DNA kita ambil bagian penting yang ada pada proses yang ke-5 dimana kita akan dapatkan seperti berikut ini:

[[<img src=https://user-images.githubusercontent.com/36441664/87246837-f2b11580-c479-11ea-92e8-94522314c61e.gif>|https://github.com/chetabahana/trace/wiki/0#pola]]

Simak lagi kalimat ini:

''<blockquote>Hipotesis Riemann adalah bahwa semua nol nontrivial dari kelanjutan analitis dari fungsi zeta Riemann memiliki bagian nyata dari '''1/2'''.</blockquote>''

Coba lihat itu DNA lagi ngapain?<br>
Sedang lakukan pemisahan kan? 

Gak ada kegiatan lain entah itu bikin kurva, isi blok, atau muter². Gak ada yang lain yang dia kerjakan sama sekali selain daripada misahin..

Coba perhatikan, dimana itu misahinnya..<br>Di tengah kan? 

Tengah tu berapa kalau bukan <b><i>1/2</i></b>.<br>
Dari sini mulai nyambung kan? 

Sebelumnya saya masukkan gambar fungsi zeta tapi itu angka 1/2 nya kecil hampir gak kliatan, nah sekarang saya masukkan lagi. Saya kasih yang angka 1/2 nya gede sendiri:

[[Branching#validasi|<img src=https://user-images.githubusercontent.com/36441664/84536499-2cc2b680-ad18-11ea-926d-5b877b17afd4.jpg width=400>]]

Ingat bahwa kita belum bicara solusi. Kita hanya sampai titik adanya kecocokan dengan Sistem DNA. Jangan kawatir kita akan bahas detil di repository yang terkait.

[[Program#internal|<img src=https://user-images.githubusercontent.com/36441664/84902369-f2219b00-b0d6-11ea-9ad7-0d5cb984289d.png width=600>]]

Disitu kita akan pelajari solusi yang dipublikasikan dari berbagai referensi. Setelah itu baru bicara solusi. Yang jelas solusi ini sudah hampir 200 tahun tak tersentuh.

[[Route#Identifikasi|<img src=https://user-images.githubusercontent.com/36441664/83908974-25d4fa80-a792-11ea-97e2-43bf33fbdc3a.jpg>]]

Dengan kesesuaian ini maka kita terapkan kasus ini dengan <b><i>id: 26</i></b> dan jika dihitung dari awal ini merupakan cocok yang ke-9

[[<img src=https://user-images.githubusercontent.com/36441664/84902414-fe0d5d00-b0d6-11ea-917b-26ad8f0cf154.png>|https://github.com/chetabahana/trace/wiki]]

''"Sehr leider Herr Riemann. Leute können den Fall immer noch nicht lösen.."''

===Kelompok===

Sekarang kita masuk ke kasus yang terakhir yaitu kasus ke-6 dimana kita akan terapkan angka duapuluh delapan (28). Seperti 26 mereka ini bekerja sendiri² sehingga karakternya itu tertutup.

Karakter yang tertutup ini dikarenakan keduanya dipengaruhi oleh angka delapan (8) dengan skema yang berbeda:

```json
True Prime Pairs:
(5,7), (11,13), (17,19)

layer|  i    |   f
-----+-------+------
     | 1,2:1 | (2,3) --------------
     +-------+                     |
     |   3:2 | (7)                 |
     +-------+------               |
     | 4,6:3 | (10,11,12) ---      |
  1  +-------+               |     |
     |   7:4 | (13)          | 5®  |
     +-------+------         |     |
     | 8,9:5 | (14,15) ------      |
     +-------+                     |
     |  10:6 | (19)                |
-----+-------+------               | 6®
     |  11:7 | (20)                |
     +-------+                     |
  2  |  12:8 | (26) ---------      |      26 » 2 + 6 = 8
     +-------+               |     |                       
     |  13:9 | (27)          | 2®  |                       
-----+-------+------         |     |
     | 14:10 | ({28})  ------      |      28 = 2 & 8
     +-------+                     |
  3  |    11 | (29,30,31,32) ------
     +-------+
     | 19:12 | (36)
-----+-------+------

Permutation:
36 = 2² x 3² = 6 x 6

Note:
® = Repository
```

Angka 28 ini memiliki objek jauh lebih sedikit yaitu 88. Namun angka 88 dibangun dari angka 8 sebanyak dua (2) kali.

```json
True Prime Pairs:
(5,7), (11,13), (17,19)

layer|  i    |   f
-----+-------+------
     | 1,2:1 | (2,3) --------------            <-------
     +-------+                     |           
     |   3:2 | (7)                 |
     +-------+------               |
     | 4,6:3 | (10,11,12) ---      |
  1  +-------+               |     |
     |   7:4 | (13)          | 5®  |           5' and 3' = 8' <-
     +-------+------         |     |                            |
     | 8,9:5 | (14,15) ------      |                            |
     +-------+                     |                            |
     |  10:6 | (19)                |                            |
-----+-------+------               | 6®         -------         |
     |  11:7 | (20)                |                            |
     +-------+                     |                            |
  2  |  12:8 | (26) ---------      |                            |
     +-------+               |     |                            |
     |  13:9 | (27)          | 2®  |           3' and 5' = 8'   |
-----+-------+------         |     |                       |    |
     | 14:10 | ({28})  ------      | 28 = 2 & 8 = 2 x 8' = 8' & 8' » 88 objects
     +-------+                     |
  3  |    11 | (29,30,31,32) ------            <--------
     +-------+
     | 19:12 | (36) √
-----+-------+------                      

Permutation:
36 = 2² x 3² = 6 x 6

Note:
® = Repository
```

====Weights====

Sekarang kita bahas kasus untuk angka 28 yaitu [[Collections#Grouping|Masalah P vs NP]]. Berikut ihtisarnya:

''<blockquote>
* Masalah P versus NP adalah apakah, untuk semua masalah algoritme dapat memverifikasi sebuah solusi yang diberikan cepat (yaitu, dalam waktu polinomial), algoritme juga dapat menemukan solusi yang cepat. 
* Yang pertama menggambarkan kelas masalah disebut NP, sedangkan yang kedua menggambarkan P. Pertanyaannya adalah apakah atau tidak semua masalah di NP juga di P.
* Ini umumnya dianggap salah satu pertanyaan terbuka yang paling penting dalam matematika dan ilmu komputer teoretis karena memiliki konsekuensi yang luas dengan masalah lain dalam matematika, biologi, filsafat, dan kriptografi.
* Matematikawan dan ilmuwan komputer berharap bahwa P ≠ NP.
* Misalkan Anda sedang mengatur akomodasi perumahan untuk sekelompok empat ratus mahasiswa. Ruang terbatas dan hanya seratus siswa yang akan menerima tempat di asrama.
* Untuk memperumit masalah, Dekan telah memberi Anda daftar pasangan siswa yang tidak kompatibel, dan meminta agar tidak ada pasangan dari daftar ini muncul dalam pilihan akhir Anda.
* Ini adalah contoh dari apa yang oleh para ilmuwan komputer disebut sebagai masalah NP, karena mudah untuk memeriksa apakah pilihan yang diberikan dari seratus siswa yang diusulkan oleh rekan kerja memuaskan (yaitu, tidak ada pasangan yang diambil dari daftar rekan kerja Anda juga muncul pada daftar dari kantor Dean), namun tugas menghasilkan daftar seperti itu dari awal tampaknya sangat sulit sehingga sama sekali tidak praktis.
* Memang, jumlah total cara memilih seratus siswa dari empat ratus pelamar lebih besar dari jumlah atom di alam semesta yang diketahui! 
* Dengan demikian tidak ada peradaban masa depan yang bisa berharap untuk membangun superkomputer yang mampu menyelesaikan masalah dengan kekerasan; yaitu dengan memeriksa setiap kemungkinan kombinasi 100 siswa. 
* Namun, kesulitan yang tampak ini mungkin hanya mencerminkan kurangnya kecerdikan programmer Anda. 
* Bahkan, salah satu masalah yang menonjol dalam ilmu komputer adalah menentukan apakah ada pertanyaan yang jawabannya dapat dengan cepat diperiksa, tetapi yang membutuhkan waktu yang sangat lama untuk diselesaikan dengan prosedur langsung apa pun.
* Masalah-masalah seperti yang tercantum di atas tentu saja tampaknya seperti ini, tetapi sejauh ini belum ada yang berhasil membuktikan bahwa salah satu dari mereka benar-benar sangat keras seperti yang terlihat, yaitu, bahwa memang tidak ada cara yang layak untuk menghasilkan jawaban dengan bantuan komputer. 
</blockquote>''

Jadi simpelnya ini ibarat induk ayam sama telor.<br>
Itu mana yang duluan ada di dunia ini?

Misal Anda jawab salah satunya, pake alasan ini dan itu..<br>
Taruhlah Anda benar. Lalu apa buktinya? 

Ribet kan?

Jadi kasusnya itu memecahkan suatu persoalan yang berbelit² gak bisa ditarik ujungnya itu dimana. Sekaligus kalaupun mau ditarik solusinya itu juga terus buktinya apa? 

Ya persis seperti induk ayam sama telor tadi..<br>
Ini yang saya maksud dengan karakter 88.

Terus apakah Sistem DNA juga begitu?<br>
Ya gak lah.. Buktinya badan kita aman² aja. Gak kenapa² ya kan? 

Nah disini letak solusinya gimana itu angka 28 bekerja memecahkan maslaah seperti ini dengan karakter 88 yang dimilikinya.

[[Collections|<img src=https://user-images.githubusercontent.com/36441664/84743844-b0acc500-afdc-11ea-8311-3affd4bf0c69.gif>]]

Angka 88 ini ibarat dua ekor ular melingkar membentuk angka 8, tapi kepala sama ekornya gak keliatan yang mana saking mirip semua badannya.

Nah sekarang kembali ke Sistem DNA, kita ambil posisi terakhir.

[[https://user-images.githubusercontent.com/36441664/87246870-30ae3980-c47a-11ea-83e8-427c5155aeb0.gif]]

Disini proses yang terjadi mirip kasus ke-2 yaitu [[Mapping|Hodge Conjecture]] tentang mengisi blok² geometris suatu bentuk.

Apakah kasusnya sama?

Prinsipnya sama. Tapi solusi yang diminta gak sama. Ini identik seperti kasus-1 dengan subjek. Jika subjek adalah aksi menghitung objek maka kasus-1 minta cara untuk lakukan aksinya.

Jadi kaitannya disitu antara kasus-6 dan kasus-2. Jika kasus-2 menghitung objeknya maka kasus-6 minta caranya. Kasus-2 kan taunya kasus-1 deket sama subjek maka dia nanya lagi ke kasus-1.

Nah kasus-1 deket memang sama subjek. Subjek ini yang kasih ke kasus-1, karena yang nanya kasus-6 maka supaya gak bocor pakai sms 26 spasi bla bla. Lalu kasus-2 ini bisa kasi bocorannya sms 26 ini ke kasus-6 pakai sms ketik reg 28 spasi bla bla.

Maka semua kasus milenial ini sebenarnya saling berkaitan kalau berkaca dari Sistem DNA. Kita aja yang gak tau karena mereka pakai sms.. :rofl:

[[Application#validasi|<img src=https://user-images.githubusercontent.com/36441664/84656283-a2a76780-af3c-11ea-930d-049952522888.png width=350>]]

Sekarang amati gambar ini. Ini adalah cara Sistem DNA mengisi blok²nya:

[[Trace#komposisi|<img src=https://user-images.githubusercontent.com/36441664/81181797-2a619400-8fd7-11ea-8462-9e1aab20c709.jpg width=500>]]

Coba amati..<br>
Ada benang merahnya gak? 

Belum dapet?<br>
Coba simak lagi kalimat ini:

''<blockquote>
Ini adalah contoh dari apa yang oleh para ilmuwan komputer disebut sebagai masalah NP, karena mudah untuk memeriksa apakah pilihan yang diberikan dari seratus siswa yang diusulkan oleh rekan kerja memuaskan (yaitu, tidak ada pasangan yang diambil dari daftar rekan kerja Anda juga muncul pada daftar dari kantor Dean), namun tugas menghasilkan daftar seperti itu dari awal tampaknya sangat sulit sehingga sama sekali tidak praktis.</blockquote>''

Nah sekarang coba bayangkan jika pada gambar di atas blok² itu bangku siswa²..<br>
Ketemu kan.. Nyambungnya gimana..

Jadi pada Sistem DNA juga sama. Itu ada mekanisme pemilihan siswa² untuk isi blok². Apakah mereka punya daftar siswa² untuk memilih mereka isi blok? 

Nah realisasinya gak hanya itu. Mereka juga bahkan harus perbaiki siswa² yang error. Bayangkan kalau Sistem DNA ditubuh kita ini isinya siswa² error. Buyar kan? 

[[Directions#penyambungan|<img src=https://user-images.githubusercontent.com/36441664/83518651-e6de4500-a504-11ea-9f2e-f9fbdba089be.jpg width=600>]]

Padahal mereka itu bekerja bukan dengan ratusan siswa, berikut ini gambaran bagaimana kecepatan yang dilakukan dalam per detiknya:

''<blockquote>Berhubung dengan kompleksitas struktur kromatin, garpu replikasi pada eukariota bergerak hanya dengan kecepatan '''[[50 pb tiap detik|https://id.m.wikipedia.org/wiki/Replikasi_DNA]]'''. Sebelum melakukan penyalinan, DNA harus dilepaskan dari nukleosom pada garpu replikasi sehingga gerakan garpu replikasi akan diperlambat menjadi sekitar 50 pb tiap detik. Dengan kecepatan seperti ini '''diperlukan waktu sekitar 30 hari untuk menyalin molekul DNA kromosom''' pada kebanyakan mamalia.<blockquote>''

Kebayang kan gimana cepet kerjanya tu DNA?<br>
Apakah komputer sekarang bisa kerja secepat itu? 

[[Track#Komposisi|<img src=https://user-images.githubusercontent.com/36441664/84532586-b2daff00-ad10-11ea-9880-ff7e97858cd3.gif>]]

Pasti udah ngebul tu komputer.. Jadi ini pasti ada skemanya maka Sistem DNA bisa kerja secepat itu. Kalo gak pake skema yang tepat pasti udah ngebul juga mereka itu..

Jadi jawabannya itu ada. Alam sudah lakukan hal itu sejak dia tercipta. Yang jadi masalah gimana itu caranya ya kan.. Nah menurut saya rahasianya ada di karakter angka 28.

[[<img src=https://user-images.githubusercontent.com/36441664/84623744-1b410080-af0a-11ea-978b-e1fd1961985d.jpg>|https://github.com/chetabahana/track/wiki]]

Dengan kesesuaian ini maka kita terapkan kasus yang berada di urutan terakhir ini dengan <b><i>id: 28</i></b>.

Jika dihitung dari awal maka kesesuaian ini merupakan cocok yang ke-10 persis tepat 2 + 8 dari angka 28 ini dengan jumlah node dari [[Mapping#Basis|tetraktis]] yaitu sepuluh (10).

Sampai disini maka pemetaan karakter angka selesai dilakukan pada seluruh kasus.

====Listener====

* [[Complementary lattice arrays for coded 2 aperture imaging (Pdf 7.5Mb)|https://github.com/chetabahana/skema/files/5011812/JA-255120_AUTHOR_1.pdf]]

Pada bagian ini kita tidak sampai ke detil solusi dari masing² kasus. Yang akan kita bahas adalah skema dari pemetaan angka dari masing² kasus sehingga memunculkan formasi menuju solusi.

<br>[[Tree#Identifikasi|<img src=https://user-images.githubusercontent.com/36441664/81787622-870b0480-952b-11ea-909e-46327ca94c31.png>]]

Di projek ini selain 28 maka objek yang sama ada di angka tigapuluh delapan (38). Semua ada angka 8 nya. Pertanda adanya suatu proses bolak-balik yang berbelit² terjadi pada keduanya karena karakter 88 ini.

```json
True Prime Pairs:
(5,7), (11,13), (17,19)

layer|      i   |   f
-----+----------+------
     |    1,2:1 | (2,3) --------------              -------------
     +----------+                     |
     |      3:2 | (7)                 |
     +----------+------               |
     |    4,6:3 | (10,11,12) ---      |
  1  +----------+               |     |
     |      7:4 | (13)          | 5®  |             5' and 3' = 8'
     +----------+------         |     |
     |    8,9:5 | (14,15) ------      |
     +----------+                     |
     |     10:6 | (19)                |
-----+----------+------               | 6®          ------------- } 2 x 8' = 28Δ
     |     11:7 | (20)                |
     +----------+                     |
     |     12:8 | (26) ---------      |
     +----------+               |     |  
     |     13:9 | (27)          | 2®  |            3' and 5' = 8'
  2  +----------+------         |     |
     |    14:10 | (28)  --------      |
     +----------+                     |
     | 15,18:11 | (29,30,31,32) ------
     +----------+
     |    19:12 | (36)            28Δ
-----+----------+----------------  | ------       <-------
     |    20:13 | (38) = 3 & 8 = 2 & 8' + 1 & 8' 
     +----------+                             |
     | 21,22:14 | (40,41) ------------        |
     +----------+                     |       |
     |    23:15 | (42)                | 6®    8'= 3' and 5'
  3  +----------+                     |
     | 24,27:16 | (43,44,45,46) ------
     +----------+
     |    28:17 | (50) √
     +----------+
     |    29:18 | (68) √
-----+----------+------                           <-------

Permutation:
36 = 2² x 3² = 6 x 6
```

Multiplikasi angka enam (6) yaitu 6 x 6 ini adalah skema sampai layar kedua (2). Disini kita berhubungan angka sembilan (9) sebagai angka gabungan untuk format penjumlahan 3 + 6.

[[Skema#Desain|<img src=https://user-images.githubusercontent.com/36441664/72318181-27f8c880-36ce-11ea-9251-f01ee574de9a.png width=350>]]

Dapat Anda lihat bahwa untuk ''[[Collections#destinasi|enam (6) kasus]]'' selesai diterapkan pada angka 36 yang merupakan gabungan angka 3 & 6 dan juga perkalian  6 x 6.

[[Interface#Desain|<img src=https://user-images.githubusercontent.com/36441664/82456613-aaf7b880-9ade-11ea-8fe4-d1fd643d71c1.gif width=300>]]

Dengan demikian pada akhirnya belitan² 88 ini akan terintegrasi ke dalam sistem. Bagaimana cara mereka melakukannya?

Kita akan bahas detil masing² kasus mulai dari ''[[Bagan#Konsep|subject]]''.. 

==Orientasi==
* [[Prime editing|https://www.bbc.com/news/health-50125843]]

Di dunia nyata, objek sering menyembunyikan informasi mereka dan cara kerjanya. Hal ini juga berlaku pada standar perhitungan dalam berbagai kasus.

<br>Dari sekian banyak kasus ada tujuh (7) masalah matematika yang paling sulit untuk dipecahkan yang dinyatakan oleh [[Clay Mathematics Intstitute|https://en.wikipedia.org/wiki/Clay_Mathematics_Institute]] pada tahun 2000. 

[[Collections#destinasi|<img src=https://user-images.githubusercontent.com/36441664/83940343-e77d2100-a80d-11ea-8327-588f13ff4b16.jpg>]]

Millenium Prize Problem diberikan dalam rangka menyambut millenium baru yang kadua. Dari ''tujuh (7) masalah'' yang diberikan disediakan [[hadiah total $ 7.000.000|https://www.claymath.org/millennium-problems/millennium-prize-problems]], dengan hadiah masing-masing masalah sebesar $ 1.000.000. 

''<blockquote>[[The Millennium Prize Problems|https://en.wikipedia.org/wiki/Millennium_Prize_Problems]] are '''seven (7) problems in mathematics''' that were stated by the Clay Mathematics Institute on May 24, 2000. The problems are the : 
# Birch and Swinnerton-Dyer conjecture,
# Hodge conjecture, 
# Navier–Stokes existence and smoothness,
# P versus NP problem,
# Poincaré conjecture,
# Riemann hypothesis, and
# Yang–Mills existence and mass gap.'''</blockquote>''

Sampai saat ini baru satu masalah yang dapat dipecahkan yaitu [[Poincaré Conjecture|https://en.wikipedia.org/wiki/Poincar%C3%A9_conjecture]], masih ada '''''enam (6)''''' masalah yang masih belum terpecahkan:

[[<img src=https://user-images.githubusercontent.com/36441664/84576634-7a0a5b00-ade0-11ea-937d-c610dee009d4.gif>|https://www.facebook.com/MillenniumPrizeProblems/]]

Salah satu sumber yang digunakan sebagai metode dasar saya gunakan cara pengintegrasian berbagai sumber data dari suatu penelitian yang hasilnya berupa matriks berikut:

[[<img src=https://user-images.githubusercontent.com/36441664/71659208-5515b480-2d79-11ea-859f-a20dea0cf680.jpg width=700>|https://github.com/chetabahana/chetabahana.github.io/wiki/%23#Skema]]

Dengan metoda ini selanjutnya kita akan terapkan untuk mendapatkan korelasi antara kasus ''Poincare Conjecture'' dengan ''enam (6)'' kasus lainnya.

[[Collections#content|<img src=https://user-images.githubusercontent.com/36441664/85205999-34521300-b349-11ea-98b5-b4b04681f050.jpg width=600>]]

Dengan formasi ini akan diterapkan konfigurasi secara berurut yaitu angka ''[[3|tiga (3)]]'' ke ''[[Sizing|formasi-139]]'', angka ''[[4|empat (4)]]'' ke ''[[Sorting|formasi-248]]'', angka ''[[5|lima (5)]]'' ke ''[[Optimasi|formasi-285]]'', angka
''[[6|enam (6)]]'' ke ''[[Looping|formasi-114]]'' dan berujung di angka ''[[7|tujuh (7)]]'' ke ''[[Directions|formasi-157]]''.

[[https://user-images.githubusercontent.com/36441664/85205823-ea1c6200-b347-11ea-8d6f-1ab3f9ec95c8.gif]]

[[https://user-images.githubusercontent.com/36441664/83051968-e2cfa480-a078-11ea-8ff2-316a809a8fad.jpg]]

===Geometri===

* [[Poincare Conjecture Presentation by Numberphile (Youtube 8:52) |https://youtu.be/GItmC9lxeco]]

Permasalahan Poincare Conjecture dimunculkan oleh Henry Poincare, ahli matematika dan fisika asal Perancis yang sangat dikenal di bidang optik, termodinamika, dan mekanika fluida. 

Dia juga mengerjakan teori-teori relativitas sebelum Einstein. Pada 1904, dia mengeluarkan pertanyaan yang sangat mendasar: apa bentuk dari ruang yang kita tempati ini ?

[[Collections#geometri|<img src=https://user-images.githubusercontent.com/36441664/83947381-c7b32080-a840-11ea-98f5-18ba60830abf.png width=250>]]

"Begitu Anda masuk ke dalam empat dimensi, Anda berbicara tentang ruang yang tidak dapat Anda visualisasikan. Cara termudah untuk memvisualisasikannya adalah dengan mempelajari apa yang terjadi dengan satu dimensi di dalam permukaan-permukaan dua dimensi", ujar Devlin, yang juga Direktur Eksekutif Pusat Studi Bahasa dan Informasi di Stanford.

Teorema yang diciptakan Poincare memang mampu terbukti dalam dunia-dunia imajinasi sehingga obyek-obyek memiliki empat, lima, atau lebih dimensi. Tetapi, tidak dengan tiga dimensi

[[Size#model|<img src=https://user-images.githubusercontent.com/36441664/83946334-39d43700-a83a-11ea-84bb-4d7584439562.png>]]

Clay Mathematics Intstitute mengumukan pada tanggal 18 Maret 2010 bahwa masalah ini dipecahkan oleh [[Grigori Perelman|https://en.wikipedia.org/wiki/Grigori_Perelman]] dari St Petersburg, Rusia, namun beliau menolak untuk mendapatkan hadiahnya.

[[<img src=https://user-images.githubusercontent.com/36441664/83952014-060c0800-a860-11ea-9da2-e356706d9443.jpeg>|https://mathshistory.st-andrews.ac.uk/Biographies/Perelman/]]

Para pengurus lembaga tersebut kemudian mengalihkan uang hadiah yang ditolak untuk kemajuan Matematika. 

====Branches====

* [[Konjektur Birch dan Swinnerton-Dyer, Masih Perlu Pembuktian Luas Lebih Lanjut|https://sinarharapan.net/2018/01/konjektur-birch-dan-swinnerton-dyer-masih-perlu-pembuktian-luas-lebih-lanjut/]]

Konjektur Birch dan Swinnerton-Dyer dipilih sebagai salah satu dari 7 Millenium Problems yang dinyatakan oleh Clay Mathematics Institute.

<br>Konjektur ini dinamai menurut matematikawan Bryan Birch dan Peter Swinnerton-Dyer yang mengembangkan pernyataan terkaan tersebut pada paruh pertama tahun 1960an dengan bantuan perhitungan mesin.

Dalam matematika, Konjektur Birch dan Swinnerton-Dyer (The Birch dan Swinnerton-Dyer Conjecture) menggambarkan serangkaian solusi rasional terhadap persamaan yang mendefinisikan kurva elips. 

[[Collections#singularitas|<img src=https://user-images.githubusercontent.com/36441664/83951493-ec68c180-a85b-11ea-8237-a830100348c3.png width=400>]]

Ini adalah masalah terbuka di bidang teori bilangan dan secara luas diakui sebagai salah satu soal matematika yang paling menantang yang masih belum terpecahkan.

Penyataan dari terkaan tersebut adalah bahwa kurva eliptik memiliki banyak solusi rasional. Jadi, menyelesaikan persamaan seperti itu akan terurai ke satu angka tunggal untuk memberi tahu kita apakah ada banyak solusi tanpa batas atau tak terbatas. 

Solusi ini terkait dengan perilaku fungsi Zeta yang terkait dengan ukuran kelompok titik rasional pada kurva.

[[Collections#faktorisasi|<img src=https://user-images.githubusercontent.com/36441664/83947379-c5e95d00-a840-11ea-811f-5031ff4e8924.png width=600>]]

Pada tahun 2017 ini, hanya kasus khusus dari terkaan tersebut yang telah terbukti. 

Terkaannya sudah didukung oleh bukti eksperimental, namun bukti yang benar masih tersisa untuk diberikan, sehingga menjadikan konjektur ini terpilih sebagai salah satu dari Millennium Prize Problems.

====Optimasi====

* [[Konjektur Hodge, Salah Satu Soal yang Paling Sulit Dijelaskan|https://sinarharapan.net/2018/01/konjektur-hodge-salah-satu-soal-yang-paling-sulit-dijelaskan/]]

Konjektur Hodge adalah salah satu yang paling sulit untuk dijelaskan. 

<br>Jika digambarkan secara sederhana sekalipun, masalahnya menanyakan apakah bentuk matematika kompleks bisa dibangun dari yang sederhana. 

Sedikit banyak pertanyaannya mirip dengan objek bangunan yang tersusun dari blok mainan Lego. 

Ide dasarnya adalah bertanya sejauh mana bentuk objek yang diberikan dapat didekati dengan menempelkan blok bangunan geometris sederhana dari dimensi yang meningkat.

Teknik ini menjadi populer dan mendapat generalisasi dalam banyak hal, memungkinkan para matematikawan untuk maju dalam mempelajari berbagai objek dalam penyelidikan mereka. 

Namun, generalisasi akhirnya malah mengabaikan asal-usul geometris dan menjadi penting untuk menambahkan potongan yang tidak memiliki interpretasi geometris. 

Konjektur Hodge mengatakan bahwa potongan-potongan yang disebut siklus Hodge ini sebenarnya hanyalah kombinasi dari potongan geometris yang disebut siklus aljabar.

Jika diuraikan dalam bahasa matematika, Konjektur Hodge adalah masalah utama yang belum terpecahkan dalam bidang geometri aljabar. 

Konjektur / dugaan ini menghubungkan topologi aljabar dari suatu varietas aljabar kompleks nonsingular dan subvarietas dari varietas tersebut. 

Secara spesifik, konjektur ini menyatakan bahwa de Rham cohomology tertentu termasuk ke dalam kelas aljabar, yaitu, perangkat yang termasuk ke topologi aljabar dan topologi diferensial adalah sejumlah Dualisme Poincaré dari kelas homologi subvarietasnya.

Konjektur ini dirumuskan oleh matematikawan Skotlandia William Vallance Douglas Hodge sebagai hasil kerja antara tahun 1930 hingga 1940 dalam rangka memperkaya deskripsi de Rham cohomology untuk memasukkan struktur tambahan yang hadir dalam kasus varietas aljabar kompleks. 

Masalah ini hanya mendapat sedikit perhatian sebelum Hodge mempresentasikannya pada suatu kesempatan selama kongres matematikawan internasional pada tahun 1950, yang diadakan di Cambridge, Massachusetts, Amerika Serikat.

===Mekanika===

* [[Yang-Mills and Mass Gap|https://sinarharapan.net/2018/01/yang-mills-mass-gap/]]
* [[Persamaan Navier-Stokes, Hanya Bisa Menjelaskan Fenomena yang Sederhana|https://sinarharapan.net/2018/01/persamaan-navier-stokes-hanya-bisa-menjelaskan-fenomena-yang-sederhana/]]


Mekanika kuantum adalah salah satu teori paling sukses dalam sejarah, memungkinkan kita untuk memahami perilaku materi dan energi pada tingkat partikel atom dan subatomik. 

[[https://user-images.githubusercontent.com/36441664/84569489-3d733b00-adb1-11ea-94eb-a7de0366d561.png]]

Sedikit mengherankan, mengingat penggunaan praktisnya yang begitu luas, para ahli matematika belum dapat membuktikan bahwa, dalam tiga dimensi, solusi selalu ada (eksistensi), atau jika memang ada, maka tidak mengandung keistimewaan. 

Yang dan Mills memberikan kerangka penting untuk menggambarkan partikel elementer ini dengan menggunakan struktur matematis, dan teori ini memainkan peran penting dalam teori partikel tingkat dasar.

<br>[[Collections#turbulen|<img src=https://user-images.githubusercontent.com/36441664/83946824-5faf0b00-a83d-11ea-8e48-b3551297b17a.png width=250>]]

Teori tersebut mengemukakan bahwa partikel kuantum memiliki massa positif yang didefinisikan oleh “celah massa” untuk menggambarkan interaksi partikel elementer. 

[[Collections#partikel|<img src=https://user-images.githubusercontent.com/36441664/83946733-dc8db500-a83c-11ea-9e07-4b19116c4d73.png>]]

Teori ini telah diverifikasi lewat banyak eksperimen, namun hasilnya belum jelas bagi lembaga CMI. Dengan kata lain, partikel tidak bisa menjadi nol massa bahkan ketika partikel-partikel itu analog dengan foton tanpa massa.

Kesenjangan massa (mass gap) merupakan bagian penting untuk menjelaskan mengapa kekuatan nuklir sangat kuat dan mendekati jarak pendek dibandingkan dengan elektromagnetisme dan gravitasi. 

Hal ini telah ditemukan oleh fisikawan melalui eksperimen dan divalidasi dengan simulasi komputer. Jadi Millennium Problem adalah bagaimana membangun teori matematika dan fisika umum untuk menjelaskan kesenjangan massa.

Persamaan Navier-Stokes juga sangat menarik dalam matematis murni. Soal ini disebut eksistensi Navier-Stokes dan masalah keluwesan (smooth).

Persamaan Navier-Stokes sangat erat hubungannya dengan dinamika fluida yang merupakan subdisiplin dari mekanika fluida. Disiplin ilmu tersebut mempelajari fluida bergerak, yakni terutama yang berhubungan dengan cairan dan gas. 

Penyelesaian dari masalah dinamika fluida biasanya melibatkan perhitungan banyak properti dari fluida, seperti kecepatan, tekanan, kepadatan, dan suhu, sebagai fungsi ruang dan wakt

====Artifacts====

* [[Rieman Hypothesis presentation by Numberphile (Youtube 17:04)|https://youtu.be/d6c6uIyieoo]]
* [[Hipotesis Riemann Hampir Terpecahkan Tahun 2004|https://sinarharapan.net/2018/01/hipotesis-riemann-hampir-terpecahkan-tahun-2004/]]

Angka-angka prima selalu menjadi salah satu bidang penting yang menarik bagi matematikawan. Angka-angka ini hanya terbagi oleh diri mereka sendiri dan 1, yang sebenarnya membangun keseluruhan bilangan. 

[[0#pola|<img src=https://user-images.githubusercontent.com/36441664/83189774-a9239a00-a15b-11ea-87e7-83c560a343ce.jpg width=600>]]

Dengan sangat pentingnya dalam matematika dan aplikasi, ada sejumlah besar minat untuk mengetahui bagaimana bilangan prima ini didistribusikan sepanjang garis angka.

Meskipun diyakini bahwa bilangan prima tidak mengikuti pola tertentu dibandingkan dengan bilangan asli lainnya, pada abad ke-19 matematikawan menemukan Teorema Perdana yang memberi perkiraan gagasan tentang jarak rata-rata antara bilangan prima. 

Tapi, tetap tidak diketahui seberapa dekat distribusi sebenarnya tetap pada rata-rata itu.

Para matematikawan percaya bahwa hipotesis Riemann merupakan kunci untuk memecahkan misteri bilangan prima, selama ini kita tahu bahwa bilangan prima muncul secara acak dan tidak berpola. 

<br>[[Collections#bilangan|<img src=https://user-images.githubusercontent.com/36441664/83189782-ab85f400-a15b-11ea-9e11-21f05bbbaa9c.jpg>]]

Bilangan prima itu dianalogikan sebagai atom-atom dari aritmetika yang merupakan kunci dari kode penyandian (kriptografi) internet.

Hipotesis Riemann, bagaimanapun, membatasi kemungkinan ini dengan menyarankan bahwa frekuensi bilangan prima berhubungan erat dengan perilaku fungsi yang rumit, yang dikenal sebagai fungsi Riemann Zeta. 

[[https://user-images.githubusercontent.com/36441664/83334998-3d187180-a2d4-11ea-839f-8bd182b7de0d.jpg]]

Hipotesis tersebut menyatakan bahwa setiap nilai input pada persamaan yang menghasilkan nol (kecuali bilangan bulat negatif) jatuh pada garis yang sama persis. 

[[Collections#bilangan|<img src=https://user-images.githubusercontent.com/36441664/84040800-463cc900-a9cd-11ea-829e-dc1a06e63c20.jpg>]]

Meskipun ini telah diperiksa untuk solusi 10 triliun pertama, masih memerlukan bukti yang ketat untuk setiap solusi menarik, menjadikannya salah satu Masalah Milenium yang belum terpecahkan.

Para matematikawan meyakini bahwa jika kita dapat membuktikan hipotesis Riemann dan mampu melihat pola dari bilangan prima, maka kita dapat dengan mudah melihat pola acak dari peristiwa alam seperti gempa, gunung meletus, dan tsunami. 

Meski De Branges hampir menyelesaikannya pada tahun 2004, namun menurut Profesor Marcus Du Sautoy dari University of Oxford, hal yang belum ditemukan para ahli matematika adalah semacam spektrometer bilangan prima matematis sehingga bukti yang diumumkan De Branges kurang komprehensif 

====Attribute====

* [[Masalah P vs NP: Mudah untuk Diperiksa tapi Tak Mudah Dilakukan Komputer|https://sinarharapan.net/2018/01/problem-p-vs-np-masalah-yang-tak-mudah-dilakukan-komputer-namun-mudah-untuk-diperiksa/]]

Satu lagi soal yang belum terpecahkan dalam 7 Millenium Problems yang dikemukakan Clay Mathematics Institute adalah solusi dari masalah P vs NP. 

<br>[[Collections#polinomial|<img src=https://user-images.githubusercontent.com/36441664/83947957-71e07780-a844-11ea-9076-1cc768c7d851.png width=400>]]

Isu yang mendasari masalah ini pertama kali dibahas pada tahun 1950-an, dalam sebuah surat dari John Forbes Nash Jr. ke National Security Agency, dan surat Kurt Gödel ke John von Neumann.

P (mudah ditemukan) Vs NP (mudah diperiksa) adalah masalah yang belum terpecahkan di dunia ilmu komputer teoritis. Secara sederhana, masalahnya pada dasarnya menanyakan hal ini: jika mudah untuk memastikan bahwa solusi atas sebuah masalah sudah benar, apakah ini juga mudah untuk memecahkan masalah?

“P” di sini adalah singkatan dari waktu polinomial, yaitu masalah yang lebih mudah dipecahkan oleh komputer dan “NP” adalah singkatan dari waktu polinomial nondeterministik, yaitu masalah yang tidak mudah dilakukan komputer, namun mudah untuk diperiksa. Salah satu contohnya adalah menemukan faktor utama bilangan besar.

Jika Anda memiliki semua daftar faktor yang mungkin, Anda dapat dengan mudah memperbanyaknya bersama-sama dan memeriksa apakah Anda bisa mendapatkan kembali nomor aslinya. Namun, tidak ada cara yang mungkin untuk menemukan faktor jumlah itu. 

Matematikawan percaya bahwa tidak ada bukti yang memungkinkan hal itu terjadi, namun membuktikan hal yang sama itu sendiri adalah tugas yang menakutkan dan karena itu tetap merupakan salah satu Masalah Milenium yang belum terpecahkan. 

[[https://user-images.githubusercontent.com/36441664/84744114-02ede600-afdd-11ea-9cf3-43e5b52c232d.jpg]]

===Algoritma===

; 6 + 10 + 15 = 16 + 15 = 6 + 25 = 31

```json
13, 16, 18, 21, 23, 25, 
28, 30, 32, 34, 36, 38, 40, 42, 45, 47, 
49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77
```

[[#|<img src=https://user-images.githubusercontent.com/36441664/74548400-5d6c2c80-4f80-11ea-99fa-0ec6877e0ff4.png width=400>]]

```json
Scheme:
168 + 329 + 289 = 786
d(786) = d(7+8+6) = d(21) = d(3)

Allocation:
1st object 139 = 168 - 29
      Δ
----+-----+-----+-----+-----+     -----------------------------------------------
 786| 1,2 |  2  | 2,3 | 3,4 | {19}                                          |
----+-----+-----+-----+-----+                                               |
{86}|  4  | 4,5 | 5,6 |{6,7}| 17                                        Base Zone
    +-----+-----+-----+-----+                                               |
{78}|{7,8}| 8,9 | 12 (M dan F) ----> Δ                                      |
    +-----+-----+-----+                                               -----------
{67}| 9,11|11,12|12,14| 11 <----------- Mid Zone                            |
----+-----+-----+-----+-----+                                               |
 {6}|15,16|17,18|18,20|21,22| 19                                      Mirror Zone
    +-----+-----+-----+-----+                                               |
 {8}|23,25|25,27|27,29| 18                                                  |
    +-----+-----+-----+-----+-----+-----+-----+-----+-------+         -----------
 {7}|29,33|33,36|36,39|39,41|41,45|46,51|51,57|58,66|{67,77}| 43 (C1 dan C2)<---Δ
----+-----+-----+-----+-----+-----+-----+-----+-----+-------+         -----------
    |  1     2     3  |   4     5     6 |   7     8      9  |
    |------ 29' ------|--------------- 139' ----------------|
    |------ 102¨ -----|---------------  66¨ ----------------|

Permutations:
168 = 102 + 66 = 2x3x((8+9)+(2+9)) = π(Φ(289+329)) = π(Φ((8+9)²+(1+2)&29))
168 + 618 = 168 + 329 + 289 = (7x24) + (7x47) + (8+9)² = (7x71) + (17x17)
```

[[#|<img src=https://user-images.githubusercontent.com/36441664/104743657-85f73a80-577e-11eb-8ce6-1e7d76423ebf.jpg width=700>]]

Pola ini ada di ''[[Tabulasi Prime Hexagon|https://github.com/chetabahana/chetabahana.github.io/wiki/%23#scheme]]'' via 3x6 dari '''18 polarisas''' angka dua (2) versus '''19 putaran''' yang berpusar di '''71''' dan berujung 6x19 di angka '''114''' (yang keluar grup 18 saya tandai bintang).

; 71 = 1 + 30 + (70 - 30) = 1 + 30 + 40

```json
71 = 1 + 30 + (70 - 30) = 1 + 30 + 40
     |         1st (Form)          |         2nd (Route)         |         3rd (Channel)         |
-----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+-----+-----+----+----+
 {1} |{19}|  - | 31 | 37 |  - |  - |  - |  - |  - |  - |  - |  - |  - |  - | 103 |  -  |  - |  - |
     +----+----+----+----+----+----+----+----+----+----+----+----+----+----+-----+-----+----+----+
  2  | 20 | 26*|  - | 38 |  - |  - |  - |  - |  - | 74*|  - |  - |  - | 98*| 104*|  -  |  - |  - |
-----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+-----+-----+----+----+ 
  3  | 21 | 27*|  - | 39 |  - |  - |  - |  - |  - | 75*|  - |  - |  - | 99*| 105*|  -  |  - |  - |
     +----+----+----+----+----+----+----+----+----+----+----+----+----+----+-----+-----+----+----+
  4  | 22 | 28 |  - | 40 |  - |  - |  - |  - |  - | 76 |  - |  - |  - |100 |  -  |  -  |  - |  - |
-----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+-----+-----+----+----+
  5  | 23 |{29}|  - | 41 |  - |  - |  - |  - |  - | 77 |  - |  - |  - {101}|  -  |  -  |  - |  - | 
     +----+----+----+----+----+----+----+----+----+----+----+----+----+----+-----+-----+----+----+
  6  | 24 |  - |  - | 42 |  - | 54 |  - |  - | 72 | 78 |  - | 90 | 96 |  - |  -  |  -  |  - | 114|
=====+====+====+====+====+====+====+====+====+====+====+====+====+====+====+=====+=====+====+====+
  7  | 25 |  - |  - |{43}|  - | 55 |  - |  - | 73 | 79 |  - |{91}| 97 |  - |  -  |  -  |  - |  - |
     +----+----+----+----+----+----+----+----+----+----+----+----+----+----+-----+-----+----+----+
  8  |  - |  - |  - | 44 |  - | 56 |  - |  - |  - | 80 |  - | 92 |  - |  - |  -  |  -  |  - |  - |
-----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+-----+-----+----+----+
  9  |  - |  - |  - | 45 |  - |{57}|  - |  - |  - |{81}|  - | 93 |  - |  - |  -  |  -  |  - |  - |
     +----+----+----+----+----+----+----+----+----+----+----+----+----+----+-----+-----+----+----+
 10  |  - |  - |  - | 46 | 52 | 58 |  - | 70 |  - | 82 | 88 | 94 |  - |  - |  -  |  -  | 112|  - |
-----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+-----+-----+----+----+
 11  |  - |  - |  - | 47 | 53 | 59 |  - |{71}|  - | 83 | 89 | 95 |  - |  - |  -  |  -  | 113|  - |
     +----+----+----+----+----+----+----+----+----+----+----+----+----+----+-----+-----+----+----+
 12  |  - |  - |  - | 48 |  - | 60 | 66 |  - |  - | 84 |  - |  - |  - |  - |  -  | 108 |  - |  - | 
=====+====+====+====+====+====+====+====+====+====+====+====+====+====+====+=====+=====+====+====+
 13  |  - |  - |  - | 49 |  - |{61}| 67 |  - |  - |{85}|  - |  - |  - |  - |  -  | 109 |  - |  - | 
     +----+----+----+----+----+----+----+----+----+----+----+----+----+----+-----+-----+----+----+
 14  |  - |  - | 32*| 50*|  - | 62 | 68*|  - |  - | 86*|  - |  - |  - |  - |  -  | 110*|  - |  - | 
-----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+-----+-----+----+----+
 15  |  - |  - | 33*|{51*}  - | 63 | 69*|  - |  - | 87*|  - |  - |  - |  - |  -  | 111*|  - |  - | 
     +----+----+----+----+----+----+----+----+----+----+----+----+----+----+-----+-----+----+----+
 16  |  - |  - | 34 |  - |  - | 64 |  - |  - |  - |  - |  - |  - |  - | -  | 106 |  -  |  - |  - | 
-----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+-----+-----+----+----+
 17  |  - |  - | 35 |  - |  - | 65 |  - |  - |  - |  - |  - |  - |  - | -  | 107 |  -  |  - |  - | 
     +----+----+----+----+----+----+----+----+----+----+----+----+----+----+-----+-----+----+----+
{18} |  - | 30 | 36 |  - |  - |  - |  - |  - |  - |  - |  - |  - | -  |102 |   - |  -  |  - |  - | 
=====+====+====+====+====+====+====+====+====+====+====+====+====+====+====+=====+=====+====+====+
{19} |  2 | {3}|  4 | {5}|  6 | {7}|  8 | {9}| 10 |{11}| 12 |{13}| 14 |{15}|  16 |  17 | 18 |{19}|

     |--------------------------------------------------------- 19¨ -----------------------------|
     |--------------------------------------- 13¨ ---------------|
     |------------- 7¨ ------------|
     |-------- 5¨ -------|
     |--- 2¨ --|
```

[[Trace#Komposisi|<img src=https://user-images.githubusercontent.com/36441664/90973443-4e2bf400-e54c-11ea-9f8b-de0981890297.png>]]

====Capturing====

Seperti yang bisa Anda lihat di tabulasi, posisi angka 26 ini ada di persilangan antara baris dan kolom '''2 vs 3'''. Sebuah posisi yang sangat penting bagi prima ke-1 dan 2 ini di angka '''lima (5)'''.

```json
True Prime Pairs:
(5,7), (11,13), (17,19)

layer|  i  |   f
-----+-----+------
     | {1} | {2,3} «--- id: 26
  1  +-----+
     |  2  |  7
-----+-----+---   } 36
     |  3  |  11
  2  +-----+
     |  4  |  13
-----+-----+------
     |  5  |  17
  3  +-----+      } 36
     | {6} | {19}
-----+-----+------
```

Objek angka 2 dan 3 berjumlah 286 dan 200 yang dihubungkan oleh angka 26 dengan mengambil posisi tiga (3) layar di angka kubus 3³ atau 27 terhadap 200 objek.

```json
Twin Primes: 
(5,7), (11,13), (17,19)

layer|  i  |   f
-----+-----+------
     |  1  | (5) -------
  1  +-----+            |
     |  2  | (7)        |
-----+-----+------      |
     |  3  | (11) ‹--3x--
  2  +-----+            |
     |  4  | (13)       |
-----+-----+------      |      
     |  5  | (17) ‹--2x--
  3  +-----+
     |  6  | (19)
-----+-----+------
```

Sesisih objek 227 ke 286 terjadi via '''58 ke 59''' yang berada di baris kolom '''7 dan 11''' akan memecah angka 2 dan 3 dari formasi angka lima (5) ini ke angka '''17 dan 29''' via format '''3,6,9'''.

; 7 x 13 x 19 = 91 x 19 = 10³ + 9³ = 1³ + 12³ = 1729 = 17 & 29

[[<img src=https://user-images.githubusercontent.com/36441664/103577483-80406000-4f07-11eb-8aaa-87b75fcfc85f.jpg>|https://github.com/chetabahana/core/wiki/%23#korelasi]]

<br>Detilnya bisa Anda ikuti pada skema expansi ''[[hewan ternak|https://github.com/chetabahana/core/wiki/%23#korelasi]]'' di bahasan angka enam (6) tentang alokasi vektor 6x100 dari angka prima ke-114 yaitu '''619''' kedalam 3 layar via skema '''10³ vs 9³''':

; Δ prime = 114th prime - 19 = (6 x 19)th prime - 19 = 619 - 19 = 600

```json
  Sub    i    f   
-------+----+----     ---   ---   ---   ---   ---   ---
 1:1:0 | 1  | 2 {71}   1     1     |     |     |     |
-------+----+----     ---   ---    |     |     |     |
 1:2:1 | 2  | 3 {71}         |     |     |     |     |
-------+----+----            |     |     |     |     |
*1:2:2 | 3  | 7 = 1 + 2x3    |     |     |     |     |
-------+----+----            |     |     |     |     |
*1:3:3 | 4  | 10 = 9 + 1     |     |     |     |     |  
-------+----+----            |     |     |     |     |
 1:3:4 | 5  | 11 = 9 + 2     |     |     |     |     |
-------+----+----            9     1‘    |     |   Δ100
*1:3:5 | 6  | 12 = 9 + 3     |     |     |     |     |
-------+----+----            |     |     |     |     |
*1:4:6 | 7  | 13 = 9 + 4     |     |     |     |     |
-------+----+----            |     |     |     |     |
 1:4:7 | 8  | 14 = 9 + 5     |     |     |     |     |
-------+----+----            |     |     |     |     |
*1:4:8 |{9} | 15 = 9 + 6     |     |     |     |     |
-------+----+----            |     |     |     |     |
*1:4:9 |{10}| 19 = 9 + 10    |     |     |     |     |
=======+====+====           ---   ---    1“    |    ---  
 2:1:0 | 11 | 20 = 19 + log 10¹    |     |     |
-------+----+----                  |     |     |     |
 2:2:1 | 12 | 26 = 20 + 2x3        |     |     |     |
-------+----+----                  |     |     |     |
*2:2:2 | 13 | 27 = 26 + 1          |     |     |     |
-------+----+----                  |     |     |     |
*2:3:3 | 14 | 28 = 26 + 2          |     |     |     |
-------+----+----                  |     |     |     |
 2:3:4 | 15 | 29 = 26 + 3          9‘    |     1“” Δ200
-------+----+----                  |     |     |     |
*2:3:5 | 16 | 30 = 26 + 4          |     |     |     |
-------+----+----                  |     |     |     |
*2:4:6 | 17 | 31 = 26 + 5          |     |     |     |
-------+----+----                  |     |     |     |
 2:4:7 |{18}| 32 = 26 + 6          |     |     |     |
-------+----+----                  |     |     |     |
*2:4:8 |{19}| 36 = 26 + 10         |     |     |     |
=======+====+====                 ---   ---    |    ---
*2:4:9 | 20 | 38 = 36 + log 10²  <----  10²    |     |
-------+----+----                        |     |     |
 3:1:0 | 21 | 40 = 36 + log 10²x10²      |     |     |
-------+----+----                        |     |     |
 3:2:1 | 22 | 41 = 40 + 1                |     |     |
-------+----+----                        |     |     |
*3:2:2 | 23 | 42 = 40 + 2                |     |     |
-------+----+----                        |     |     |
*3:3:3 | 24 | 43 = 40 + 3                |     |     |
-------+----+----                        |     |     |
 3:3:4 | 25 | 44 = 40 + 4                9“    |   Δ300
-------+----+----                        |     |     |
*3:3:5 | 26 | 45 = 40 + 5                |     |     |
-------+----+----                        |     |     |
*3:4:6 | 27 | 46 = 40 + 6                |     |     |
-------+----+----                        |     |     |
 3:4:7 |{28}| 50 = 40 + 10               |     |     |
-------+----+----                        |     |     |
*3:4:8 |{29}| 68 = 50 + 18               |     |     |
=======+====+====                       ---   ---   ---
 3:4:9 |{30}|{71}= 68 + log 10³ <----  {10³} 1000  Δ600
```

Dari angka 71 ini kita bisa lihat bahwa crossing terjadi via skema palindrom yang dilakukan secara silang pada '''[[0#Pola|5 vs 6]]''' titik pusaran yang ''membelah'' komposisi (2,3) sehingga berujung di '''30 ke 31'''.

====Directions====

Format ini terjadi secara palindrom via crossing di angka '''71 ke 17'''. Untuk menjelaskannya saya akan ambil pola ''Sistem DNA'' mulai dari konstruksi atom² yang membentuknya.

```json
id: 17

---+-----+-----
 1 | 1   | 10
---+-----+-----
 2 |{11} | 22
---+-----+-----
 3 | 23  | 39
---+-----+-----
 4 | 40  | 60
---+-----+-----
 5 |{61} | 70
---+-----+-----
 6 |{71} | 77
---+-----+-----
 7 | 78  | 82
---+-----+-----
 8 | 83  | 100
---+-----+-----
 9 |{101}| 104
---+-----+-----
10 | 105 | 111
---+-----+-----
```

Sesuai jumlahnya kasus milenial mengambil formasi angka '''tujuh (7)''' sehingga muncul dengan id: (10,11,12,14,15,26 dan 28) kemudian mereka masuk ke id: '''27 via 17'''. 

```json
{17}: Package
    27: Bagan
        51: Attribute
        52: Artifacts
        53: Method
        54: Model
        55: Trace
        56: Track
    28: Diagram
        57: Flowchart
        58: Sequence
        59: Grammar
        60: Channel
        61: Route
        62: Tree
   {29}:Mapping
        63: Sizing
        64: Sorting
        65: Listener
        66: Looping
        67: Capturing
       {68}:Directions
```

Sesuai yang kita sudah bahas mereka akan berlaku sebagai unit integrasi dimana urutan setiap kasus dalam tahap implementasi ke pemrograman adalah seperti ini:

# ID-51 (Attribute): BSD Conjecture (Kurva Elips)
# ID-52 (Artifacts): Hodge Conjecture (Topologi) 
# ID-53 (Method): <b>Yang–Mills and Mass Gap (Partikel)</b>
# ID-54 (Model): Navier–Stokes (Turbulensi)
# ID-55 (Trace): Riemann Hypothesis (Bilangan) 
# ID-56 (Track): P vs NP Problem (Kerumitan) 

Input ini masih berupa komposisi dalam bentuk bagan yaitu skema pembagian objek berdasarkan Metoda OOP dimana alurnya akan mengambil formasi enam (6) putaran dari [[Package#Algoritma|Minor Hexagon]].

<br>[[Home|<img src=https://user-images.githubusercontent.com/36441664/69957702-c0c7f000-1535-11ea-9472-12725801ae67.png width=700>]]

Dengan uraian² di atas maka kita dapat buat ''[[Komposisi Json|https://chetabahana.github.io/feed.json]]'' untuk kita cek susunan angkanya via diagram² sehingga outputnya terintegrasi. Detilnya bisa Anda simak di ''[[Publishing#Delegasi|Publishing]]''.

; Φ(11,13) = Φ(1,2,3) + Φ(4,2) = 123 + 42 = 165

; 61 = 18th prime

```json
id: 6

---+-----+-----+-----+-----+
 1 |  72 | 1   |{73} |  74 |-----------------          57. Flowchart <-- 7(111)
---+-----+-----+-----+-----+                 |          v                   |
 2 |  20 |{74} | 94  |{168}|-----------      |{157} >>{58} Sequence <--- 8(111)
---+-----+-----+-----+-----+           | {1} |          v                   |
 3 |  18 | 95  | 113 | 208 |-----      |     |         59. Grammar <---- 9(111)
---+-----+-----+-----+-----+     | {5} |     |          v                   |
 4 |   7 |{114}| 121 | 235 |-{7} |     |     |         60. Channel<--6x10-->Δ
---+-----+-----+-----+-----+     |     |     |          v                   |
 5 |  13 | 122 | 135 | 257 |-----      |     |{61} >>  61. Route - Φ(61)-->{16}
---+-----+-----+-----+-----+           |     |          v                   |
 6 |  19 | 136 | 155 | 291 |-----------      |         62. Tree -- Φ(62)-->{26}
---+-----+-----+-----+-----+                 |          v                   |
 7 |   9 |{156}|{165}| 321 |----------------           63. Out --- Φ(63)-->{369}
---+-----+-----+-----+-----+
```

Output akan ada di ''id: 63'' yaitu formasi ''6x3 Minor Hexagon'' dari '''''[[18#Pola|id: 18]]''''' ke ''id: 36'' berupa ''[[Skema#Implementasi|Project Map]]'' yang diteruskan ke ''Situs Web'' yang dituju via id: '''64 sd 68''' sehingga berlaku palindrom ''3,6,9''.

[[Tree|<img src=https://user-images.githubusercontent.com/36441664/72426022-85b70e80-37bb-11ea-806c-7d1730658ead.gif width=700>]]

Sebagai ilustrasi, berikut saya uraikan contoh bagaimana cara menerapkan keseluruhan enam (6) tahap dari formasi ''True Prime Pairs'' ini kedalam proses ''[[e-Commerce|https://github.com/chetabahana/chetabahana.github.io/wiki/Mapping#konfigurasi]]''.

```json
Description
===========
Getting result within a huge package (5 to 19) by spreading (11)
the untouched objects (7) and tunneling (13) them in to a definite scheme (17).

Compositions
============
+-----+-----+-----+-----+-----+-----+-----+-----+        -----  64 - 65
| 102 |   1 |   - |   - |   - |   - |   - | {11}| 114      5¨ » Buka Toko
+-----+-----+-----+-----+-----+-----+-----+-----+        -----  65 - 66
|   - |   - | 200 |   - |   - |   - |   - | {47}| 247      7¨ » Stok Barang
+-----+-----+-----+-----+-----+-----+-----+-----+        -----  66 - 67
|   - |   - |   - | {40}|   1 |   - |   - | {98}| 139     11¨ » Merchant Centre
+-----+-----+-----+-----+-----+-----+-----+-----+        -----  67 - 68
|   - |   - |   - |   - |   - | 200 |   - | {86}| 286     13¨ » Peluang Terbaik
+-----+-----+-----+-----+-----+-----+-----+-----+        ----   68 - 71
|   - |   - |   - |   - |   - |   - |  50 | 107 |{157}    17¨ » Portfolio
+-----+-----+-----+-----+-----+-----+-----+-----+        -----  71 - 17
|  66 |  30 |   8 | {50}|  30 |   8 |   - | 594 |{786}    19¨ » Network
+-----+-----+-----+-----+-----+-----+-----+-----+        ---------------
  168 |  31   208   {90}|  31   208    50 | 943 |{1729}         17 - 29
                     Δ
                   77|78
```

Dalam project ini prosesnya dilakukan via ''[[GitHub Actions]]'' dan ''[[GitHub API]]'' dimana target akhirnya disetel guna mendapatkan ''[[Metoda CI/CD|https://en.wikipedia.org/wiki/CI/CD]]'' yang paling optimal dalam melaksanakan ''[[Directions|Efisiensi]]''. 

[[<img src=https://user-images.githubusercontent.com/36441664/71275228-f0288a80-2386-11ea-9f8e-f197e5976e27.png>|https://www.sciencedirect.com/topics/computer-science/programming-methodology]]

Detilnya dibahas ''[[Attribute#node|terpisah]]'' yang akan berujung format konfigurasi ''[[Programming|Pemrograman]]'' dalam ''[[3#skema|tiga (3)]]'' proses: ''(1). '''[[Bagan]]''' (formasi-329), (2). '''[[Diagram]]''' (formasi-289), dan (3). '''[[Mapping]]''' (formasi-168)''.


Sekian.<br>
15.05.1442<br>

'''SALAM Sukses!'''<br>
'''© [[Chetabahana Project|https://github.com/MarketLeader]]'''<br>
[[<img src=https://stackexchange.com/users/flair/5054985.png>|https://stackoverflow.com/users/4058484/chetabahana?tab=profile]]  

==''Referensi''==
* [[Spec Compliance: Strict input coercion for scalars|https://github.com/graphql/graphql-js/issues/1324#issuecomment-390011471]]
* [[GraphQL error: Schema must be an instance of GraphQLSchema|https://github.com/apollographql/react-apollo/issues/742]]
* [[Error: Cannot use GraphQLObjectType “__Directive” from another module or realm|https://stackoverflow.com/a/55026878/4058484]]

<table>
  <thead>
    <tr>
      <th>[[:arrow_double_up:|https://github.com/chetabahana/chetabahana.github.io/wiki]]</th>
      <th>[[:arrow_up_small:|https://github.com/MarketLeader/marketleader.github.io/wiki]]</th>
      <th>[[Home|:rewind:]] [[Home|Intro]]</th>
      <th>[[:arrow_backward:|https://github.com/MarketLeader/Tutorial-HelloWorld/wiki]] [[Prev|https://github.com/MarketLeader/Tutorial-HelloWorld/wiki]]</th>
      <th>[[:repeat:|https://github.com/MarketLeader/Tutorial-HelloWorld/wiki]] [[Repo|https://github.com/chetabahana/chetabahana.github.io]]</th>
      <th>[[Next|https://github.com/MarketLeader/Google-Sites-API/wiki]] [[:arrow_forward:|https://github.com/MarketLeader/Google-Sites-API/wiki]]</th>
      <th>[[Last|https://github.com/MarketLeader/Google-Content-API/wiki]] [[:fast_forward:|https://github.com/MarketLeader/Google-Content-API/wiki]]</th>
      <th>[[:arrow_down_small:|https://github.com/MarketLeader/Google-AdWords-API/wiki]]</th>
      <th>[[:arrow_double_down:|https://github.com/MarketLeader/Toko-Chetabahana/wiki]]</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>[[<img src="https://avatars1.githubusercontent.com/u/36441664?v=3&s=20" class="avatar">|https://github.com/chetabahana]]</td><td colspan="7">This [[Implementasi#table-of-contents|wiki]] is courtesy of '''[[Chetabahana Project|https://github.com/MarketLeader]]'''. Find all of them on '''[[Project Map|https://github.com/chetabahana/chetabahana.github.io/wiki/Skema#Implementasi]]'''.</td><td>[[<img src="https://avatars2.githubusercontent.com/u/36441943?v=3&s=20">|https://github.com/MarketLeader]]</td>   
    </tr>
  </tbody>
</table>
