<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classcsl_1_1Tensor" kind="class" language="C++" prot="public">
    <compoundname>csl::Tensor</compoundname>
    <basecompoundref refid="classstd_1_1shared__ptr" prot="public" virt="non-virtual">std::shared_ptr&lt; TensorParent &gt;</basecompoundref>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classcsl_1_1Tensor_1a67324d06a4976f94ae32774e8354f1d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>csl::Tensor::Tensor</definition>
        <argsstring>(const std::string &amp;t_name, const Space *t_space)</argsstring>
        <name>Tensor</name>
        <qualifiedname>csl::Tensor::Tensor</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>t_name</declname>
        </param>
        <param>
          <type>const <ref refid="classcsl_1_1Space" kindref="compound">Space</ref> *</type>
          <declname>t_space</declname>
        </param>
        <briefdescription>
<para>Constructor of a 1-indexed parent. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the parent. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t_space</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classcsl_1_1Vector" kindref="compound">Vector</ref> space in which the <ref refid="classcsl_1_1Index" kindref="compound">Index</ref> lives. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/indicial.h" line="631" column="5" bodyfile="src/csl/indicial.h" bodystart="631" bodyend="634"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1Tensor_1aaf9c1c4ea203812b3c471b09a723d654" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>csl::Tensor::Tensor</definition>
        <argsstring>(const std::string &amp;t_name, const std::vector&lt; const Space * &gt; &amp;t_space)</argsstring>
        <name>Tensor</name>
        <qualifiedname>csl::Tensor::Tensor</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>t_name</declname>
        </param>
        <param>
          <type>const std::vector&lt; const <ref refid="classcsl_1_1Space" kindref="compound">Space</ref> * &gt; &amp;</type>
          <declname>t_space</declname>
        </param>
        <briefdescription>
<para>Constructor of a n-indexed parent. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the parent. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t_space</parametername>
</parameternamelist>
<parameterdescription>
<para>List of the n spaces in which each index lives. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/indicial.h" line="640" column="5" bodyfile="src/csl/indicial.h" bodystart="640" bodyend="644"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1Tensor_1ac28a258f45cfcb02569e081631322ae1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>csl::Tensor::Tensor</definition>
        <argsstring>(const std::string &amp;t_name, const std::vector&lt; const Space * &gt; &amp;t_space, const Expr &amp;t_tensor)</argsstring>
        <name>Tensor</name>
        <qualifiedname>csl::Tensor::Tensor</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>t_name</declname>
        </param>
        <param>
          <type>const std::vector&lt; const <ref refid="classcsl_1_1Space" kindref="compound">Space</ref> * &gt; &amp;</type>
          <declname>t_space</declname>
        </param>
        <param>
          <type>const <ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref> &amp;</type>
          <declname>t_tensor</declname>
        </param>
        <briefdescription>
<para>Constructor of a n-indexed parent, with explicit tensor <bold>tensor</bold>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the parent. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t_space</parametername>
</parameternamelist>
<parameterdescription>
<para>List of the n spaces in which each index lives. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>Explicit tensor. Must match exactly the shape given by the <ref refid="classcsl_1_1IndexStructure" kindref="compound">IndexStructure</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/indicial.h" line="653" column="5" bodyfile="src/csl/indicial.h" bodystart="653" bodyend="658"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1Tensor_1a8078fbe522573aa796133442f67b0065" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>csl::Tensor::Tensor</definition>
        <argsstring>(const std::string &amp;t_name, const Space *t_space, const Expr &amp;t_tensor)</argsstring>
        <name>Tensor</name>
        <qualifiedname>csl::Tensor::Tensor</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>t_name</declname>
        </param>
        <param>
          <type>const <ref refid="classcsl_1_1Space" kindref="compound">Space</ref> *</type>
          <declname>t_space</declname>
        </param>
        <param>
          <type>const <ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref> &amp;</type>
          <declname>t_tensor</declname>
        </param>
        <briefdescription>
<para>Constructor of a 1-indexed parent, with explicit tensor <bold>tensor</bold>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the parent. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t_space</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classcsl_1_1Vector" kindref="compound">Vector</ref> space in which the index lives. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>Explicit tensor. Must match exactly the shape given by the <ref refid="classcsl_1_1IndexStructure" kindref="compound">IndexStructure</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/indicial.h" line="667" column="5" bodyfile="src/csl/indicial.h" bodystart="667" bodyend="672"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1Tensor_1ac7a3680066fd28a268aaaa1c9964406d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref></type>
        <definition>Expr csl::Tensor::operator()</definition>
        <argsstring>(Args &amp;&amp;...args)</argsstring>
        <name>operator()</name>
        <qualifiedname>csl::Tensor::operator()</qualifiedname>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/indicial.h" line="675" column="17" bodyfile="src/csl/indicial.h" bodystart="675" bodyend="678"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1Tensor_1a01c0bf0647b15ca662cbd2b8b35a20a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref></type>
        <definition>Expr csl::Tensor::operator()</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;indices, Args &amp;&amp;...args)</argsstring>
        <name>operator()</name>
        <qualifiedname>csl::Tensor::operator()</qualifiedname>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/indicial.h" line="681" column="17" bodyfile="src/csl/indicial.h" bodystart="681" bodyend="684"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1Tensor_1a4c5713503d034fdbc5b199a64f0b4bcb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref></type>
        <definition>Expr csl::Tensor::operator()</definition>
        <argsstring>(const std::vector&lt; Index &gt; &amp;indices, Args &amp;&amp;...args)</argsstring>
        <name>operator()</name>
        <qualifiedname>csl::Tensor::operator()</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="classcsl_1_1Index" kindref="compound">Index</ref> &gt; &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/indicial.h" line="687" column="17" bodyfile="src/csl/indicial.h" bodystart="687" bodyend="690"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>csl::Tensor</label>
        <link refid="classcsl_1_1Tensor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::shared_ptr&lt; TensorParent &gt;</label>
        <link refid="classstd_1_1shared__ptr"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>csl::Tensor</label>
        <link refid="classcsl_1_1Tensor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::shared_ptr&lt; TensorParent &gt;</label>
        <link refid="classstd_1_1shared__ptr"/>
      </node>
    </collaborationgraph>
    <location file="src/csl/indicial.h" line="622" column="1" bodyfile="src/csl/indicial.h" bodystart="622" bodyend="691"/>
    <listofallmembers>
      <member refid="classcsl_1_1Tensor_1ac7a3680066fd28a268aaaa1c9964406d" prot="public" virt="non-virtual"><scope>csl::Tensor</scope><name>operator()</name></member>
      <member refid="classcsl_1_1Tensor_1a01c0bf0647b15ca662cbd2b8b35a20a6" prot="public" virt="non-virtual"><scope>csl::Tensor</scope><name>operator()</name></member>
      <member refid="classcsl_1_1Tensor_1a4c5713503d034fdbc5b199a64f0b4bcb" prot="public" virt="non-virtual"><scope>csl::Tensor</scope><name>operator()</name></member>
      <member refid="classcsl_1_1Tensor_1a67324d06a4976f94ae32774e8354f1d0" prot="public" virt="non-virtual"><scope>csl::Tensor</scope><name>Tensor</name></member>
      <member refid="classcsl_1_1Tensor_1aaf9c1c4ea203812b3c471b09a723d654" prot="public" virt="non-virtual"><scope>csl::Tensor</scope><name>Tensor</name></member>
      <member refid="classcsl_1_1Tensor_1ac28a258f45cfcb02569e081631322ae1" prot="public" virt="non-virtual"><scope>csl::Tensor</scope><name>Tensor</name></member>
      <member refid="classcsl_1_1Tensor_1a8078fbe522573aa796133442f67b0065" prot="public" virt="non-virtual"><scope>csl::Tensor</scope><name>Tensor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
