<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classJSON_1_1Object" kind="class" language="C++" prot="public">
    <compoundname>JSON::Object</compoundname>
    <derivedcompoundref refid="classJSON_1_1AbstractLeaf" prot="public" virt="non-virtual">JSON::AbstractLeaf</derivedcompoundref>
    <derivedcompoundref refid="classJSON_1_1AbstractLeaf" prot="public" virt="non-virtual">JSON::AbstractLeaf</derivedcompoundref>
    <derivedcompoundref refid="classJSON_1_1Node" prot="public" virt="non-virtual">JSON::Node</derivedcompoundref>
    <derivedcompoundref refid="classJSON_1_1Node" prot="public" virt="non-virtual">JSON::Node</derivedcompoundref>
    <includes refid="gui_2jsonObject_8h" local="no">jsonObject.h</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classJSON_1_1Object_1a496b17f83c592bbb92720e5288abd172" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string JSON::Object::specifier</definition>
        <argsstring></argsstring>
        <name>specifier</name>
        <qualifiedname>JSON::Object::specifier</qualifiedname>
        <briefdescription>
<para>String that represents the specifier of the object. For example: &quot;name&quot;: &quot;electron&quot; is an object of which the specifier is the string &quot;name&quot;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonObject.h" line="83" column="17" bodyfile="src/grafed/gui/jsonObject.h" bodystart="83" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classJSON_1_1Object_1a534b719c1190ea30c0a9ab9d12f8f619" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>JSON::Object::Object</definition>
        <argsstring>(std::string const &amp;t_specifier)</argsstring>
        <name>Object</name>
        <qualifiedname>JSON::Object::Object</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>t_specifier</declname>
        </param>
        <briefdescription>
<para>Construtor with one paramter that initializes <bold>specifier</bold>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_specifier</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the <ref refid="classJSON_1_1Object" kindref="compound">Object</ref>&apos;s specifier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonObject.h" line="50" column="14" bodyfile="src/grafed/gui/jsonObject.h" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Object_1a6611414d3cba6dc3028378f88847bb9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual JSON::Object::~Object</definition>
        <argsstring>()</argsstring>
        <name>~Object</name>
        <qualifiedname>JSON::Object::~Object</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonObject.h" line="57" column="13" bodyfile="src/grafed/gui/jsonObject.h" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Object_1ae3c04b4483cfe3b2879e9b5a1e79a5e3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string JSON::Object::getSpecifier</definition>
        <argsstring>() const</argsstring>
        <name>getSpecifier</name>
        <qualifiedname>JSON::Object::getSpecifier</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><bold>specifier</bold> The <ref refid="classJSON_1_1Object" kindref="compound">Object</ref>&apos;s specifier. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonObject.h" line="62" column="17" bodyfile="src/grafed/gui/jsonObject.h" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Object_1a941a79c1ca10023f8e8e77e60b23e3f8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool JSON::Object::isNode</definition>
        <argsstring>() const</argsstring>
        <name>isNode</name>
        <qualifiedname>JSON::Object::isNode</qualifiedname>
        <reimplementedby refid="classJSON_1_1Node_1a1882689bb0b9cfd9f87f29bc895bf31f">isNode</reimplementedby>
        <reimplementedby refid="classJSON_1_1Node_1a1882689bb0b9cfd9f87f29bc895bf31f">isNode</reimplementedby>
        <briefdescription>
<para>Tells if the <ref refid="classJSON_1_1Object" kindref="compound">Object</ref> is a <ref refid="classJSON_1_1Node" kindref="compound">Node</ref> or not. This function is reimplemented in <ref refid="classJSON_1_1Node" kindref="compound">Node</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>False (default). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonObject.h" line="72" column="18" bodyfile="src/grafed/gui/jsonObject.h" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Object_1a534b719c1190ea30c0a9ab9d12f8f619" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>JSON::Object::Object</definition>
        <argsstring>(std::string const &amp;t_specifier)</argsstring>
        <name>Object</name>
        <qualifiedname>JSON::Object::Object</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>t_specifier</declname>
        </param>
        <briefdescription>
<para>Construtor with one paramter that initializes <bold>specifier</bold>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_specifier</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the <ref refid="classJSON_1_1Object" kindref="compound">Object</ref>&apos;s specifier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/jsonparser/jsonObject.h" line="50" column="14" bodyfile="src/grafed/jsonparser/jsonObject.h" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Object_1a6611414d3cba6dc3028378f88847bb9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual JSON::Object::~Object</definition>
        <argsstring>()</argsstring>
        <name>~Object</name>
        <qualifiedname>JSON::Object::~Object</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/jsonparser/jsonObject.h" line="57" column="13" bodyfile="src/grafed/jsonparser/jsonObject.h" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Object_1ae3c04b4483cfe3b2879e9b5a1e79a5e3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string JSON::Object::getSpecifier</definition>
        <argsstring>() const</argsstring>
        <name>getSpecifier</name>
        <qualifiedname>JSON::Object::getSpecifier</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><bold>specifier</bold> The <ref refid="classJSON_1_1Object" kindref="compound">Object</ref>&apos;s specifier. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/jsonparser/jsonObject.h" line="62" column="17" bodyfile="src/grafed/jsonparser/jsonObject.h" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Object_1a941a79c1ca10023f8e8e77e60b23e3f8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool JSON::Object::isNode</definition>
        <argsstring>() const</argsstring>
        <name>isNode</name>
        <qualifiedname>JSON::Object::isNode</qualifiedname>
        <reimplementedby refid="classJSON_1_1Node_1a1882689bb0b9cfd9f87f29bc895bf31f">isNode</reimplementedby>
        <reimplementedby refid="classJSON_1_1Node_1a1882689bb0b9cfd9f87f29bc895bf31f">isNode</reimplementedby>
        <briefdescription>
<para>Tells if the <ref refid="classJSON_1_1Object" kindref="compound">Object</ref> is a <ref refid="classJSON_1_1Node" kindref="compound">Node</ref> or not. This function is reimplemented in <ref refid="classJSON_1_1Node" kindref="compound">Node</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>False (default). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/jsonparser/jsonObject.h" line="72" column="18" bodyfile="src/grafed/jsonparser/jsonObject.h" bodystart="72" bodyend="75"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Abstract object in <ref refid="namespaceJSON" kindref="compound">JSON</ref> tree structure. Can be specialized either in <ref refid="classJSON_1_1Node" kindref="compound">Node</ref> or in <ref refid="classJSON_1_1Leaf" kindref="compound">Leaf</ref>&lt;T&gt; with a specific type T. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>JSON::AbstractLeaf</label>
        <link refid="classJSON_1_1AbstractLeaf"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>JSON::Leaf&lt; Type &gt;</label>
        <link refid="classJSON_1_1Leaf"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>JSON::List</label>
        <link refid="classJSON_1_1List"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>JSON::Node</label>
        <link refid="classJSON_1_1Node"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>JSON::Object</label>
        <link refid="classJSON_1_1Object"/>
      </node>
    </inheritancegraph>
    <location file="src/grafed/gui/jsonObject.h" line="43" column="1" bodyfile="src/grafed/jsonparser/jsonObject.h" bodystart="43" bodyend="84"/>
    <listofallmembers>
      <member refid="classJSON_1_1Object_1ae3c04b4483cfe3b2879e9b5a1e79a5e3" prot="public" virt="non-virtual"><scope>JSON::Object</scope><name>getSpecifier</name></member>
      <member refid="classJSON_1_1Object_1ae3c04b4483cfe3b2879e9b5a1e79a5e3" prot="public" virt="non-virtual"><scope>JSON::Object</scope><name>getSpecifier</name></member>
      <member refid="classJSON_1_1Object_1a941a79c1ca10023f8e8e77e60b23e3f8" prot="public" virt="virtual"><scope>JSON::Object</scope><name>isNode</name></member>
      <member refid="classJSON_1_1Object_1a941a79c1ca10023f8e8e77e60b23e3f8" prot="public" virt="virtual"><scope>JSON::Object</scope><name>isNode</name></member>
      <member refid="classJSON_1_1Object_1a534b719c1190ea30c0a9ab9d12f8f619" prot="public" virt="non-virtual"><scope>JSON::Object</scope><name>Object</name></member>
      <member refid="classJSON_1_1Object_1a534b719c1190ea30c0a9ab9d12f8f619" prot="public" virt="non-virtual"><scope>JSON::Object</scope><name>Object</name></member>
      <member refid="classJSON_1_1Object_1a496b17f83c592bbb92720e5288abd172" prot="protected" virt="non-virtual"><scope>JSON::Object</scope><name>specifier</name></member>
      <member refid="classJSON_1_1Object_1a6611414d3cba6dc3028378f88847bb9a" prot="public" virt="virtual"><scope>JSON::Object</scope><name>~Object</name></member>
      <member refid="classJSON_1_1Object_1a6611414d3cba6dc3028378f88847bb9a" prot="public" virt="virtual"><scope>JSON::Object</scope><name>~Object</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
