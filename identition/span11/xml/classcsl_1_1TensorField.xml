<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classcsl_1_1TensorField" kind="class" language="C++" prot="public">
    <compoundname>csl::TensorField</compoundname>
    <basecompoundref refid="classstd_1_1shared__ptr" prot="public" virt="non-virtual">std::shared_ptr&lt; TensorFieldParent &gt;</basecompoundref>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classcsl_1_1TensorField_1a74b6f805a36c480ef2e4af5323b10223" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>csl::TensorField::TensorField</definition>
        <argsstring>(const std::string &amp;t_name, const Space *t_spaceField)</argsstring>
        <name>TensorField</name>
        <qualifiedname>csl::TensorField::TensorField</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>t_name</declname>
        </param>
        <param>
          <type>const <ref refid="classcsl_1_1Space" kindref="compound">Space</ref> *</type>
          <declname>t_spaceField</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/tensorField.h" line="143" column="5" bodyfile="src/csl/tensorField.h" bodystart="143" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1TensorField_1a479febd8ef81ecd2746816e23b5f2da3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>csl::TensorField::TensorField</definition>
        <argsstring>(const std::string &amp;t_name, const Space *t_spaceField, const std::vector&lt; const Space * &gt; &amp;spaces)</argsstring>
        <name>TensorField</name>
        <qualifiedname>csl::TensorField::TensorField</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>t_name</declname>
        </param>
        <param>
          <type>const <ref refid="classcsl_1_1Space" kindref="compound">Space</ref> *</type>
          <declname>t_spaceField</declname>
        </param>
        <param>
          <type>const std::vector&lt; const <ref refid="classcsl_1_1Space" kindref="compound">Space</ref> * &gt; &amp;</type>
          <declname>spaces</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/tensorField.h" line="149" column="5" bodyfile="src/csl/tensorField.h" bodystart="149" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1TensorField_1abb3a67a52e82ea7075ce34f9add9e432" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref></type>
        <definition>Expr csl::TensorField::operator()</definition>
        <argsstring>(Args &amp;&amp;...args)</argsstring>
        <name>operator()</name>
        <qualifiedname>csl::TensorField::operator()</qualifiedname>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/tensorField.h" line="158" column="14" bodyfile="src/csl/tensorField.h" bodystart="158" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1TensorField_1ac490a0242ac90205e73185f00d78b35b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref></type>
        <definition>Expr csl::TensorField::operator()</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;indices, Args &amp;&amp;...args)</argsstring>
        <name>operator()</name>
        <qualifiedname>csl::TensorField::operator()</qualifiedname>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/tensorField.h" line="165" column="14" bodyfile="src/csl/tensorField.h" bodystart="165" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1TensorField_1adf01aaca0d1fd0a04b3f965077705c79" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref></type>
        <definition>Expr csl::TensorField::operator()</definition>
        <argsstring>(const std::vector&lt; Index &gt; &amp;indices, Args &amp;&amp;...args)</argsstring>
        <name>operator()</name>
        <qualifiedname>csl::TensorField::operator()</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="classcsl_1_1Index" kindref="compound">Index</ref> &gt; &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/tensorField.h" line="172" column="14" bodyfile="src/csl/tensorField.h" bodystart="172" bodyend="175"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>csl::TensorField</label>
        <link refid="classcsl_1_1TensorField"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::shared_ptr&lt; TensorFieldParent &gt;</label>
        <link refid="classstd_1_1shared__ptr"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>csl::TensorField</label>
        <link refid="classcsl_1_1TensorField"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::shared_ptr&lt; TensorFieldParent &gt;</label>
        <link refid="classstd_1_1shared__ptr"/>
      </node>
    </collaborationgraph>
    <location file="src/csl/tensorField.h" line="137" column="1" bodyfile="src/csl/tensorField.h" bodystart="137" bodyend="176"/>
    <listofallmembers>
      <member refid="classcsl_1_1TensorField_1abb3a67a52e82ea7075ce34f9add9e432" prot="public" virt="non-virtual"><scope>csl::TensorField</scope><name>operator()</name></member>
      <member refid="classcsl_1_1TensorField_1ac490a0242ac90205e73185f00d78b35b" prot="public" virt="non-virtual"><scope>csl::TensorField</scope><name>operator()</name></member>
      <member refid="classcsl_1_1TensorField_1adf01aaca0d1fd0a04b3f965077705c79" prot="public" virt="non-virtual"><scope>csl::TensorField</scope><name>operator()</name></member>
      <member refid="classcsl_1_1TensorField_1a74b6f805a36c480ef2e4af5323b10223" prot="public" virt="non-virtual"><scope>csl::TensorField</scope><name>TensorField</name></member>
      <member refid="classcsl_1_1TensorField_1a479febd8ef81ecd2746816e23b5f2da3" prot="public" virt="non-virtual"><scope>csl::TensorField</scope><name>TensorField</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
