<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="abstract_8cpp" kind="file" language="C++">
    <compoundname>abstract.cpp</compoundname>
    <includes refid="abstract_8h" local="yes">abstract.h</includes>
    <includes refid="comparison_8h" local="yes">comparison.h</includes>
    <includes refid="indicial_8h" local="yes">indicial.h</includes>
    <includes refid="librarydependency_8h" local="yes">librarydependency.h</includes>
    <includes refid="literal_8h" local="yes">literal.h</includes>
    <includes refid="numerical_8h" local="yes">numerical.h</includes>
    <includes refid="operations_8h" local="yes">operations.h</includes>
    <includes refid="options_8h" local="yes">options.h</includes>
    <includes refid="simplification_8h" local="yes">simplification.h</includes>
    <includes refid="utils_8h" local="yes">utils.h</includes>
    <incdepgraph>
      <node id="1">
        <label>src/csl/abstract.cpp</label>
        <link refid="abstract_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>abstract.h</label>
        <link refid="abstract_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>allocator.h</label>
        <link refid="allocator_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>buildingBlock.h</label>
        <link refid="buildingBlock_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>commutation.h</label>
        <link refid="commutation_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>comparison.h</label>
        <link refid="comparison_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>element.h</label>
        <link refid="element_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>enum.h</label>
        <link refid="enum_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>error.h</label>
        <link refid="error_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>evaluation.h</label>
        <link refid="evaluation_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>index.h</label>
        <link refid="index_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>indicial.h</label>
        <link refid="indicial_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>interface.h</label>
        <link refid="interface_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>librarydependency.h</label>
        <link refid="librarydependency_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>literal.h</label>
        <link refid="literal_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>memory_pool.h</label>
        <link refid="memory__pool_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>numerical.h</label>
        <link refid="numerical_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>operations.h</label>
        <link refid="operations_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>operator.h</label>
        <link refid="operator_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>options.h</label>
        <link refid="options_8h"/>
      </node>
      <node id="33">
        <label>parent.h</label>
        <link refid="parent_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>scalarFunc.h</label>
        <link refid="scalarFunc_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>simplification.h</label>
        <link refid="simplification_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>std_shared_ptr_inheritance.h</label>
        <link refid="std__shared__ptr__inheritance_8h"/>
      </node>
      <node id="38">
        <label>std_vector_implementation.h</label>
        <link refid="csl_2std__vector__implementation_8h"/>
      </node>
      <node id="26">
        <label>support.h</label>
        <link refid="support_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>symmetry.h</label>
        <link refid="symmetry_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>typedef.h</label>
        <link refid="typedef_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>variableParent.h</label>
        <link refid="variableParent_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>vector.h</label>
        <link refid="vector_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>bitset</label>
      </node>
      <node id="3">
        <label>cassert</label>
      </node>
      <node id="27">
        <label>cmath</label>
      </node>
      <node id="21">
        <label>csignal</label>
      </node>
      <node id="7">
        <label>functional</label>
      </node>
      <node id="10">
        <label>initializer_list</label>
      </node>
      <node id="4">
        <label>iostream</label>
      </node>
      <node id="11">
        <label>map</label>
      </node>
      <node id="8">
        <label>memory</label>
      </node>
      <node id="14">
        <label>mutex</label>
      </node>
      <node id="9">
        <label>optional</label>
      </node>
      <node id="12">
        <label>set</label>
      </node>
      <node id="5">
        <label>sstream</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="22">
        <label>string_view</label>
      </node>
      <node id="15">
        <label>thread</label>
      </node>
      <node id="13">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacecsl">csl</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>MARTY.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MARTY<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MARTY<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>along<sp/>with<sp/>MARTY.<sp/>If<sp/>not,<sp/>see<sp/>&lt;https://www.gnu.org/licenses/&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="abstract_8h" kindref="compound">abstract.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="comparison_8h" kindref="compound">comparison.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="indicial_8h" kindref="compound">indicial.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="librarydependency_8h" kindref="compound">librarydependency.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="literal_8h" kindref="compound">literal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="numerical_8h" kindref="compound">numerical.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="operations_8h" kindref="compound">operations.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="options_8h" kindref="compound">options.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="simplification_8h" kindref="compound">simplification.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="utils_8h" kindref="compound">utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecsl" kindref="compound">csl</ref><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">Expr<sp/>Abstract::self()</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CopySelf(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>emptyString<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<ref refid="classcsl_1_1Abstract_1af7f5e7466e754984a2c4394a112464f7" kindref="member">Abstract::getName</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="38"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>emptyString;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;Abstract::getLatexName()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="43"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1af7f5e7466e754984a2c4394a112464f7" kindref="member">getName</ref>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a2263731ca94825f35281e69fb258cf87" kindref="member">Abstract::getCommutable</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="48"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Abstract::memoryOverhead()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="53"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a867135c96776248add60018f4aa7a578" kindref="member">Abstract::setName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a7bb29d316b8f64652cef472a6c23f001" kindref="member">Abstract::setCommutable</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a5856c3d55a6d1406970f3656e61efe8e" kindref="member">Abstract::getDim</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="68"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Abstract::getElementary()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="73"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Abstract::getAllDependencies()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="80"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Abstract::printCode(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>std::ostream<sp/>&amp;)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="87"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">std::string<sp/>Abstract::regularName(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;name)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>regularName(std::string_view(name));</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">std::string<sp/>Abstract::regularName(std::string_view<sp/>name)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name.empty())</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>reg(name);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>&amp;c<sp/>:<sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>and<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>and<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;Z&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>and<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/></highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/></highlight><highlight class="charliteral">&apos;m&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;~&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal"><sp/>and<sp/>c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reg[0]<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>and<sp/>reg[0]<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg.insert(reg.begin(),<sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reg;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">std::string<sp/>Abstract::regularLiteral(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;name)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>regularLiteral(std::string_view(name));</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">std::string<sp/>Abstract::regularLiteral(std::string_view<sp/>name)</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>reg(name);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>reg.size();<sp/>++i)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reg[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg.insert(reg.begin()<sp/>+<sp/>i,<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reg;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Abstract::printProp(std::ostream<sp/>&amp;)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="142"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a89e45ffc7b65f92e77e592f76f70934c" kindref="member">Abstract::printExplicit</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="146"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;EXPLICIT<sp/>PRINT<sp/>OF<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>(mode);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;type=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classcsl_1_1Abstract_1aa781456c3f801b37ce169c83514c51c1" kindref="member">getType</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>(1);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcsl_1_1Abstract_1aa034448201c9e7998bbbb5e409636b30" kindref="member">getNArgs</ref>()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classcsl_1_1Abstract_1aa034448201c9e7998bbbb5e409636b30" kindref="member">getNArgs</ref>();<sp/>i++)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1ac33a42309d629d47bfdbede4e152414e" kindref="member">getArgument</ref>(i)-&gt;printExplicit(mode);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;END<sp/>OF<sp/>EXPLICIT<sp/>PRINT<sp/>OF<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>(mode);</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1aa067d4a97135bfe2052a7e21c28f75be" kindref="member">Abstract::printLaTeX</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="162"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal">LibDependency<sp/>Abstract::getLibDependency()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="169"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LibDependency();</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a628563238145f3a9acc331f1a89ce32f" kindref="member">Abstract::getValued</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="174"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a6aa6bcc7cb8ee1574f29dc6ab6c6f0ed" kindref="member">Abstract::getNum</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="181"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a9531d78d67c82e288c0130da5b1ba80b" kindref="member">Abstract::getDenom</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="186"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1aa034448201c9e7998bbbb5e409636b30" kindref="member">Abstract::getNArgs</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="191"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout&lt;&lt;&quot;Warning:<sp/>function<sp/>getNArgs<sp/>of<sp/>Abstract<sp/>called.<sp/>Should<sp/>not<sp/>be.\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1add364193f7a78ac28f7001c7f4036453" kindref="member">Abstract::getNIndices</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="197"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal">Index<sp/><ref refid="classcsl_1_1Abstract_1a3234ce243f6a2e11950be42f10100943" kindref="member">Abstract::getIndex</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="204"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Index();</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Abstract::resetIndexStructure()</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal">IndexStructure<sp/><ref refid="classcsl_1_1Abstract_1ae125a32b6f3d0368b6055d4e58c1ff3f" kindref="member">Abstract::getIndexStructure</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="215"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IndexStructure();</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal">IndexStructure<sp/><ref refid="classcsl_1_1Abstract_1ae125a32b6f3d0368b6055d4e58c1ff3f" kindref="member">Abstract::getIndexStructure</ref>(<ref refid="classcsl_1_1Space" kindref="compound">csl::Space</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*space)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="220"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1IndexStructure" kindref="compound">csl::IndexStructure</ref><sp/>structure<sp/>=<sp/><ref refid="classcsl_1_1Abstract_1ae125a32b6f3d0368b6055d4e58c1ff3f" kindref="member">getIndexStructure</ref>();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>structure.size();<sp/>++i)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(structure[i].getSpace()<sp/>!=<sp/>space)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>structure.erase(structure.begin()<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--i;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>structure;</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IndexStructure<sp/>&amp;Abstract::getIndexStructureView()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="231"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>IndexStructure<sp/>empty;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>empty;</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal">IndexStructure<sp/>&amp;Abstract::getIndexStructureView()</highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>IndexStructure<sp/>empty;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>empty;</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal">IndexStructure<sp/><ref refid="classcsl_1_1Abstract_1aa4136dc23f1fba4bf897b54c8592ccfc" kindref="member">Abstract::getFreeIndexStructure</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="247"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1ae125a32b6f3d0368b6055d4e58c1ff3f" kindref="member">getIndexStructure</ref>().<ref refid="classcsl_1_1IndexStructure_1afc69b0341180adbe495dbfc263d4f1f4" kindref="member">getFreeStructure</ref>();</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal">Parent<sp/><ref refid="classcsl_1_1Abstract_1ab150130c9f67daaf6aba52b9f6b90941" kindref="member">Abstract::getParent</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="252"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal">Parent_info<sp/>Abstract::getParent_info()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="257"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal">Tensor<sp/>Abstract::getPoint()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="262"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Abstract::setParent(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Parent<sp/>&amp;)</highlight></codeline>
<codeline lineno="267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal">optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Abstract_1acc0eb077e25c9a67d15269cf8d5f0511" kindref="member">Abstract::replaceIndex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>&amp;,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="273"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nullopt;</highlight></codeline>
<codeline lineno="275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal">optional&lt;Expr&gt;<sp/>Abstract::replaceIndices(std::vector&lt;csl::Index&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;csl::Index&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="281"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nullopt;</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Abstract::replaceIndexInPlace(Index<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;,<sp/>Index<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)</highlight></codeline>
<codeline lineno="286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal">optional&lt;Expr&gt;<sp/>Abstract::contractIndex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>&amp;index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="290"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>Index<sp/>dummyIndex<sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>dummyIndex.setFree(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1acc0eb077e25c9a67d15269cf8d5f0511" kindref="member">replaceIndex</ref>(index,<sp/>dummyIndex);</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal">csl::vector_expr</highlight></codeline>
<codeline lineno="297"><highlight class="normal">Abstract::breakSpace(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Space<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*brokenSpace,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;const<sp/>Space<sp/>*&gt;<sp/>&amp;newSpace)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="299"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/><ref refid="namespacemty_1_1Topology_1a6de8ba3cc69defb53646935760a240ac" kindref="member">names</ref>(newSpace.size());</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/><ref refid="namespacemty_1_1Topology_1a6de8ba3cc69defb53646935760a240ac" kindref="member">names</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newSpace[i])</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemty_1_1Topology_1a6de8ba3cc69defb53646935760a240ac" kindref="member">names</ref>[i]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>breakSpace(brokenSpace,<sp/>newSpace,<sp/>names);</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal">csl::vector_expr<sp/>Abstract::breakSpace(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Space<sp/>*,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;const<sp/>Space<sp/>*&gt;<sp/>&amp;,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;string&gt;<sp/>&amp;)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="310"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>csl::vector_expr();</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a70f946f9c59df045ef7416320ade89c7" kindref="member">Abstract::setIndexStructure</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IndexStructure<sp/>&amp;)</highlight></codeline>
<codeline lineno="315"><highlight class="normal">{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Abstract::setPoint(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor<sp/>&amp;)</highlight></codeline>
<codeline lineno="321"><highlight class="normal">{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1afd9d0336808e8adf4ccdccb51587ed8c" kindref="member">Abstract::checkIndexStructure</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;Index&gt;<sp/>&amp;t_index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="327"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(t_index.size()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1afd9d0336808e8adf4ccdccb51587ed8c" kindref="member">Abstract::checkIndexStructure</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>initializer_list&lt;Index&gt;<sp/>&amp;index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="334"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(index.size()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a7caee12abb451168149779a668dfc59e" kindref="member">Abstract::compareWithDummy</ref>(Expr_info<sp/>expr,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;Index,<sp/>Index&gt;<sp/>&amp;,</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="343"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>expr);</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a7caee12abb451168149779a668dfc59e" kindref="member">Abstract::compareWithDummy</ref>(Expr_info<sp/>expr,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keepAllCosntraints)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="348"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;Index,<sp/>Index&gt;<sp/>m;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a7caee12abb451168149779a668dfc59e" kindref="member">compareWithDummy</ref>(expr,<sp/>m,<sp/>keepAllCosntraints);</highlight></codeline>
<codeline lineno="351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a4f90ebb7cf7c26782bd36bc2a67fc5d4" kindref="member">Abstract::setFullySymmetric</ref>()</highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1ac318016372d14b795893fe7e59199084" kindref="member">Abstract::setFullyAntiSymmetric</ref>()</highlight></codeline>
<codeline lineno="360"><highlight class="normal">{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1ad431770faa4291116a50175193a11a88" kindref="member">Abstract::addSymmetry</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="366"><highlight class="normal">{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a5549ac0c186b3c6febf332245a25a82c" kindref="member">Abstract::addAntiSymmetry</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a42125e9765a771c47819548d342b0b28" kindref="member">Abstract::getNContractedPairs</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="378"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1abe9aceabbc0a99642e84c9025dbdc767" kindref="member">Abstract::permut</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="385"><highlight class="normal">{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal">csl::vector_expr<sp/><ref refid="classcsl_1_1Abstract_1a946d175d946da102c5f4cc91840703cb" kindref="member">Abstract::getPermutations</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="392"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal">set&lt;pair&lt;int,<sp/>int&gt;&gt;<sp/><ref refid="classcsl_1_1Abstract_1af04c0e4426f0bf9df365afe0148d59df" kindref="member">Abstract::getContractedPair</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="399"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal">vector&lt;int&gt;<sp/><ref refid="classcsl_1_1Abstract_1a625efe55a17b97a1c0f085bdbf3a962a" kindref="member">Abstract::getShape</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="406"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vector&lt;int&gt;(1,<sp/>1);</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>csl::vector_expr<sp/>&amp;<ref refid="classcsl_1_1Abstract_1ac83c44ae1e5315a38083bdb7acd8f3fa" kindref="member">Abstract::getVectorArgument</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="411"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>csl::vector_expr<sp/>empty;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>empty;</highlight></codeline>
<codeline lineno="416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Abstract::size()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="419"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Abstract::empty()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="424"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal">csl::vector_expr::iterator<sp/><ref refid="classcsl_1_1Abstract_1aad54ed41b2ce9bad3364fe30ad1a0d71" kindref="member">Abstract::begin</ref>()</highlight></codeline>
<codeline lineno="431"><highlight class="normal">{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>csl::vector_expr::iterator();</highlight></codeline>
<codeline lineno="435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal">csl::vector_expr::iterator<sp/><ref refid="classcsl_1_1Abstract_1a61e4e80d998a888a1a74d9ea3e10c0f1" kindref="member">Abstract::end</ref>()</highlight></codeline>
<codeline lineno="438"><highlight class="normal">{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>csl::vector_expr::iterator();</highlight></codeline>
<codeline lineno="442"><highlight class="normal">}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal">csl::vector_expr::const_iterator<sp/><ref refid="classcsl_1_1Abstract_1aad54ed41b2ce9bad3364fe30ad1a0d71" kindref="member">Abstract::begin</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="445"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>csl::vector_expr::const_iterator();</highlight></codeline>
<codeline lineno="449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal">csl::vector_expr::const_iterator<sp/><ref refid="classcsl_1_1Abstract_1a61e4e80d998a888a1a74d9ea3e10c0f1" kindref="member">Abstract::end</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="452"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>csl::vector_expr::const_iterator();</highlight></codeline>
<codeline lineno="456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal">Expr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<ref refid="classcsl_1_1Abstract_1ac33a42309d629d47bfdbede4e152414e" kindref="member">Abstract::getArgument</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="459"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="literal_8h_1a65960e7645699e5eeed663bab0d2309b" kindref="member">CSL_UNDEF</ref>;</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Expr<sp/>undef<sp/>=<sp/><ref refid="literal_8h_1a65960e7645699e5eeed663bab0d2309b" kindref="member">CSL_UNDEF</ref>;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal">Expr<sp/>&amp;<ref refid="classcsl_1_1Abstract_1ac33a42309d629d47bfdbede4e152414e" kindref="member">Abstract::getArgument</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="468"><highlight class="normal">{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>undef;</highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal">Expr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<ref refid="classcsl_1_1Abstract_1ac33a42309d629d47bfdbede4e152414e" kindref="member">Abstract::getArgument</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;<sp/>&amp;)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="475"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="literal_8h_1a65960e7645699e5eeed663bab0d2309b" kindref="member">CSL_UNDEF</ref>;</highlight></codeline>
<codeline lineno="479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal">Expr<sp/>&amp;<ref refid="classcsl_1_1Abstract_1ac33a42309d629d47bfdbede4e152414e" kindref="member">Abstract::getArgument</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;<sp/>&amp;)</highlight></codeline>
<codeline lineno="482"><highlight class="normal">{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>undef;</highlight></codeline>
<codeline lineno="486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1ad74c068f1da78856321932b6b6ae17dc" kindref="member">Abstract::isBuildingBlock</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="489"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Abstract::getOrderOf(Expr_info<sp/>expr)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="494"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>expr);</highlight></codeline>
<codeline lineno="496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Abstract::isArbitrary()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="499"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a216b7bd3930fbf047e5bf8f69e9b964c" kindref="member">Abstract::isIndexed</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="504"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Abstract::isReal()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="509"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Abstract::isPurelyImaginary()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="514"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="516"><highlight class="normal">}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Abstract::isComplexConjugate()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="519"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Abstract::isHermitianConjugate()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="524"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><ref refid="namespacecsl_1ac54d9e79dc6697a8eacc07c754b11c0e" kindref="member">csl::ComplexProperty</ref><sp/>Abstract::getComplexProperty()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="529"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecsl_1ac54d9e79dc6697a8eacc07c754b11c0ea7f80fcc452c2f1ed2bb51b39d0864df1" kindref="member">csl::ComplexProperty::Real</ref>;</highlight></codeline>
<codeline lineno="533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Abstract::setComplexProperty(<ref refid="namespacecsl_1ac54d9e79dc6697a8eacc07c754b11c0e" kindref="member">csl::ComplexProperty</ref>)</highlight></codeline>
<codeline lineno="536"><highlight class="normal">{</highlight></codeline>
<codeline lineno="537"><highlight class="normal">}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Abstract::setConjugated(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="540"><highlight class="normal">{</highlight></codeline>
<codeline lineno="541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a9a014bfd266b5f8471f23580e271979b" kindref="member">Abstract::isInteger</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="544"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="546"><highlight class="normal">}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a78f98ba06476e464e3fd2fce0d1f8243" kindref="member">Abstract::getValue</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="549"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nanl(</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Abstract::getDeltaPlus()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="556"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Abstract::getDeltaMinus()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="561"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal">Expr<sp/><ref refid="classcsl_1_1Abstract_1aad25c117c8dfc4d9718ba41e8d3f33a6" kindref="member">Abstract::getNumericalFactor</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="566"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CSL_1;</highlight></codeline>
<codeline lineno="568"><highlight class="normal">}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a204dbd37b63432cb08932b995f49d3f4" kindref="member">Abstract::getNFactor</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="571"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="573"><highlight class="normal">}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal">csl::vector_expr<sp/><ref refid="classcsl_1_1Abstract_1ac34c9c6f05e692faeed2f030514787ad" kindref="member">Abstract::getFactors</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="576"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>csl::vector_expr(0);</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal">std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Abstract_1a1d36e7a5acc50766d5cd3f6d59df978d" kindref="member">Abstract::getTerm</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="581"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nullopt;</highlight></codeline>
<codeline lineno="583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1ac513c930caa9939c2b9557f36a34ee69" kindref="member">Abstract::getExponents</ref>(std::vector&lt;Expr&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;factors,</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Expr&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;exponents)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="587"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>factors.size();<sp/>++i)</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>factors[i].get())<sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exponents[i]<sp/>=<sp/>CSL_1;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a9500a21d75d03c695ec0c76493600b38" kindref="member">Abstract::getOrder</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="596"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="600"><highlight class="normal">}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1aa83df1d9dc202457113e5b38bd694fae" kindref="member">Abstract::getSign</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="603"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="607"><highlight class="normal">}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a9347e75b0cd0b75e0f0a38db93b29d83" kindref="member">Abstract::isAnOperator</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="610"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="612"><highlight class="normal">}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a464f4f0613db9b4b0a4efe26a3a03d60" kindref="member">Abstract::isEmpty</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="615"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="619"><highlight class="normal">}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Abstract::operatorAppliesOn(Expr_info)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="622"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="626"><highlight class="normal">}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal">Expr<sp/><ref refid="classcsl_1_1Abstract_1a9c3ec3dfe1fbd8ead5c8d9aca421a863" kindref="member">Abstract::getOperand</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="629"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Type<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classcsl_1_1Abstract_1aa781456c3f801b37ce169c83514c51c1" kindref="member">getType</ref>()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="literal_8h_1a65960e7645699e5eeed663bab0d2309b" kindref="member">CSL_UNDEF</ref>;</highlight></codeline>
<codeline lineno="634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal">optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Abstract_1a415f64fdddaae445014d5e052956f889" kindref="member">Abstract::getRealPart</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="637"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nullopt;</highlight></codeline>
<codeline lineno="639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal">Expr<sp/><ref refid="classcsl_1_1Abstract_1a43f44bbb3685fc9f4a0402223b2e1004" kindref="member">Abstract::getImaginaryPart</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="642"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CSL_0;</highlight></codeline>
<codeline lineno="644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal">optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Abstract_1a859f792aec52ba1fe1181f81d1cc3451" kindref="member">Abstract::getComplexModulus</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="647"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nullopt;</highlight></codeline>
<codeline lineno="649"><highlight class="normal">}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal">optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Abstract_1a9cc64c66894acafc1f069dc40072084b" kindref="member">Abstract::getComplexArgument</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="652"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CSL_0;</highlight></codeline>
<codeline lineno="654"><highlight class="normal">}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal">optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Abstract_1a03e8bdba20c6192a948892f212f09dbe" kindref="member">Abstract::getComplexConjugate</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="657"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nullopt;</highlight></codeline>
<codeline lineno="659"><highlight class="normal">}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal">Expr<sp/>&amp;Abstract::applySelfStructureOn(Expr<sp/>&amp;)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="662"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>undef;</highlight></codeline>
<codeline lineno="666"><highlight class="normal">}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal">optional&lt;Expr&gt;<sp/>Abstract::getTransposed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Space<sp/>*,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="669"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nullopt;</highlight></codeline>
<codeline lineno="671"><highlight class="normal">}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal">optional&lt;Expr&gt;<sp/>Abstract::getTransposed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;const<sp/>Space<sp/>*&gt;<sp/>&amp;,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="675"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nullopt;</highlight></codeline>
<codeline lineno="677"><highlight class="normal">}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal">optional&lt;Expr&gt;<sp/>Abstract::getHermitianConjugate(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Space<sp/>*)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="680"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a03e8bdba20c6192a948892f212f09dbe" kindref="member">getComplexConjugate</ref>();</highlight></codeline>
<codeline lineno="682"><highlight class="normal">}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal">optional&lt;Expr&gt;</highlight></codeline>
<codeline lineno="685"><highlight class="normal">Abstract::getHermitianConjugate(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;const<sp/>Space<sp/>*&gt;<sp/>&amp;)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="686"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a03e8bdba20c6192a948892f212f09dbe" kindref="member">getComplexConjugate</ref>();</highlight></codeline>
<codeline lineno="688"><highlight class="normal">}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal">Expr<sp/>Abstract::deepCopy()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="691"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>copy();</highlight></codeline>
<codeline lineno="693"><highlight class="normal">}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal">Expr<sp/>Abstract::refresh()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="696"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>copy();</highlight></codeline>
<codeline lineno="698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal">Expr<sp/>Abstract::deepRefresh()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="701"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>refresh();</highlight></codeline>
<codeline lineno="703"><highlight class="normal">}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a5437e7f685edf8549e6d3b34572343f8" kindref="member">Abstract::insert</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="706"><highlight class="normal">{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a27ad666bf7d533607da9675b0c645ee9" kindref="member">Abstract::askTerm</ref>(Expr_info<sp/>expr,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="712"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classcsl_1_1Abstract_1a8334e14cd5789168b037d3888ed60edd" kindref="member">operator==</ref>(expr);</highlight></codeline>
<codeline lineno="714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal">optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Abstract_1a3a87ab082152fea4fc2444659028b840" kindref="member">Abstract::expand</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="717"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nullopt;</highlight></codeline>
<codeline lineno="719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="720"><highlight class="normal">optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Abstract_1aeb48aaaa856582b6359037fe94d2419b" kindref="member">Abstract::expand_if</ref>(std::function&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">(Expr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;,</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="723"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nullopt;</highlight></codeline>
<codeline lineno="725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="726"><highlight class="normal">optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Abstract_1a0bc0de9c4ce5f77fc716af0f502d13d3" kindref="member">Abstract::factor</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="727"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nullopt;</highlight></codeline>
<codeline lineno="729"><highlight class="normal">}</highlight></codeline>
<codeline lineno="730"><highlight class="normal">optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Abstract_1a0bc0de9c4ce5f77fc716af0f502d13d3" kindref="member">Abstract::factor</ref>(Expr_info,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="731"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nullopt;</highlight></codeline>
<codeline lineno="733"><highlight class="normal">}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal">optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Abstract_1ab3746f1d3667846824ea51b8a2e00d31" kindref="member">Abstract::collect</ref>(std::vector&lt;Expr&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="736"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nullopt;</highlight></codeline>
<codeline lineno="738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal">optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Abstract_1aecab8c872023a2d0771e7e4f83bb05f8" kindref="member">Abstract::derive</ref>(Expr_info)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="741"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CSL_0;</highlight></codeline>
<codeline lineno="743"><highlight class="normal">}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal">Expr<sp/><ref refid="classcsl_1_1Abstract_1a43520e1d6d5fdad9b50f77c6e027f928" kindref="member">Abstract::suppressTerm</ref>(Expr_info)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="746"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>float_s(1);</highlight></codeline>
<codeline lineno="748"><highlight class="normal">}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal">std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Abstract_1a4eeedaeaa39e75facf1060dce7c57a8f" kindref="member">Abstract::suppressExponent</ref>(Expr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;factor,</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Expr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;exponent)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="752"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classcsl_1_1Abstract_1a0bc0de9c4ce5f77fc716af0f502d13d3" kindref="member">factor</ref>.get()<sp/>and<sp/>exponent<sp/>==<sp/>CSL_1)</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CSL_1;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="756"><highlight class="normal">}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1aaf7f0692cb84ca861a5b3b641bea518b" kindref="member">Abstract::setValue</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="759"><highlight class="normal">{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="762"><highlight class="normal">}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1aaf7f0692cb84ca861a5b3b641bea518b" kindref="member">Abstract::setValue</ref>(Expr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)</highlight></codeline>
<codeline lineno="765"><highlight class="normal">{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="768"><highlight class="normal">}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Abstract::setElementary(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="771"><highlight class="normal">{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="774"><highlight class="normal">}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Abstract::setAllDependencies(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="777"><highlight class="normal">{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="780"><highlight class="normal">}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Abstract::addDependency(Expr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)</highlight></codeline>
<codeline lineno="783"><highlight class="normal">{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="786"><highlight class="normal">}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Abstract::removeDependency(Expr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)</highlight></codeline>
<codeline lineno="789"><highlight class="normal">{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="792"><highlight class="normal">}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1aab2d2ac186b56d17d2cc0a105e145b11" kindref="member">Abstract::setArgument</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="795"><highlight class="normal">{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1aab2d2ac186b56d17d2cc0a105e145b11" kindref="member">Abstract::setArgument</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;<sp/>&amp;)</highlight></codeline>
<codeline lineno="801"><highlight class="normal">{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="804"><highlight class="normal">}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Abstract::setEmpty(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="807"><highlight class="normal">{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="810"><highlight class="normal">}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1ae7b8a14fc746ed72e4d5abd63373c5ba" kindref="member">Abstract::setOperandPrivate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="813"><highlight class="normal">{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="816"><highlight class="normal">}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a70df7be4486affa8dc891e3f25bf499f" kindref="member">Abstract::setOperand</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;)</highlight></codeline>
<codeline lineno="819"><highlight class="normal">{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="822"><highlight class="normal">}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a83fee8ed28079bcac107455d58be9d5d" kindref="member">Abstract::setVectorArgument</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>csl::vector_expr<sp/>&amp;)</highlight></codeline>
<codeline lineno="824"><highlight class="normal">{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="827"><highlight class="normal">}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Abstract::setVariable(Expr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)</highlight></codeline>
<codeline lineno="830"><highlight class="normal">{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="833"><highlight class="normal">}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a543d5a4f0432e166b492ad28a860a65f" kindref="member">Abstract::evaluateScalar</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="836"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nanl(</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="840"><highlight class="normal">}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal">Expr<sp/><ref refid="classcsl_1_1Abstract_1a101219973341a39cf15f07e5e1aa388f" kindref="member">Abstract::addition_own</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="843"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CSL_0;</highlight></codeline>
<codeline lineno="847"><highlight class="normal">}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal">Expr<sp/><ref refid="classcsl_1_1Abstract_1a4f5ed458ba62f5b4cf61a9e1f8568af1" kindref="member">Abstract::multiplication_own</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="850"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CSL_0;</highlight></codeline>
<codeline lineno="854"><highlight class="normal">}</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal">Expr<sp/><ref refid="classcsl_1_1Abstract_1a1578c74aee1050b806a67e7a81a67f5c" kindref="member">Abstract::division_own</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="857"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CSL_0;</highlight></codeline>
<codeline lineno="861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal">Expr<sp/><ref refid="classcsl_1_1Abstract_1aa2696a0feb43766ef54e1e3dd3d6d134" kindref="member">Abstract::exponentiation_own</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="864"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CSL_0;</highlight></codeline>
<codeline lineno="868"><highlight class="normal">}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a40fe2ccf376dadd21b2d7a0f134d86c6" kindref="member">Abstract::dependsOn</ref>(Expr_info<sp/>expr)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="871"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1ac3c9887977249e4d71ea36c6377b3581" kindref="member">dependsExplicitlyOn</ref>(expr);</highlight></codeline>
<codeline lineno="873"><highlight class="normal">}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a40fe2ccf376dadd21b2d7a0f134d86c6" kindref="member">Abstract::dependsOn</ref>(Parent_info<sp/>parent)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="876"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parent-&gt;dependsOn(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="878"><highlight class="normal">}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1ac3c9887977249e4d71ea36c6377b3581" kindref="member">Abstract::dependsExplicitlyOn</ref>(Expr_info<sp/>expr)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="881"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>expr;</highlight></codeline>
<codeline lineno="883"><highlight class="normal">}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1ac3c9887977249e4d71ea36c6377b3581" kindref="member">Abstract::dependsExplicitlyOn</ref>(Parent_info<sp/>parent)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="886"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parent-&gt;dependsExplicitlyOn(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="888"><highlight class="normal">}</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a3f68d0cd93dfe2ac02d6d4afc80fb41a" kindref="member">Abstract::commutesWith</ref>(Expr_info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sign)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="891"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sign<sp/>==<sp/>-1;</highlight></codeline>
<codeline lineno="893"><highlight class="normal">}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal">optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Abstract_1a299b1fd6c2b9d80ad90a08c7acef28d2" kindref="member">Abstract::findSubExpression</ref>(Expr_info<sp/><sp/><sp/>subExpression,</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;newExpression)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="897"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">operator</highlight><highlight class="normal">==(subExpression))</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newExpression;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nullopt;</highlight></codeline>
<codeline lineno="901"><highlight class="normal">}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1acae10d5685ccec295fbd9be7996073cb" kindref="member">Abstract::isPolynomial</ref>(Expr_info<sp/>expr)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="904"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1ac3c9887977249e4d71ea36c6377b3581" kindref="member">dependsExplicitlyOn</ref>(expr);</highlight></codeline>
<codeline lineno="906"><highlight class="normal">}</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal">Expr<sp/><ref refid="classcsl_1_1Abstract_1ae85f810bbadbc792210c958e8f1b2ffb" kindref="member">Abstract::getVariable</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="909"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CSL_0;</highlight></codeline>
<codeline lineno="911"><highlight class="normal">}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal">optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Abstract_1ade540a127da7304f2b7282f4dcaffc7f" kindref="member">Abstract::getPolynomialTerm</ref>(Expr_info<sp/>t_variable,</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>order)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="915"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(order<sp/>==<sp/>1<sp/>and<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>t_variable)</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CSL_1;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(order<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nullopt;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CSL_0;</highlight></codeline>
<codeline lineno="921"><highlight class="normal">}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1aea8459b3206eb3a2297eeea7688e9520" kindref="member">Abstract::getParity</ref>(Expr_info)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="924"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="926"><highlight class="normal">}</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal">Expr<sp/><ref refid="classcsl_1_1Abstract_1a5b77f008f4b95030641224877004f06c" kindref="member">Abstract::getRegularExpression</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="929"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="literal_8h_1a65960e7645699e5eeed663bab0d2309b" kindref="member">CSL_UNDEF</ref>;</highlight></codeline>
<codeline lineno="933"><highlight class="normal">}</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a59ff2950fc8ca319f87a730450f14545" kindref="member">Abstract::operator=</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="936"><highlight class="normal">{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="939"><highlight class="normal">}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1af5b62a6308638064c42da80e9cc2cb7e" kindref="member">Abstract::operator!=</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t_value)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="942"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(this-&gt;<ref refid="classcsl_1_1Abstract_1a8334e14cd5789168b037d3888ed60edd" kindref="member">operator==</ref>(t_value));</highlight></codeline>
<codeline lineno="944"><highlight class="normal">}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1af5b62a6308638064c42da80e9cc2cb7e" kindref="member">Abstract::operator!=</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t_value)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="947"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(this-&gt;<ref refid="classcsl_1_1Abstract_1a8334e14cd5789168b037d3888ed60edd" kindref="member">operator==</ref>(t_value));</highlight></codeline>
<codeline lineno="949"><highlight class="normal">}</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a8334e14cd5789168b037d3888ed60edd" kindref="member">Abstract::operator==</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t_value)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="952"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a8334e14cd5789168b037d3888ed60edd" kindref="member">Abstract::operator==</ref>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>t_value);</highlight></codeline>
<codeline lineno="954"><highlight class="normal">}</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a8334e14cd5789168b037d3888ed60edd" kindref="member">Abstract::operator==</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t_value)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="957"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcsl_1_1Abstract_1a8ab79682cdff4c7d7b52c2e70ac23d85" kindref="member">getPrimaryType</ref>()<sp/>==<sp/><ref refid="namespacecsl_1a70046459ec0082db8cb97005c13c9a54a5225763efc97aebd39e5a303fceb57ac" kindref="member">csl::PrimaryType::Numerical</ref>)</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a543d5a4f0432e166b492ad28a860a65f" kindref="member">evaluateScalar</ref>()<sp/>==<sp/>t_value;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcsl_1_1Abstract_1a8ab79682cdff4c7d7b52c2e70ac23d85" kindref="member">getPrimaryType</ref>()<sp/>==<sp/><ref refid="namespacecsl_1a70046459ec0082db8cb97005c13c9a54ad7da1b76e5799f53a399b7a96ba67437" kindref="member">csl::PrimaryType::Literal</ref></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>(<ref refid="classcsl_1_1Abstract_1aa781456c3f801b37ce169c83514c51c1" kindref="member">getType</ref>()<sp/>==<sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312a47c14840d8e15331fa420b9b2f757cd9" kindref="member">csl::Type::Variable</ref></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/><ref refid="classcsl_1_1Abstract_1aa781456c3f801b37ce169c83514c51c1" kindref="member">getType</ref>()<sp/>==<sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312acb17869fe51048b5a5c4c6106551a255" kindref="member">csl::Type::Constant</ref>))</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1a543d5a4f0432e166b492ad28a860a65f" kindref="member">evaluateScalar</ref>()<sp/>==<sp/>t_value;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="965"><highlight class="normal">}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal">Expr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<ref refid="classcsl_1_1Abstract_1aa8331053065d1be2da89e70c45d24863" kindref="member">Abstract::operator[]</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="968"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="literal_8h_1a65960e7645699e5eeed663bab0d2309b" kindref="member">CSL_UNDEF</ref>;</highlight></codeline>
<codeline lineno="972"><highlight class="normal">}</highlight></codeline>
<codeline lineno="973"><highlight class="normal">Expr<sp/>&amp;<ref refid="classcsl_1_1Abstract_1aa8331053065d1be2da89e70c45d24863" kindref="member">Abstract::operator[]</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="974"><highlight class="normal">{</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>undef;</highlight></codeline>
<codeline lineno="978"><highlight class="normal">}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal">Expr<sp/><ref refid="classcsl_1_1Abstract_1a316956fea77627a716500a2bbfc1f3b7" kindref="member">Abstract::applyOperator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="981"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="literal_8h_1a65960e7645699e5eeed663bab0d2309b" kindref="member">CSL_UNDEF</ref>;</highlight></codeline>
<codeline lineno="985"><highlight class="normal">}</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1ab79c1d8df9e6b1a3eca66958f7dc489d" kindref="member">Abstract::matchShape</ref>(Expr_info<sp/>expr,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>exact)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="988"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>true<sp/>if<sp/>we<sp/>compare<sp/>to<sp/>another<sp/>scalar<sp/>or<sp/>if<sp/>it<sp/>is<sp/>not<sp/>exact</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>assumes<sp/>that<sp/>the<sp/>Object<sp/>called<sp/>has<sp/>dimension<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(not<sp/>exact<sp/>or<sp/>expr-&gt;getDim()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="992"><highlight class="normal">}</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract_1aa31e08c251d96b8ea8ec8d385895c1ff" kindref="member">Abstract::hasContractionProperty</ref>(Expr_info)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="995"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="997"><highlight class="normal">}</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Abstract::hasChainContractionProperty()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1000"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal">vector&lt;ContractionChain&gt;<sp/>Abstract::getContractionProperties()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1005"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="1009"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal">Expr<sp/><ref refid="classcsl_1_1Abstract_1ad874fc858295a737e6ce884530f1109b" kindref="member">Abstract::contraction</ref>(Expr_info)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1012"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="literal_8h_1a65960e7645699e5eeed663bab0d2309b" kindref="member">CSL_UNDEF</ref>;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal">Expr<sp/><ref refid="classcsl_1_1Abstract_1ad874fc858295a737e6ce884530f1109b" kindref="member">Abstract::contraction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>csl::vector_expr<sp/>&amp;)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1019"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="literal_8h_1a65960e7645699e5eeed663bab0d2309b" kindref="member">CSL_UNDEF</ref>;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal">Expr<sp/><ref refid="classcsl_1_1Abstract_1a7b83c6a13716688f45b02e6291d39aba" kindref="member">Abstract::tensordot</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1026"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal">Expr<sp/><ref refid="classcsl_1_1Abstract_1a4cc7a46deaa3eaa7593909d74e76d4af" kindref="member">Abstract::dot</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1033"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal">Expr<sp/><ref refid="classcsl_1_1Abstract_1aeaf8154e39ff211b12e6382e675ccaad" kindref="member">Abstract::getSum</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1040"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="literal_8h_1a65960e7645699e5eeed663bab0d2309b" kindref="member">CSL_UNDEF</ref>;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal">Expr<sp/><ref refid="classcsl_1_1Abstract_1a07489d0569bc983718796d21c73f34b3" kindref="member">Abstract::getProduct</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1047"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="literal_8h_1a65960e7645699e5eeed663bab0d2309b" kindref="member">CSL_UNDEF</ref>;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal">Expr<sp/><ref refid="classcsl_1_1Abstract_1a0188b049736016c970a2513ed9f6931f" kindref="member">Abstract::getVectorialModulus</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1054"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal">Expr<sp/><ref refid="classcsl_1_1Abstract_1a7dcdc11b64c8c515933882168d0792ef" kindref="member">Abstract::getSubVectorial</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1061"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal">Expr<sp/><ref refid="classcsl_1_1Abstract_1a7dcdc11b64c8c515933882168d0792ef" kindref="member">Abstract::getSubVectorial</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1068"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal">Expr<sp/><ref refid="classcsl_1_1Abstract_1a7dcdc11b64c8c515933882168d0792ef" kindref="member">Abstract::getSubVectorial</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;<sp/>&amp;)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1075"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal">Expr<sp/><ref refid="classcsl_1_1Abstract_1a7dcdc11b64c8c515933882168d0792ef" kindref="member">Abstract::getSubVectorial</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;vector&lt;int&gt;&gt;<sp/>&amp;keepIndices)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1082"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keepIndices.empty())</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>copy();</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="literal_8h_1a65960e7645699e5eeed663bab0d2309b" kindref="member">CSL_UNDEF</ref>;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal">Expr<sp/><ref refid="classcsl_1_1Abstract_1a7dcdc11b64c8c515933882168d0792ef" kindref="member">Abstract::getSubVectorial</ref>(</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;int&gt;&gt;::const_iterator<sp/>begin,</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;int&gt;&gt;::const_iterator<sp/>end)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1093"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcsl_1_1Abstract_1aad54ed41b2ce9bad3364fe30ad1a0d71" kindref="member">begin</ref><sp/>==<sp/><ref refid="classcsl_1_1Abstract_1a61e4e80d998a888a1a74d9ea3e10c0f1" kindref="member">end</ref>)</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>copy();</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="literal_8h_1a65960e7645699e5eeed663bab0d2309b" kindref="member">CSL_UNDEF</ref>;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal">Expr<sp/><ref refid="classcsl_1_1Abstract_1aeb08811cf370616477a92075e4a218ee" kindref="member">Abstract::determinant</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1102"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="literal_8h_1a65960e7645699e5eeed663bab0d2309b" kindref="member">CSL_UNDEF</ref>;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal">Expr<sp/><ref refid="classcsl_1_1Abstract_1a9a86d21f5c5f65eb7e524a8f8002c0e7" kindref="member">Abstract::trace</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1109"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="literal_8h_1a65960e7645699e5eeed663bab0d2309b" kindref="member">CSL_UNDEF</ref>;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal">Expr<sp/><ref refid="classcsl_1_1Abstract_1a9a86d21f5c5f65eb7e524a8f8002c0e7" kindref="member">Abstract::trace</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1116"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal">Expr<sp/><ref refid="classcsl_1_1Abstract_1a1e97712696e5c40b28bc1e35987fea94" kindref="member">Abstract::transpose</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1123"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="literal_8h_1a65960e7645699e5eeed663bab0d2309b" kindref="member">CSL_UNDEF</ref>;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal">Expr<sp/>Abstract::hermitian()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1130"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="literal_8h_1a65960e7645699e5eeed663bab0d2309b" kindref="member">CSL_UNDEF</ref>;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal">Expr<sp/><ref refid="classcsl_1_1Abstract_1a4faf1ffd8cb3b6c721e128980c0303d8" kindref="member">Abstract::symmetrise</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1137"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="literal_8h_1a65960e7645699e5eeed663bab0d2309b" kindref="member">CSL_UNDEF</ref>;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal">Expr<sp/><ref refid="classcsl_1_1Abstract_1acd972aed8326d4c13534594e061ee6da" kindref="member">Abstract::antisymmetrise</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1144"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="literal_8h_1a65960e7645699e5eeed663bab0d2309b" kindref="member">CSL_UNDEF</ref>;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal">Expr<sp/><ref refid="classcsl_1_1Abstract_1a1b68943aa7ecf60a63af0f2f368eef8f" kindref="member">Abstract::inverseMatrix</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1151"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="literal_8h_1a65960e7645699e5eeed663bab0d2309b" kindref="member">CSL_UNDEF</ref>;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal">Expr<sp/>Abstract::getCanonicalPermutation()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1158"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="literal_8h_1a65960e7645699e5eeed663bab0d2309b" kindref="member">CSL_UNDEF</ref>;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal">Expr<sp/>Abstract::getInfBoundary()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1165"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="literal_8h_1a65960e7645699e5eeed663bab0d2309b" kindref="member">CSL_UNDEF</ref>;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Abstract::setSupBoundary(Expr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)</highlight></codeline>
<codeline lineno="1172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Abstract::setInfBoundary(Expr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)</highlight></codeline>
<codeline lineno="1178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="1181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal">Expr<sp/>Abstract::getSupBoundary()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1184"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="literal_8h_1a65960e7645699e5eeed663bab0d2309b" kindref="member">CSL_UNDEF</ref>;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal">Expr<sp/>Abstract::applyDiracDelta(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1191"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abstract_1aed56cb85894209a9bbc9b8bdada5e6ab" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/>CALL_SMERROR(CSLError::AbstractCallError);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CSL_0;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Abstract::testDummy(Expr_info<sp/>expr)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1198"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcsl_1_1Comparator_1a735dcce08cfddb3c3a165457febd5b2f" kindref="member">Comparator::getDummyComparisonActive</ref>()<sp/>and<sp/>expr-&gt;isArbitrary())</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*expr<sp/>==<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal">Expr::Expr(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)<sp/>:<sp/>Expr(<ref refid="namespacecsl" kindref="compound">csl</ref>::int_s(value))</highlight></codeline>
<codeline lineno="1206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1208"><highlight class="normal">Expr::Expr(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)<sp/>:<sp/>Expr(<ref refid="namespacecsl" kindref="compound">csl</ref>::int_s(value))</highlight></codeline>
<codeline lineno="1209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1211"><highlight class="normal">Expr::Expr(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)<sp/>:<sp/>Expr(<ref refid="namespacecsl" kindref="compound">csl</ref>::int_s(value))</highlight></codeline>
<codeline lineno="1212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1214"><highlight class="normal">Expr::Expr(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)<sp/>:<sp/>Expr(<ref refid="namespacecsl" kindref="compound">csl</ref>::int_s(value))</highlight></codeline>
<codeline lineno="1215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1217"><highlight class="normal">Expr::Expr(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)<sp/>:<sp/>Expr(<ref refid="namespacecsl" kindref="compound">csl</ref>::int_s(value))</highlight></codeline>
<codeline lineno="1218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1220"><highlight class="normal">Expr::Expr(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)<sp/>:<sp/>Expr(<ref refid="namespacecsl" kindref="compound">csl</ref>::int_s(value))</highlight></codeline>
<codeline lineno="1221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal">Expr::Expr(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value)<sp/>:<sp/>Expr(<ref refid="namespacecsl" kindref="compound">csl</ref>::autonumber_s(value))</highlight></codeline>
<codeline lineno="1225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1227"><highlight class="normal">Expr::Expr(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)<sp/>:<sp/>Expr(<ref refid="namespacecsl" kindref="compound">csl</ref>::autonumber_s(value))</highlight></codeline>
<codeline lineno="1228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1230"><highlight class="normal">Expr::Expr(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)<sp/>:<sp/>Expr(<ref refid="namespacecsl" kindref="compound">csl</ref>::autonumber_s(value))</highlight></codeline>
<codeline lineno="1231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal">std::ostream<sp/>&amp;operator&lt;&lt;(std::ostream<sp/>&amp;fout,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;obj)</highlight></codeline>
<codeline lineno="1235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/>obj-&gt;print(1,<sp/>fout);</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fout;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="comment">/*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Arithmetic<sp/>operators<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight><highlight class="comment">/*************************************************/</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Expr<sp/>operator+(double<sp/>a,<sp/>const<sp/>Expr&amp;<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>csl::sum_s(csl::autonumber_s(a),<sp/>b);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Expr<sp/>operator+(const<sp/>Expr&amp;<sp/>a,<sp/>double<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>csl::sum_s(a,<sp/>csl::autonumber_s(b));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Expr<sp/>operator+(int<sp/>a,<sp/>const<sp/>Expr&amp;<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>csl::sum_s(csl::autonumber_s(a),<sp/>b);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Expr<sp/>operator+(const<sp/>Expr&amp;<sp/>a,<sp/>int<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>csl::sum_s(a,<sp/>csl::autonumber_s(b));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal">Expr<sp/><ref refid="namespacecsl_1a4214d96bf84e933c268cf30c85ef5065" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;b)</highlight></codeline>
<codeline lineno="1263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>csl::sum_s(a,<sp/>b);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal">Expr<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;a)</highlight></codeline>
<codeline lineno="1268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>==<sp/>CSL_1)</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CSL_M_1;</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>==<sp/>CSL_M_1)</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CSL_1;</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a-&gt;getType()<sp/>==<sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312aa0ec87054b5e5b7847d0d8780a01a3d5" kindref="member">csl::Type::Sum</ref>)</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>csl::Expanded(<ref refid="namespacecsl_1ae8a7809aa1495de26d449b25c5676215" kindref="member">csl::prod_s</ref>(CSL_M_1,<sp/>a));</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecsl_1ae8a7809aa1495de26d449b25c5676215" kindref="member">csl::prod_s</ref>(CSL_M_1,<sp/>a);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Expr<sp/>operator-(double<sp/>a,<sp/>const<sp/>Expr&amp;<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>csl::minus_(csl::autonumber_s(a),<sp/>b);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Expr<sp/>operator-(const<sp/>Expr&amp;<sp/>a,<sp/>double<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>csl::minus_(a,<sp/>csl::autonumber_s(b));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Expr<sp/>operator-(int<sp/>a,<sp/>const<sp/>Expr&amp;<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>csl::minus_(csl::autonumber_s(a),<sp/>b);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Expr<sp/>operator-(const<sp/>Expr&amp;<sp/>a,<sp/>int<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>csl::minus_(a,<sp/>csl::autonumber_s(b));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal">Expr<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;b)</highlight></codeline>
<codeline lineno="1295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecsl_1aa1186b8efe45b2ea34ffcf8e0de69238" kindref="member">csl::minus_</ref>(a,<sp/>b);</highlight></codeline>
<codeline lineno="1297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Expr<sp/>operator*(double<sp/>a,<sp/>const<sp/>Expr&amp;<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>csl::prod_s(csl::autonumber_s(a),<sp/>b);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Expr<sp/>operator*(const<sp/>Expr&amp;<sp/>a,<sp/>double<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>csl::prod_s(a,<sp/>csl::autonumber_s(b));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Expr<sp/>operator*(int<sp/>a,<sp/>const<sp/>Expr&amp;<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>csl::prod_s(csl::autonumber_s(a),<sp/>b);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Expr<sp/>operator*(const<sp/>Expr&amp;<sp/>a,<sp/>int<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>csl::prod_s(a,<sp/>csl::autonumber_s(b));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal">Expr<sp/><ref refid="namespacecsl_1a51da3cbce74c766bb1aff63488113698" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;b)</highlight></codeline>
<codeline lineno="1316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecsl_1ae8a7809aa1495de26d449b25c5676215" kindref="member">csl::prod_s</ref>(a,<sp/>b);</highlight></codeline>
<codeline lineno="1318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Expr<sp/>operator/(double<sp/>a,<sp/>const<sp/>Expr&amp;<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>csl::fraction_s(csl::autonumber_s(a),<sp/>b);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Expr<sp/>operator/(const<sp/>Expr&amp;<sp/>a,<sp/>double<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>csl::fraction_s(a,<sp/>csl::autonumber_s(b));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Expr<sp/>operator/(int<sp/>a,<sp/>const<sp/>Expr&amp;<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>csl::fraction_s(csl::autonumber_s(a),<sp/>b);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Expr<sp/>operator/(const<sp/>Expr&amp;<sp/>a,<sp/>int<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>csl::fraction_s(a,<sp/>csl::autonumber_s(b));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal">Expr<sp/><ref refid="namespacecsl_1a75e84d94b9caf4662aa30a5c6aa36a63" kindref="member">operator/</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;b)</highlight></codeline>
<codeline lineno="1337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecsl_1adb8fb620d09d80258c0c3d0c2a72340a" kindref="member">csl::fraction_s</ref>(a,<sp/>b);</highlight></codeline>
<codeline lineno="1339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacecsl_1ac52343b89158d08dc27aa4851ba1662c" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;b)</highlight></codeline>
<codeline lineno="1342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a.get()<sp/>==<sp/>b.get())<sp/>or<sp/>(*a<sp/>==<sp/>b);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacecsl_1ac52343b89158d08dc27aa4851ba1662c" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="1346"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*a<sp/>==<sp/>b);</highlight></codeline>
<codeline lineno="1348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacecsl_1a73fc26b671ec2e0fa84ba12983ed9866" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;b)</highlight></codeline>
<codeline lineno="1350"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*a<sp/>!=<sp/>b);</highlight></codeline>
<codeline lineno="1352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacecsl_1a73fc26b671ec2e0fa84ba12983ed9866" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="1354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*a<sp/>!=<sp/>b);</highlight></codeline>
<codeline lineno="1356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacecsl_1a73fc26b671ec2e0fa84ba12983ed9866" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="1358"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*a<sp/>!=<sp/>b);</highlight></codeline>
<codeline lineno="1360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacecsl_1a64388fa8d8a566d1b1b565f888acfaa5" kindref="member">operator&gt;=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;b)</highlight></codeline>
<codeline lineno="1362"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>not(a<sp/>&lt;<sp/>b);</highlight></codeline>
<codeline lineno="1364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacecsl_1a612503ed45700a00e76eccfd796bfec1" kindref="member">operator&lt;=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;b)</highlight></codeline>
<codeline lineno="1366"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>not(a<sp/>&gt;<sp/>b);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacecsl_1abdcf5895808d59f7113b9c9dc28133ca" kindref="member">operator&gt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;b)</highlight></codeline>
<codeline lineno="1370"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(b<sp/>&lt;<sp/>a);</highlight></codeline>
<codeline lineno="1372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacecsl_1a6dbe8e8ea5d3a9880c2d95741728f8d1" kindref="member">operator&lt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;b)</highlight></codeline>
<codeline lineno="1375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>csl::option::fullComparison)<sp/>{</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>typeA<sp/>=<sp/>a-&gt;getType();</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>typeB<sp/>=<sp/>b-&gt;getType();</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(typeA<sp/>==<sp/>typeB)</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*a<sp/>&lt;<sp/>b.get();</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>typeA<sp/>&lt;<sp/>typeB;</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*a<sp/>&lt;<sp/>b.get();</highlight></codeline>
<codeline lineno="1385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>of<sp/>namespace<sp/>csl</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/csl/abstract.cpp"/>
  </compounddef>
</doxygen>
