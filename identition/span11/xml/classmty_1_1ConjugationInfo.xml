<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classmty_1_1ConjugationInfo" kind="class" language="C++" prot="public">
    <compoundname>mty::ConjugationInfo</compoundname>
    <includes refid="fermionFlow_8h" local="no">fermionFlow.h</includes>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="classmty_1_1ConjugationInfo_1a11e916af5b158c47d2dc1aef41d25ef1" prot="public" static="no" strong="no">
        <type></type>
        <name>Type</name>
        <qualifiedname>mty::ConjugationInfo::Type</qualifiedname>
        <enumvalue id="classmty_1_1ConjugationInfo_1a11e916af5b158c47d2dc1aef41d25ef1a5a45cc1e0191447b3f27bbe2fa787058" prot="public">
          <name>Undefined</name>
          <briefdescription>
<para>Undefined <ref refid="classmty_1_1ConjugationInfo" kindref="compound">ConjugationInfo</ref>. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmty_1_1ConjugationInfo_1a11e916af5b158c47d2dc1aef41d25ef1a4b9266dfbcc4e1bd0e91041a80ff9839" prot="public">
          <name>External</name>
          <briefdescription>
<para>Conjugation of an external leg. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmty_1_1ConjugationInfo_1a11e916af5b158c47d2dc1aef41d25ef1a225af8d5031f1ab4782e8e2c54eb5842" prot="public">
          <name>Internal</name>
          <briefdescription>
<para>Conjugation of a part of a gamma-matrices chain. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Type of <ref refid="classmty_1_1ConjugationInfo" kindref="compound">ConjugationInfo</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/fermionFlow.h" line="46" column="5" bodyfile="src/marty/core/fermionFlow.h" bodystart="46" bodyend="62"/>
      </memberdef>
      <memberdef kind="typedef" id="classmty_1_1ConjugationInfo_1a893504d132addaa8d00ceb1ad921aa74" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classmty_1_1QuantumField" kindref="compound">mty::QuantumField</ref> const * &gt;</type>
        <definition>using mty::ConjugationInfo::FieldList =  std::vector&lt;mty::QuantumField const *&gt;</definition>
        <argsstring></argsstring>
        <name>FieldList</name>
        <qualifiedname>mty::ConjugationInfo::FieldList</qualifiedname>
        <briefdescription>
<para>Quick definition of the data structure for a field list in this file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/fermionFlow.h" line="68" column="5" bodyfile="src/marty/core/fermionFlow.h" bodystart="68" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classmty_1_1ConjugationInfo_1a8f008edaeb7e12ad79ae99b77fa1f8df" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>size_t</type>
        <definition>size_t mty::ConjugationInfo::maxFermionLines</definition>
        <argsstring></argsstring>
        <name>maxFermionLines</name>
        <qualifiedname>mty::ConjugationInfo::maxFermionLines</qualifiedname>
        <initializer>= 3</initializer>
        <briefdescription>
<para>Maximum number of fermion lines in a diagram. </para>
        </briefdescription>
        <detaileddescription>
<para>This number is 3 because for now a diagram (that can be fully simplified in MARTY) cannot have 6 external legs (5 at most) and is at the 1-loop level. There can be two external fermionic lines, and one internal in the loop. If in the future MARTY is extended to more, this number may be incremented or left as it is, the consequence will only be an increase in execution time for the function followFermionLines (if not incremented). This number is the memory allocated the the return value. If there is more fermion lines, memory will have to be reallocated elsewhere with more space (implies deallocation, reallocation, copies etc). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/fermionFlow.h" line="84" column="29" bodyfile="src/marty/core/fermionFlow.h" bodystart="84" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classmty_1_1ConjugationInfo_1ab5e5b3398d6bc3a1b50303d73713560c" prot="protected" static="no" mutable="no">
        <type><ref refid="classmty_1_1ConjugationInfo_1a11e916af5b158c47d2dc1aef41d25ef1" kindref="member">Type</ref></type>
        <definition>Type mty::ConjugationInfo::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <qualifiedname>mty::ConjugationInfo::type</qualifiedname>
        <briefdescription>
<para>Type of <ref refid="classmty_1_1ConjugationInfo" kindref="compound">ConjugationInfo</ref>. Can be external (external leg) or internal (part of gamma-matrices chain). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/fermionFlow.h" line="309" column="10" bodyfile="src/marty/core/fermionFlow.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmty_1_1ConjugationInfo_1a5cfc97eec2a795f060e5e49f34856e6a" prot="protected" static="no" mutable="no">
        <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref></type>
        <definition>csl::Index mty::ConjugationInfo::A</definition>
        <argsstring></argsstring>
        <name>A</name>
        <qualifiedname>mty::ConjugationInfo::A</qualifiedname>
        <briefdescription>
<para>First (or only for External type) index of the chain. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/fermionFlow.h" line="314" column="16" bodyfile="src/marty/core/fermionFlow.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmty_1_1ConjugationInfo_1a54780335ae8c0ea70fe15ab161d7fc78" prot="protected" static="no" mutable="no">
        <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref></type>
        <definition>csl::Index mty::ConjugationInfo::B</definition>
        <argsstring></argsstring>
        <name>B</name>
        <qualifiedname>mty::ConjugationInfo::B</qualifiedname>
        <briefdescription>
<para>Second index of the chain, not valued for External <ref refid="classmty_1_1ConjugationInfo" kindref="compound">ConjugationInfo</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/fermionFlow.h" line="320" column="16" bodyfile="src/marty/core/fermionFlow.h" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmty_1_1ConjugationInfo_1a40c115e9d25b1e0f0b64790c98f28579" prot="protected" static="no" mutable="no">
        <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref></type>
        <definition>csl::Index mty::ConjugationInfo::preA</definition>
        <argsstring></argsstring>
        <name>preA</name>
        <qualifiedname>mty::ConjugationInfo::preA</qualifiedname>
        <briefdescription>
<para>Index before A in the chain, not valued for External <ref refid="classmty_1_1ConjugationInfo" kindref="compound">ConjugationInfo</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/fermionFlow.h" line="326" column="16" bodyfile="src/marty/core/fermionFlow.h" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmty_1_1ConjugationInfo_1a9a732513549d0675f4aa593a4f68c720" prot="protected" static="no" mutable="no">
        <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref></type>
        <definition>csl::Index mty::ConjugationInfo::postB</definition>
        <argsstring></argsstring>
        <name>postB</name>
        <qualifiedname>mty::ConjugationInfo::postB</qualifiedname>
        <briefdescription>
<para>Index after B in the chain, not valued for External <ref refid="classmty_1_1ConjugationInfo" kindref="compound">ConjugationInfo</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/fermionFlow.h" line="332" column="16" bodyfile="src/marty/core/fermionFlow.h" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmty_1_1ConjugationInfo_1ae3faba52e2906d3f2b01d60dc334f483" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool mty::ConjugationInfo::conjugated</definition>
        <argsstring></argsstring>
        <name>conjugated</name>
        <qualifiedname>mty::ConjugationInfo::conjugated</qualifiedname>
        <briefdescription>
<para>Boolean for External <ref refid="classmty_1_1ConjugationInfo" kindref="compound">ConjugationInfo</ref>, tells if the external leg is complex conjugated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/fermionFlow.h" line="338" column="10" bodyfile="src/marty/core/fermionFlow.h" bodystart="338" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmty_1_1ConjugationInfo_1a41619e9182fc131e6d4427600f0c2163" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmty_1_1ConjugationList" kindref="compound">ConjugationList</ref></type>
        <definition>ConjugationList mty::ConjugationInfo::resolveFermionLines</definition>
        <argsstring>(FieldList init, FieldList const &amp;ruleOrder, bool ruleMode)</argsstring>
        <name>resolveFermionLines</name>
        <qualifiedname>mty::ConjugationInfo::resolveFermionLines</qualifiedname>
        <param>
          <type><ref refid="classmty_1_1ConjugationInfo_1a893504d132addaa8d00ceb1ad921aa74" kindref="member">FieldList</ref></type>
          <declname>init</declname>
        </param>
        <param>
          <type><ref refid="classmty_1_1ConjugationInfo_1a893504d132addaa8d00ceb1ad921aa74" kindref="member">FieldList</ref> const &amp;</type>
          <declname>ruleOrder</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ruleMode</declname>
        </param>
        <briefdescription>
<para>Resolves all fermion lines in a set of fields. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is usefull when Majorana fermions come in amplitudes. Fermion flows must be defined for each fermion line (arbitrarily, see <ulink url="https://cds.cern.ch/record/240381/files/CM-P00063014.pdf">https://cds.cern.ch/record/240381/files/CM-P00063014.pdf</ulink>) to write down the amplitude. Each propagator and vertex must be matched from the beginning to the end, and rules must then be applied to ensure that the fermion chain is continuous (no transposed gamma- matrix in the middle).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>init</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial set of fields in the <ref refid="classmty_1_1Wick" kindref="compound">Wick</ref> contraction. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ruleOrder</parametername>
</parameternamelist>
<parameterdescription>
<para>Order of fields in the Feynman rules.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A list of <ref refid="classmty_1_1ConjugationInfo" kindref="compound">ConjugationInfo</ref>, telling where to apply the conjugation matrix to recover a clean fermion flow, and a sign coming from fermion ordering. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/fermionFlow.h" line="105" column="28" bodyfile="src/marty/core/fermionFlow.cpp" bodystart="298" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1ConjugationInfo_1a7a0dcae53963397d2c164bdada5247bf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmty_1_1ConjugationList" kindref="compound">ConjugationList</ref></type>
        <definition>ConjugationList mty::ConjugationInfo::resolveFermionLines</definition>
        <argsstring>(FieldList const &amp;init, std::vector&lt; QuantumField &gt; const &amp;ruleOrder, bool ruleMode)</argsstring>
        <name>resolveFermionLines</name>
        <qualifiedname>mty::ConjugationInfo::resolveFermionLines</qualifiedname>
        <param>
          <type><ref refid="classmty_1_1ConjugationInfo_1a893504d132addaa8d00ceb1ad921aa74" kindref="member">FieldList</ref> const &amp;</type>
          <declname>init</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classmty_1_1QuantumField" kindref="compound">QuantumField</ref> &gt; const &amp;</type>
          <declname>ruleOrder</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ruleMode</declname>
        </param>
        <briefdescription>
<para>Resolves all fermion lines in a set of fields. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is just an overload to convert a vector of <ref refid="classmty_1_1QuantumField" kindref="compound">QuantumField</ref> (given by the class Graph) to a FieldList.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>init</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial set of fields in the <ref refid="classmty_1_1Wick" kindref="compound">Wick</ref> contraction. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ruleOrder</parametername>
</parameternamelist>
<parameterdescription>
<para>Order of fields in the Feynman rules.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A list of <ref refid="classmty_1_1ConjugationInfo" kindref="compound">ConjugationInfo</ref>, telling where to apply the conjugation matrix to recover a clean fermion flow. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/fermionFlow.h" line="122" column="5" bodyfile="src/marty/core/fermionFlow.cpp" bodystart="391" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1ConjugationInfo_1a15e2a4b39892219bc34405722bf2adab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mty::ConjugationInfo::simplify</definition>
        <argsstring>(ConjugationList &amp;infoList, bool ruleMode)</argsstring>
        <name>simplify</name>
        <qualifiedname>mty::ConjugationInfo::simplify</qualifiedname>
        <param>
          <type><ref refid="classmty_1_1ConjugationList" kindref="compound">ConjugationList</ref> &amp;</type>
          <declname>infoList</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ruleMode</declname>
        </param>
        <briefdescription>
<para>Simplifies a set of <ref refid="classmty_1_1ConjugationInfo" kindref="compound">ConjugationInfo</ref>, merging the consecutive ones. </para>
        </briefdescription>
        <detaileddescription>
<para>This functions uses the fact that <formula id="59">$ C^TC = 1. $</formula> For a list of conjugation, consecutive ones are merged. For example,    <formula id="60">\[
     \left(C\Gamma _1 C^T\right)\cdot \left(C\Gamma _2C^T\right)
     = C\Gamma _1\Gamma _2C^T.
\]</formula></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of <ref refid="classmty_1_1ConjugationInfo" kindref="compound">ConjugationInfo</ref> to simplify. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ruleMode</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean, must be true if Feynman rule calculation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/fermionFlow.h" line="140" column="17" bodyfile="src/marty/core/fermionFlow.cpp" bodystart="403" bodyend="467"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1ConjugationInfo_1ae2fe3807b50f74cf836ed75dc5c059bd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mty::ConjugationInfo::applyConjugation</definition>
        <argsstring>(ConjugationList infoList, csl::Expr &amp;expr, bool ruleMode)</argsstring>
        <name>applyConjugation</name>
        <qualifiedname>mty::ConjugationInfo::applyConjugation</qualifiedname>
        <param>
          <type><ref refid="classmty_1_1ConjugationList" kindref="compound">ConjugationList</ref></type>
          <declname>infoList</declname>
        </param>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> &amp;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ruleMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/fermionFlow.h" line="143" column="5" bodyfile="src/marty/core/fermionFlow.cpp" bodystart="469" bodyend="494"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classmty_1_1ConjugationInfo_1acdb55ac635d33278a15ea426b46f4458" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mty::ConjugationInfo::ConjugationInfo</definition>
        <argsstring>()</argsstring>
        <name>ConjugationInfo</name>
        <qualifiedname>mty::ConjugationInfo::ConjugationInfo</qualifiedname>
        <briefdescription>
<para>Constructs an empty <ref refid="classmty_1_1ConjugationInfo" kindref="compound">ConjugationInfo</ref>. Will do nothing. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classmty_1_1ConjugationInfo_1a0b2dfacdb208a165e6d0deed56000af3" kindref="member">setInfo()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/fermionFlow.h" line="151" column="5" bodyfile="src/marty/core/fermionFlow.cpp" bodystart="496" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1ConjugationInfo_1a6cfc5d1607743793be5d00290fa8db63" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>mty::ConjugationInfo::ConjugationInfo</definition>
        <argsstring>(csl::Index const &amp;t_A, bool t_conjugated)</argsstring>
        <name>ConjugationInfo</name>
        <qualifiedname>mty::ConjugationInfo::ConjugationInfo</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <declname>t_A</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>t_conjugated</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classmty_1_1ConjugationInfo" kindref="compound">ConjugationInfo</ref> for an external leg. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_A</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the external leg to conjugate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t_conjugated</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean that must be true if the external leg is initially complex conjugated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/fermionFlow.h" line="160" column="14" bodyfile="src/marty/core/fermionFlow.cpp" bodystart="500" bodyend="503"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1ConjugationInfo_1aca455c57a8d215e90c1ace9561c7716a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mty::ConjugationInfo::ConjugationInfo</definition>
        <argsstring>(csl::Index const &amp;t_A, csl::Index const &amp;t_B, csl::Index const &amp;t_preA, csl::Index const &amp;t_postB)</argsstring>
        <name>ConjugationInfo</name>
        <qualifiedname>mty::ConjugationInfo::ConjugationInfo</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <declname>t_A</declname>
        </param>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <declname>t_B</declname>
        </param>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <declname>t_preA</declname>
        </param>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <declname>t_postB</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classmty_1_1ConjugationInfo" kindref="compound">ConjugationInfo</ref> for a part of a fermion chain. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_A</parametername>
</parameternamelist>
<parameterdescription>
<para>First index (to the left) of the fermion chain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t_B</parametername>
</parameternamelist>
<parameterdescription>
<para>Second index (to the right) of the fermion chain. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/fermionFlow.h" line="168" column="5" bodyfile="src/marty/core/fermionFlow.cpp" bodystart="505" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1ConjugationInfo_1aa2e617a176958a4852ffd9665b5ac040" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mty::ConjugationInfo::~ConjugationInfo</definition>
        <argsstring>()=default</argsstring>
        <name>~ConjugationInfo</name>
        <qualifiedname>mty::ConjugationInfo::~ConjugationInfo</qualifiedname>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/fermionFlow.h" line="176" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1ConjugationInfo_1a95daf2a97116ed32825b8ee7244ac676" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mty::ConjugationInfo::ConjugationInfo</definition>
        <argsstring>(ConjugationInfo const &amp;)=default</argsstring>
        <name>ConjugationInfo</name>
        <qualifiedname>mty::ConjugationInfo::ConjugationInfo</qualifiedname>
        <param>
          <type><ref refid="classmty_1_1ConjugationInfo" kindref="compound">ConjugationInfo</ref> const &amp;</type>
        </param>
        <briefdescription>
<para>Default copy constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="classmty_1_1ConjugationInfo" kindref="compound">ConjugationInfo</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>to copy. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/fermionFlow.h" line="183" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1ConjugationInfo_1aa637e65f65ba023e471fbc798d13bd8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mty::ConjugationInfo::ConjugationInfo</definition>
        <argsstring>(ConjugationInfo &amp;&amp;)=default</argsstring>
        <name>ConjugationInfo</name>
        <qualifiedname>mty::ConjugationInfo::ConjugationInfo</qualifiedname>
        <param>
          <type><ref refid="classmty_1_1ConjugationInfo" kindref="compound">ConjugationInfo</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
<para>Default move constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="classmty_1_1ConjugationInfo" kindref="compound">ConjugationInfo</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>to move. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/fermionFlow.h" line="189" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1ConjugationInfo_1a378c706e6726c6aed936ee2eca0037d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmty_1_1ConjugationInfo" kindref="compound">ConjugationInfo</ref> &amp;</type>
        <definition>ConjugationInfo &amp; mty::ConjugationInfo::operator=</definition>
        <argsstring>(ConjugationInfo const &amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>mty::ConjugationInfo::operator=</qualifiedname>
        <param>
          <type><ref refid="classmty_1_1ConjugationInfo" kindref="compound">ConjugationInfo</ref> const &amp;</type>
        </param>
        <briefdescription>
<para>Default copy assignement operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="classmty_1_1ConjugationInfo" kindref="compound">ConjugationInfo</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>to copy.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to the target of the copy. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/fermionFlow.h" line="197" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1ConjugationInfo_1ab5af4986fffe156079bf89d5588feb38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmty_1_1ConjugationInfo" kindref="compound">ConjugationInfo</ref> &amp;</type>
        <definition>ConjugationInfo &amp; mty::ConjugationInfo::operator=</definition>
        <argsstring>(ConjugationInfo &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>mty::ConjugationInfo::operator=</qualifiedname>
        <param>
          <type><ref refid="classmty_1_1ConjugationInfo" kindref="compound">ConjugationInfo</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
<para>Default move assignement operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="classmty_1_1ConjugationInfo" kindref="compound">ConjugationInfo</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>to move.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to the target of the copy. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/fermionFlow.h" line="205" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1ConjugationInfo_1a2d1939da15d18cf7c7c639225d79e37b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmty_1_1ConjugationInfo_1a11e916af5b158c47d2dc1aef41d25ef1" kindref="member">Type</ref></type>
        <definition>Type mty::ConjugationInfo::getType</definition>
        <argsstring>() const</argsstring>
        <name>getType</name>
        <qualifiedname>mty::ConjugationInfo::getType</qualifiedname>
        <briefdescription>
<para>Returns the type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/fermionFlow.h" line="210" column="10" bodyfile="src/marty/core/fermionFlow.h" bodystart="210" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1ConjugationInfo_1ae973c5b307d362cbd92300eb5b2922f4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref></type>
        <definition>csl::Index mty::ConjugationInfo::getA</definition>
        <argsstring>() const</argsstring>
        <name>getA</name>
        <qualifiedname>mty::ConjugationInfo::getA</qualifiedname>
        <briefdescription>
<para>Returns the first index of the <ref refid="classmty_1_1ConjugationInfo" kindref="compound">ConjugationInfo</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/fermionFlow.h" line="218" column="16" bodyfile="src/marty/core/fermionFlow.h" bodystart="218" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1ConjugationInfo_1a8534d3fc6351a5a997d43c331799838b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref></type>
        <definition>csl::Index mty::ConjugationInfo::getB</definition>
        <argsstring>() const</argsstring>
        <name>getB</name>
        <qualifiedname>mty::ConjugationInfo::getB</qualifiedname>
        <briefdescription>
<para>Returns the second index of the <ref refid="classmty_1_1ConjugationInfo" kindref="compound">ConjugationInfo</ref>, has a meaning only for Internal <ref refid="classmty_1_1ConjugationInfo" kindref="compound">ConjugationInfo</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/fermionFlow.h" line="227" column="16" bodyfile="src/marty/core/fermionFlow.h" bodystart="227" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1ConjugationInfo_1a418349c02c05352fc1d8128300b9e83e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref></type>
        <definition>csl::Index mty::ConjugationInfo::getPreA</definition>
        <argsstring>() const</argsstring>
        <name>getPreA</name>
        <qualifiedname>mty::ConjugationInfo::getPreA</qualifiedname>
        <briefdescription>
<para>Returns the index before A in the chain, has a meaning only for Internal <ref refid="classmty_1_1ConjugationInfo" kindref="compound">ConjugationInfo</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/fermionFlow.h" line="236" column="16" bodyfile="src/marty/core/fermionFlow.h" bodystart="236" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1ConjugationInfo_1a40b59d033f5a1979ee9746fc8038b273" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref></type>
        <definition>csl::Index mty::ConjugationInfo::getPostB</definition>
        <argsstring>() const</argsstring>
        <name>getPostB</name>
        <qualifiedname>mty::ConjugationInfo::getPostB</qualifiedname>
        <briefdescription>
<para>Returns the index after B in the chain, has a meaning only for Internal <ref refid="classmty_1_1ConjugationInfo" kindref="compound">ConjugationInfo</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/fermionFlow.h" line="245" column="16" bodyfile="src/marty/core/fermionFlow.h" bodystart="245" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1ConjugationInfo_1ab8eb8184d5c4241565ccbf6989043c29" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mty::ConjugationInfo::getConjugated</definition>
        <argsstring>() const</argsstring>
        <name>getConjugated</name>
        <qualifiedname>mty::ConjugationInfo::getConjugated</qualifiedname>
        <briefdescription>
<para>Returns the conjugation of the <ref refid="classmty_1_1ConjugationInfo" kindref="compound">ConjugationInfo</ref>, has a meaning only for External <ref refid="classmty_1_1ConjugationInfo" kindref="compound">ConjugationInfo</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/fermionFlow.h" line="254" column="10" bodyfile="src/marty/core/fermionFlow.h" bodystart="254" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1ConjugationInfo_1a0b2dfacdb208a165e6d0deed56000af3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mty::ConjugationInfo::setInfo</definition>
        <argsstring>(csl::Index const &amp;t_A, bool t_conjugated)</argsstring>
        <name>setInfo</name>
        <qualifiedname>mty::ConjugationInfo::setInfo</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <declname>t_A</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>t_conjugated</declname>
        </param>
        <briefdescription>
<para>Sets info for an external <ref refid="classmty_1_1ConjugationInfo" kindref="compound">ConjugationInfo</ref>. See the corresponding constructor for more info. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_A</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the external leg </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t_conjugated</parametername>
</parameternamelist>
<parameterdescription>
<para>Conjugation of the external leg </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/fermionFlow.h" line="266" column="10" bodyfile="src/marty/core/fermionFlow.cpp" bodystart="513" bodyend="518"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1ConjugationInfo_1aaf7d02a6c0febddd3452f0df9b5d9401" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mty::ConjugationInfo::setInfo</definition>
        <argsstring>(csl::Index const &amp;t_A, csl::Index const &amp;t_B, csl::Index const &amp;t_preA, csl::Index const &amp;t_postB)</argsstring>
        <name>setInfo</name>
        <qualifiedname>mty::ConjugationInfo::setInfo</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <declname>t_A</declname>
        </param>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <declname>t_B</declname>
        </param>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <declname>t_preA</declname>
        </param>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <declname>t_postB</declname>
        </param>
        <briefdescription>
<para>Sets info for an internal <ref refid="classmty_1_1ConjugationInfo" kindref="compound">ConjugationInfo</ref>. See the corresponding constructor for more info. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_A</parametername>
</parameternamelist>
<parameterdescription>
<para>First index of the chain </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t_B</parametername>
</parameternamelist>
<parameterdescription>
<para>Second index of the chain </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/fermionFlow.h" line="275" column="10" bodyfile="src/marty/core/fermionFlow.cpp" bodystart="520" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1ConjugationInfo_1aceabe24f2ecfee0da95687e19374c1cd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mty::ConjugationInfo::apply</definition>
        <argsstring>(csl::Expr &amp;expr, bool ruleMode, std::vector&lt; FermionLine &gt; const &amp;lines) const</argsstring>
        <name>apply</name>
        <qualifiedname>mty::ConjugationInfo::apply</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> &amp;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ruleMode</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="structmty_1_1FermionLine" kindref="compound">FermionLine</ref> &gt; const &amp;</type>
          <declname>lines</declname>
        </param>
        <briefdescription>
<para>Applies the conjugation on the underlying expression. </para>
        </briefdescription>
        <detaileddescription>
<para>Inserts in the fermion chain (replacing indices carefully) the conjugation matrix (or matrices) in the right place. After those insertions, the C-matrix simplification should leave a clean and ordered fermion chain.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expr</parametername>
</parameternamelist>
<parameterdescription>
<para>Expression to modify. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ruleMode</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean, true if Feynman rule calculation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lines</parametername>
</parameternamelist>
<parameterdescription>
<para>Fermion lines in the diagram. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/fermionFlow.h" line="292" column="10" bodyfile="src/marty/core/fermionFlow.cpp" bodystart="532" bodyend="554"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="classmty_1_1ConjugationInfo_1a34468e36020088cf962b100b449f274d" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mty::ConjugationInfo::insertInChain</definition>
        <argsstring>(csl::Expr &amp;expr) const</argsstring>
        <name>insertInChain</name>
        <qualifiedname>mty::ConjugationInfo::insertInChain</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> &amp;</type>
          <declname>expr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/fermionFlow.h" line="297" column="10" bodyfile="src/marty/core/fermionFlow.cpp" bodystart="643" bodyend="724"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1ConjugationInfo_1a653f0c7317ecc058096eac31eb98c0f9" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mty::ConjugationInfo::insertInChainForRule</definition>
        <argsstring>(csl::Expr &amp;expr, std::vector&lt; FermionLine &gt; const &amp;lines) const</argsstring>
        <name>insertInChainForRule</name>
        <qualifiedname>mty::ConjugationInfo::insertInChainForRule</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> &amp;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="structmty_1_1FermionLine" kindref="compound">FermionLine</ref> &gt; const &amp;</type>
          <declname>lines</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/fermionFlow.h" line="299" column="10" bodyfile="src/marty/core/fermionFlow.cpp" bodystart="609" bodyend="641"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1ConjugationInfo_1a045f6e9ea531c07b9027fc8006864f03" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mty::ConjugationInfo::insertExternal</definition>
        <argsstring>(csl::Expr &amp;expr) const</argsstring>
        <name>insertExternal</name>
        <qualifiedname>mty::ConjugationInfo::insertExternal</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> &amp;</type>
          <declname>expr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/fermionFlow.h" line="302" column="10" bodyfile="src/marty/core/fermionFlow.cpp" bodystart="726" bodyend="766"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Class encapsulating necesarry data to place conjugation matrices in amplitudes when treating Majorana fermions. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>csl::Index</label>
        <link refid="classcsl_1_1Index"/>
      </node>
      <node id="1">
        <label>mty::ConjugationInfo</label>
        <link refid="classmty_1_1ConjugationInfo"/>
        <childnode refid="2" relation="usage">
          <edgelabel>A</edgelabel>
          <edgelabel>B</edgelabel>
          <edgelabel>postB</edgelabel>
          <edgelabel>preA</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/marty/core/fermionFlow.h" line="40" column="1" bodyfile="src/marty/core/fermionFlow.h" bodystart="40" bodyend="339"/>
    <listofallmembers>
      <member refid="classmty_1_1ConjugationInfo_1a5cfc97eec2a795f060e5e49f34856e6a" prot="protected" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>A</name></member>
      <member refid="classmty_1_1ConjugationInfo_1aceabe24f2ecfee0da95687e19374c1cd" prot="public" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>apply</name></member>
      <member refid="classmty_1_1ConjugationInfo_1ae2fe3807b50f74cf836ed75dc5c059bd" prot="public" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>applyConjugation</name></member>
      <member refid="classmty_1_1ConjugationInfo_1a54780335ae8c0ea70fe15ab161d7fc78" prot="protected" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>B</name></member>
      <member refid="classmty_1_1ConjugationInfo_1ae3faba52e2906d3f2b01d60dc334f483" prot="protected" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>conjugated</name></member>
      <member refid="classmty_1_1ConjugationInfo_1acdb55ac635d33278a15ea426b46f4458" prot="public" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>ConjugationInfo</name></member>
      <member refid="classmty_1_1ConjugationInfo_1a6cfc5d1607743793be5d00290fa8db63" prot="public" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>ConjugationInfo</name></member>
      <member refid="classmty_1_1ConjugationInfo_1aca455c57a8d215e90c1ace9561c7716a" prot="public" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>ConjugationInfo</name></member>
      <member refid="classmty_1_1ConjugationInfo_1a95daf2a97116ed32825b8ee7244ac676" prot="public" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>ConjugationInfo</name></member>
      <member refid="classmty_1_1ConjugationInfo_1aa637e65f65ba023e471fbc798d13bd8f" prot="public" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>ConjugationInfo</name></member>
      <member refid="classmty_1_1ConjugationInfo_1a11e916af5b158c47d2dc1aef41d25ef1a4b9266dfbcc4e1bd0e91041a80ff9839" prot="public" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>External</name></member>
      <member refid="classmty_1_1ConjugationInfo_1a893504d132addaa8d00ceb1ad921aa74" prot="public" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>FieldList</name></member>
      <member refid="classmty_1_1ConjugationInfo_1ae973c5b307d362cbd92300eb5b2922f4" prot="public" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>getA</name></member>
      <member refid="classmty_1_1ConjugationInfo_1a8534d3fc6351a5a997d43c331799838b" prot="public" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>getB</name></member>
      <member refid="classmty_1_1ConjugationInfo_1ab8eb8184d5c4241565ccbf6989043c29" prot="public" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>getConjugated</name></member>
      <member refid="classmty_1_1ConjugationInfo_1a40b59d033f5a1979ee9746fc8038b273" prot="public" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>getPostB</name></member>
      <member refid="classmty_1_1ConjugationInfo_1a418349c02c05352fc1d8128300b9e83e" prot="public" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>getPreA</name></member>
      <member refid="classmty_1_1ConjugationInfo_1a2d1939da15d18cf7c7c639225d79e37b" prot="public" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>getType</name></member>
      <member refid="classmty_1_1ConjugationInfo_1a045f6e9ea531c07b9027fc8006864f03" prot="protected" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>insertExternal</name></member>
      <member refid="classmty_1_1ConjugationInfo_1a34468e36020088cf962b100b449f274d" prot="protected" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>insertInChain</name></member>
      <member refid="classmty_1_1ConjugationInfo_1a653f0c7317ecc058096eac31eb98c0f9" prot="protected" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>insertInChainForRule</name></member>
      <member refid="classmty_1_1ConjugationInfo_1a11e916af5b158c47d2dc1aef41d25ef1a225af8d5031f1ab4782e8e2c54eb5842" prot="public" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>Internal</name></member>
      <member refid="classmty_1_1ConjugationInfo_1a8f008edaeb7e12ad79ae99b77fa1f8df" prot="public" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>maxFermionLines</name></member>
      <member refid="classmty_1_1ConjugationInfo_1a378c706e6726c6aed936ee2eca0037d0" prot="public" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>operator=</name></member>
      <member refid="classmty_1_1ConjugationInfo_1ab5af4986fffe156079bf89d5588feb38" prot="public" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>operator=</name></member>
      <member refid="classmty_1_1ConjugationInfo_1a9a732513549d0675f4aa593a4f68c720" prot="protected" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>postB</name></member>
      <member refid="classmty_1_1ConjugationInfo_1a40c115e9d25b1e0f0b64790c98f28579" prot="protected" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>preA</name></member>
      <member refid="classmty_1_1ConjugationInfo_1a41619e9182fc131e6d4427600f0c2163" prot="public" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>resolveFermionLines</name></member>
      <member refid="classmty_1_1ConjugationInfo_1a7a0dcae53963397d2c164bdada5247bf" prot="public" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>resolveFermionLines</name></member>
      <member refid="classmty_1_1ConjugationInfo_1a0b2dfacdb208a165e6d0deed56000af3" prot="public" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>setInfo</name></member>
      <member refid="classmty_1_1ConjugationInfo_1aaf7d02a6c0febddd3452f0df9b5d9401" prot="public" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>setInfo</name></member>
      <member refid="classmty_1_1ConjugationInfo_1a15e2a4b39892219bc34405722bf2adab" prot="public" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>simplify</name></member>
      <member refid="classmty_1_1ConjugationInfo_1a11e916af5b158c47d2dc1aef41d25ef1" prot="public" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>Type</name></member>
      <member refid="classmty_1_1ConjugationInfo_1ab5e5b3398d6bc3a1b50303d73713560c" prot="protected" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>type</name></member>
      <member refid="classmty_1_1ConjugationInfo_1a11e916af5b158c47d2dc1aef41d25ef1a5a45cc1e0191447b3f27bbe2fa787058" prot="public" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>Undefined</name></member>
      <member refid="classmty_1_1ConjugationInfo_1aa2e617a176958a4852ffd9665b5ac040" prot="public" virt="non-virtual"><scope>mty::ConjugationInfo</scope><name>~ConjugationInfo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
