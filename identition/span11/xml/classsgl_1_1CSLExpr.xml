<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classsgl_1_1CSLExpr" kind="class" language="C++" prot="public">
    <compoundname>sgl::CSLExpr</compoundname>
    <basecompoundref refid="classsgl_1_1AbstractLiteral" prot="public" virt="non-virtual">sgl::AbstractLiteral</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsgl_1_1CSLExpr_1a1cf5418b0fae8cdc050e2fca1f28ff40" prot="private" static="no" mutable="no">
        <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref></type>
        <definition>csl::Expr sgl::CSLExpr::m_expr</definition>
        <argsstring></argsstring>
        <name>m_expr</name>
        <qualifiedname>sgl::CSLExpr::m_expr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/cslexpr.h" line="69" column="15" bodyfile="src/marty/sgl/cslexpr.h" bodystart="69" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classsgl_1_1CSLExpr_1a2927c5ea66208e65803ee9c8275904ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sgl::CSLExpr::CSLExpr</definition>
        <argsstring>(csl::Expr const &amp;expr)</argsstring>
        <name>CSLExpr</name>
        <qualifiedname>sgl::CSLExpr::CSLExpr</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> const &amp;</type>
          <declname>expr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/cslexpr.h" line="32" column="5" bodyfile="src/marty/sgl/cslexpr.h" bodystart="32" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1CSLExpr_1ad6b33a01786c1a372aa0f75812c7c289" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool sgl::CSLExpr::isZero</definition>
        <argsstring>() const override</argsstring>
        <name>isZero</name>
        <qualifiedname>sgl::CSLExpr::isZero</qualifiedname>
        <reimplements refid="classsgl_1_1AbstractGammaSym_1adfe9ff61706305c5c0eb268dd2653d0d">isZero</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/cslexpr.h" line="36" column="10" bodyfile="src/marty/sgl/cslexpr.cpp" bodystart="20" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1CSLExpr_1ae0fab884792e74b373dd97384070456b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> const &amp;</type>
        <definition>csl::Expr const  &amp; sgl::CSLExpr::expr</definition>
        <argsstring>() const override</argsstring>
        <name>expr</name>
        <qualifiedname>sgl::CSLExpr::expr</qualifiedname>
        <reimplements refid="classsgl_1_1AbstractGammaSym_1a62ed9a539963b9146ac05c0efafffd47">expr</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/cslexpr.h" line="38" column="21" bodyfile="src/marty/sgl/cslexpr.h" bodystart="38" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1CSLExpr_1a57bfbf4c861569f08402c99f4974d96c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> &amp;</type>
        <definition>csl::Expr &amp; sgl::CSLExpr::expr</definition>
        <argsstring>() override</argsstring>
        <name>expr</name>
        <qualifiedname>sgl::CSLExpr::expr</qualifiedname>
        <reimplements refid="classsgl_1_1AbstractGammaSym_1acefd4f5cee624ddff586cb005ed2510a">expr</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/cslexpr.h" line="42" column="15" bodyfile="src/marty/sgl/cslexpr.h" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1CSLExpr_1a1a714edacf5a853f759bb4b555994d80" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool sgl::CSLExpr::contains</definition>
        <argsstring>(csl::Index const &amp;) const override</argsstring>
        <name>contains</name>
        <qualifiedname>sgl::CSLExpr::contains</qualifiedname>
        <reimplements refid="classsgl_1_1AbstractGammaSym_1a6918d61d7d9639a578fed132b0eba9f0">contains</reimplements>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/cslexpr.h" line="47" column="10" bodyfile="src/marty/sgl/cslexpr.h" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1CSLExpr_1a4d4942c317537b3f048e3419fe48a658" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void sgl::CSLExpr::replace</definition>
        <argsstring>(csl::Index const &amp;, csl::Index const &amp;) override</argsstring>
        <name>replace</name>
        <qualifiedname>sgl::CSLExpr::replace</qualifiedname>
        <reimplements refid="classsgl_1_1AbstractGammaSym_1a7e40a14116fc813571670c09065016d9">replace</reimplements>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
        </param>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/cslexpr.h" line="51" column="10" bodyfile="src/marty/sgl/cslexpr.h" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1CSLExpr_1af0bac3ed25bb9e9e163caaa44a4b0295" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref></type>
        <definition>csl::Expr sgl::CSLExpr::toCSL</definition>
        <argsstring>(TensorSet const &amp;) const override</argsstring>
        <name>toCSL</name>
        <qualifiedname>sgl::CSLExpr::toCSL</qualifiedname>
        <reimplements refid="classsgl_1_1AbstractGammaSym_1a2c88557366387dab3a16a1e71aa192a6">toCSL</reimplements>
        <param>
          <type><ref refid="structsgl_1_1TensorSet" kindref="compound">TensorSet</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/cslexpr.h" line="55" column="15" bodyfile="src/marty/sgl/cslexpr.h" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1CSLExpr_1adbf6a4ff7d5725d312c829b89934d7e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref></type>
        <definition>csl::Expr sgl::CSLExpr::getFactor</definition>
        <argsstring>() const override</argsstring>
        <name>getFactor</name>
        <qualifiedname>sgl::CSLExpr::getFactor</qualifiedname>
        <reimplements refid="classsgl_1_1AbstractGammaSym_1a5e749ec71535aae944635a29bdb7eeba">getFactor</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/cslexpr.h" line="60" column="15" bodyfile="src/marty/sgl/cslexpr.cpp" bodystart="25" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1CSLExpr_1a8f2834aa3a4f5e7e667c4ea133b10fc6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref></type>
        <definition>GExpr sgl::CSLExpr::getTerm</definition>
        <argsstring>() const override</argsstring>
        <name>getTerm</name>
        <qualifiedname>sgl::CSLExpr::getTerm</qualifiedname>
        <reimplements refid="classsgl_1_1AbstractGammaSym_1a75034a33b0e554585206b38961960113">getTerm</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/cslexpr.h" line="61" column="15" bodyfile="src/marty/sgl/cslexpr.cpp" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1CSLExpr_1ab810d6c57975123e63938da7518917bb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref></type>
        <definition>GExpr sgl::CSLExpr::copy</definition>
        <argsstring>() const override</argsstring>
        <name>copy</name>
        <qualifiedname>sgl::CSLExpr::copy</qualifiedname>
        <reimplements refid="classsgl_1_1AbstractGammaSym_1af757efe5cd359a3d83f1ef642c4fec8b">copy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/cslexpr.h" line="63" column="11" bodyfile="src/marty/sgl/cslexpr.cpp" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1CSLExpr_1aa32324d1e151ef9fc8573c9d35891bb1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref></type>
        <definition>GExpr sgl::CSLExpr::refresh</definition>
        <argsstring>() const override</argsstring>
        <name>refresh</name>
        <qualifiedname>sgl::CSLExpr::refresh</qualifiedname>
        <reimplements refid="classsgl_1_1AbstractGammaSym_1a13cc14a47f1ddf8fb51b0861e93c1d00">refresh</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/cslexpr.h" line="64" column="11" bodyfile="src/marty/sgl/cslexpr.cpp" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1CSLExpr_1ae328d09dfc4907b1b59ec13006d3dd3e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void sgl::CSLExpr::print</definition>
        <argsstring>(std::ostream &amp;out) const override</argsstring>
        <name>print</name>
        <qualifiedname>sgl::CSLExpr::print</qualifiedname>
        <reimplements refid="classsgl_1_1AbstractGammaSym_1a167b1ff6b236463f5c2cb2cff18b7109">print</reimplements>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/cslexpr.h" line="66" column="10" bodyfile="src/marty/sgl/cslexpr.cpp" bodystart="44" bodyend="47"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>sgl::AbstractGammaSym</label>
        <link refid="classsgl_1_1AbstractGammaSym"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>sgl::AbstractLiteral</label>
        <link refid="classsgl_1_1AbstractLiteral"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>sgl::CSLExpr</label>
        <link refid="classsgl_1_1CSLExpr"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>std::enable_shared_from_this&lt; AbstractGammaSym &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>sgl::AbstractGammaSym</label>
        <link refid="classsgl_1_1AbstractGammaSym"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>sgl::AbstractLiteral</label>
        <link refid="classsgl_1_1AbstractLiteral"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>sgl::CSLExpr</label>
        <link refid="classsgl_1_1CSLExpr"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>std::enable_shared_from_this&lt; AbstractGammaSym &gt;</label>
      </node>
    </collaborationgraph>
    <location file="src/marty/sgl/cslexpr.h" line="29" column="1" bodyfile="src/marty/sgl/cslexpr.h" bodystart="29" bodyend="70"/>
    <listofallmembers>
      <member refid="classsgl_1_1AbstractLiteral_1a1c8f91c428236fd112084566ff9f798d" prot="public" virt="virtual"><scope>sgl::CSLExpr</scope><name>argument</name></member>
      <member refid="classsgl_1_1AbstractLiteral_1a6de99d632158d0544e7536f141ab4d25" prot="public" virt="virtual"><scope>sgl::CSLExpr</scope><name>argument</name></member>
      <member refid="classsgl_1_1AbstractLiteral_1a3bb5fe1156b3e85bc02536077626e95e" prot="public" virt="virtual"><scope>sgl::CSLExpr</scope><name>begin</name></member>
      <member refid="classsgl_1_1AbstractLiteral_1ad9662a88c502549ea76e5cfc9fa76a0c" prot="public" virt="virtual"><scope>sgl::CSLExpr</scope><name>begin</name></member>
      <member refid="classsgl_1_1AbstractGammaSym_1a84a8f29afaabbe187d15d13a9fac4059" prot="public" virt="non-virtual"><scope>sgl::CSLExpr</scope><name>const_iterator</name></member>
      <member refid="classsgl_1_1CSLExpr_1a1a714edacf5a853f759bb4b555994d80" prot="public" virt="virtual"><scope>sgl::CSLExpr</scope><name>contains</name></member>
      <member refid="classsgl_1_1CSLExpr_1ab810d6c57975123e63938da7518917bb" prot="public" virt="virtual"><scope>sgl::CSLExpr</scope><name>copy</name></member>
      <member refid="classsgl_1_1CSLExpr_1a2927c5ea66208e65803ee9c8275904ee" prot="public" virt="non-virtual"><scope>sgl::CSLExpr</scope><name>CSLExpr</name></member>
      <member refid="classsgl_1_1AbstractLiteral_1ad063835e8cc5fe232c4f858fb100fbf3" prot="public" virt="virtual"><scope>sgl::CSLExpr</scope><name>end</name></member>
      <member refid="classsgl_1_1AbstractLiteral_1a93c2311786e32222681acf8f5ba7a5b8" prot="public" virt="virtual"><scope>sgl::CSLExpr</scope><name>end</name></member>
      <member refid="classsgl_1_1AbstractGammaSym_1ac033f1bea41f9a1001abba5b9305ce3e" prot="public" virt="non-virtual"><scope>sgl::CSLExpr</scope><name>errorPrint</name></member>
      <member refid="classsgl_1_1CSLExpr_1ae0fab884792e74b373dd97384070456b" prot="public" virt="virtual"><scope>sgl::CSLExpr</scope><name>expr</name></member>
      <member refid="classsgl_1_1CSLExpr_1a57bfbf4c861569f08402c99f4974d96c" prot="public" virt="virtual"><scope>sgl::CSLExpr</scope><name>expr</name></member>
      <member refid="classsgl_1_1CSLExpr_1adbf6a4ff7d5725d312c829b89934d7e4" prot="public" virt="virtual"><scope>sgl::CSLExpr</scope><name>getFactor</name></member>
      <member refid="classsgl_1_1CSLExpr_1a8f2834aa3a4f5e7e667c4ea133b10fc6" prot="public" virt="virtual"><scope>sgl::CSLExpr</scope><name>getTerm</name></member>
      <member refid="classsgl_1_1AbstractGammaSym_1ade647a5eec39ac5e5e6de2d612b8cdd3" prot="public" virt="virtual"><scope>sgl::CSLExpr</scope><name>hasPropertyWith</name></member>
      <member refid="classsgl_1_1AbstractGammaSym_1a984f2acddc646a42a7ace28ffe96f1d3" prot="public" virt="virtual"><scope>sgl::CSLExpr</scope><name>indices</name></member>
      <member refid="classsgl_1_1AbstractGammaSym_1a3e2d18fdc22a8012e1179e132c5cdaf3" prot="public" virt="virtual"><scope>sgl::CSLExpr</scope><name>indices</name></member>
      <member refid="classsgl_1_1CSLExpr_1ad6b33a01786c1a372aa0f75812c7c289" prot="public" virt="virtual"><scope>sgl::CSLExpr</scope><name>isZero</name></member>
      <member refid="classsgl_1_1AbstractGammaSym_1a7ecc40fa38a2c881f0e1b2af81e699f4" prot="public" virt="non-virtual"><scope>sgl::CSLExpr</scope><name>iterator</name></member>
      <member refid="classsgl_1_1CSLExpr_1a1cf5418b0fae8cdc050e2fca1f28ff40" prot="private" virt="non-virtual"><scope>sgl::CSLExpr</scope><name>m_expr</name></member>
      <member refid="classsgl_1_1CSLExpr_1ae328d09dfc4907b1b59ec13006d3dd3e" prot="public" virt="virtual"><scope>sgl::CSLExpr</scope><name>print</name></member>
      <member refid="classsgl_1_1AbstractGammaSym_1abdacec8b02e4d1b58b9b938ae9be8e98" prot="public" virt="virtual"><scope>sgl::CSLExpr</scope><name>propertyWith</name></member>
      <member refid="classsgl_1_1CSLExpr_1aa32324d1e151ef9fc8573c9d35891bb1" prot="public" virt="virtual"><scope>sgl::CSLExpr</scope><name>refresh</name></member>
      <member refid="classsgl_1_1CSLExpr_1a4d4942c317537b3f048e3419fe48a658" prot="public" virt="virtual"><scope>sgl::CSLExpr</scope><name>replace</name></member>
      <member refid="classsgl_1_1AbstractGammaSym_1a37c54670ee0262b62a55279b23e7ce12" prot="public" virt="non-virtual"><scope>sgl::CSLExpr</scope><name>self</name></member>
      <member refid="classsgl_1_1AbstractGammaSym_1a2c8730e190c88413a50d6f7b6864a97b" prot="public" virt="virtual"><scope>sgl::CSLExpr</scope><name>simplify</name></member>
      <member refid="classsgl_1_1AbstractLiteral_1a138e83d163d9978b52241cc4e3e30ceb" prot="public" virt="virtual"><scope>sgl::CSLExpr</scope><name>size</name></member>
      <member refid="classsgl_1_1CSLExpr_1af0bac3ed25bb9e9e163caaa44a4b0295" prot="public" virt="virtual"><scope>sgl::CSLExpr</scope><name>toCSL</name></member>
      <member refid="classsgl_1_1AbstractGammaSym_1a2be842099a79d1c07130664367ed9d91" prot="public" virt="virtual"><scope>sgl::CSLExpr</scope><name>~AbstractGammaSym</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
