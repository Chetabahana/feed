<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classdrawer_1_1Energy" kind="class" language="C++" prot="public">
    <compoundname>drawer::Energy</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdrawer_1_1Energy_1ab3917a653b5d8e7bea179cbd7e72e552" prot="private" static="no" mutable="no">
        <type>const double *</type>
        <definition>const double * drawer::Energy::factor</definition>
        <argsstring></argsstring>
        <name>factor</name>
        <qualifiedname>drawer::Energy::factor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="350" column="18" bodyfile="src/grafed/core/planargraph.h" bodystart="350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Energy_1a27e34137b1c1c10bc5e8f27ec6ff053f" prot="private" static="no" mutable="no">
        <type>std::function&lt; double(<ref refid="classdrawer_1_1Graph" kindref="compound">Graph</ref> const &amp;g)&gt;</type>
        <definition>std::function&lt; double(Graph const &amp;g)&gt; drawer::Energy::func</definition>
        <argsstring></argsstring>
        <name>func</name>
        <qualifiedname>drawer::Energy::func</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="352" column="19" bodyfile="src/grafed/core/planargraph.h" bodystart="352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Energy_1a774eab16edddea7add3a250cafe8c83a" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string drawer::Energy::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <qualifiedname>drawer::Energy::name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="354" column="17" bodyfile="src/grafed/core/planargraph.h" bodystart="354" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classdrawer_1_1Energy_1a0e783ba092a1472b673463c1da849b36" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>drawer::Energy::Energy</definition>
        <argsstring>(double const &amp;t_factor, std::function&lt; double(Graph const &amp;g)&gt; const &amp;t_func, std::string const &amp;t_name=&quot;Energy&quot;)</argsstring>
        <name>Energy</name>
        <qualifiedname>drawer::Energy::Energy</qualifiedname>
        <param>
          <type>double const &amp;</type>
          <declname>t_factor</declname>
        </param>
        <param>
          <type>std::function&lt; double(<ref refid="classdrawer_1_1Graph" kindref="compound">Graph</ref> const &amp;g)&gt; const &amp;</type>
          <declname>t_func</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>t_name</declname>
          <defval>&quot;Energy&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="357" column="5" bodyfile="src/grafed/core/planargraph.h" bodystart="357" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Energy_1a8f9fa0b0b72f2316941400fdb2c2f372" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double drawer::Energy::compute</definition>
        <argsstring>(Graph const &amp;g, bool verbose=false) const</argsstring>
        <name>compute</name>
        <qualifiedname>drawer::Energy::compute</qualifiedname>
        <param>
          <type><ref refid="classdrawer_1_1Graph" kindref="compound">Graph</ref> const &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="364" column="12" bodyfile="src/grafed/core/planargraph.h" bodystart="364" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Energy_1a0e783ba092a1472b673463c1da849b36" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>drawer::Energy::Energy</definition>
        <argsstring>(double const &amp;t_factor, std::function&lt; double(Graph const &amp;g)&gt; const &amp;t_func, std::string const &amp;t_name=&quot;Energy&quot;)</argsstring>
        <name>Energy</name>
        <qualifiedname>drawer::Energy::Energy</qualifiedname>
        <param>
          <type>double const &amp;</type>
          <declname>t_factor</declname>
        </param>
        <param>
          <type>std::function&lt; double(<ref refid="classdrawer_1_1Graph" kindref="compound">Graph</ref> const &amp;g)&gt; const &amp;</type>
          <declname>t_func</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>t_name</declname>
          <defval>&quot;Energy&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="357" column="5" bodyfile="src/grafed/gui/planargraph.h" bodystart="357" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Energy_1a8f9fa0b0b72f2316941400fdb2c2f372" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double drawer::Energy::compute</definition>
        <argsstring>(Graph const &amp;g, bool verbose=false) const</argsstring>
        <name>compute</name>
        <qualifiedname>drawer::Energy::compute</qualifiedname>
        <param>
          <type><ref refid="classdrawer_1_1Graph" kindref="compound">Graph</ref> const &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="364" column="12" bodyfile="src/grafed/gui/planargraph.h" bodystart="364" bodyend="373"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/grafed/core/planargraph.h" line="347" column="1" bodyfile="src/grafed/gui/planargraph.h" bodystart="347" bodyend="374"/>
    <listofallmembers>
      <member refid="classdrawer_1_1Energy_1a8f9fa0b0b72f2316941400fdb2c2f372" prot="public" virt="non-virtual"><scope>drawer::Energy</scope><name>compute</name></member>
      <member refid="classdrawer_1_1Energy_1a8f9fa0b0b72f2316941400fdb2c2f372" prot="public" virt="non-virtual"><scope>drawer::Energy</scope><name>compute</name></member>
      <member refid="classdrawer_1_1Energy_1a0e783ba092a1472b673463c1da849b36" prot="public" virt="non-virtual"><scope>drawer::Energy</scope><name>Energy</name></member>
      <member refid="classdrawer_1_1Energy_1a0e783ba092a1472b673463c1da849b36" prot="public" virt="non-virtual"><scope>drawer::Energy</scope><name>Energy</name></member>
      <member refid="classdrawer_1_1Energy_1ab3917a653b5d8e7bea179cbd7e72e552" prot="private" virt="non-virtual"><scope>drawer::Energy</scope><name>factor</name></member>
      <member refid="classdrawer_1_1Energy_1a27e34137b1c1c10bc5e8f27ec6ff053f" prot="private" virt="non-virtual"><scope>drawer::Energy</scope><name>func</name></member>
      <member refid="classdrawer_1_1Energy_1a774eab16edddea7add3a250cafe8c83a" prot="private" virt="non-virtual"><scope>drawer::Energy</scope><name>name</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
