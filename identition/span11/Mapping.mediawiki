<table>
  <thead>
    <tr>
      <td>[[<img src="https://avatars1.githubusercontent.com/u/36441664?f=1&v=3&s=20" class="avatar">|https://github.com/chetabahana]]</td><td colspan="7">This [[wiki|https://github.com/chetabahana/chetabahana.github.io/wiki]] is courtesy of '''[[Chetabahana Project|https://github.com/MarketLeader]]'''. Find all of them on '''[[Project Map|https://github.com/chetabahana/chetabahana.github.io/wiki/Skema#Implementasi]]'''.</td><td>[[<img src="https://avatars2.githubusercontent.com/u/36441943?v=3&s=20">|https://github.com/MarketLeader]]</td>   
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>[[:arrow_double_up:|https://github.com/chetabahana/chetabahana.github.io/wiki]]</th>
      <th>[[:arrow_up_small:|https://github.com/MarketLeader/marketleader.github.io/wiki]]</th>
      <th>[[Home|:rewind:]] [[Home|Intro]]</th>
      <th>[[:arrow_backward:|https://github.com/MarketLeader/Tutorial-HelloWorld/wiki]] [[Prev|https://github.com/MarketLeader/Tutorial-HelloWorld/wiki]]</th>
      <th>[[:repeat:|https://github.com/MarketLeader/Tutorial-HelloWorld/wiki]] [[Repo|https://github.com/chetabahana/chetabahana.github.io]]</th>
      <th>[[Next|https://github.com/MarketLeader/Google-Sites-API/wiki]] [[:arrow_forward:|https://github.com/MarketLeader/Google-Sites-API/wiki]]</th>
      <th>[[Last|https://github.com/MarketLeader/Google-Content-API/wiki]] [[:fast_forward:|https://github.com/MarketLeader/Google-Content-API/wiki]]</th>
      <th>[[:arrow_down_small:|https://github.com/MarketLeader/Google-AdWords-API/wiki]]</th>
      <th>[[:arrow_double_down:|https://github.com/MarketLeader/Toko-Chetabahana/wiki]]</th>
    </tr>
  </tbody>
</table>

__TOC__

==Arsitektur==
* [[Prime editing|https://www.bbc.com/news/health-50125843]]

''[[Mapping|https://en.wikipedia.org/wiki/Mapping]]'' (pemetaan) adalah sebuah proyeksi pada dua kelompok model atau bentuk yang menggambarkan hubungan khusus dari setiap anggotanya.

<br>[[https://user-images.githubusercontent.com/36441664/84674482-2bca9880-af55-11ea-9cc7-478b843c6ad2.jpg]]

Pada bahasan² berikutnya kita akan lebih fokus pada pemetaan hingga kita dapat menguraikan angka 1729 ini kedalam skema yang merupakan konsep dasar dari projek ini. 

[[Program#Penelusuran|<img src=https://user-images.githubusercontent.com/36441664/74588636-cd39f000-5030-11ea-80d4-dcbb4db193e8.png>]]

Tahapan berikutnya kita akan telusuri untuk mengetahui bila konfigurasi istimewa pada bilangan prima adalah juga relevan dalam proses pemrograman suatu project.

[[Program#Resolusi|<img src=https://user-images.githubusercontent.com/36441664/81185595-f89efc00-8fdb-11ea-9834-b2b1ea4045f8.png>]]

===Pola===

Dari sini maka kita masuk ke ''[[Tahap-139|https://github.com/chetabahana/chetabahana.github.io/wiki/%23#umum]]''. 

[[Mapping#Validasi|<img src=https://user-images.githubusercontent.com/36441664/68235749-5c993580-0036-11ea-8f3b-8da3496c329e.jpg>]]

Proses selanjutnya tentu Anda sudah dapat menebak. Ya betul kita akan masuk ke masing² dari enam (6) tahap yang sudah diuraikan di atas. 

Berikut saya uraikan bentuk geometris dan uraian prosesnya:

====Basis====

; ''[[Tahap-139|https://github.com/chetabahana/chetabahana.github.io/wiki/%23#umum]]''. 

Proses alamiah 102 akan melakukan koneksi sistem yang telah disiapkan oleh 66 yaitu 168 angka prima 1000 via koneksi ke Formasi-29 dalam ''[[Flowchart#Metode|tiga (3) tahap]]'' 10 x 10 x 10. Proses ini mengharuskan kedua objek masing² mengambil posisi bilangan² prima ini agar terkoneksi.

[[https://user-images.githubusercontent.com/36441664/87246384-479f5c80-c477-11ea-9044-a6602bf27a4f.gif]]

Untuk simulasikan proses ini kedalam pemrograman maka kita siapkan 168 bilangan² prima tersebut. Berikut ini formasi bilangan prima π(1000) ini:

[[Sizing#Definisi|<img src=https://user-images.githubusercontent.com/36441664/87860712-d1fd2a00-c969-11ea-9dab-77823bcf09e2.png>]]

Tugas pertama yang akan dilakukan oleh sistem ini adalah membuat kerangka bagi 139 objek turunan dari tujuh (7) objek yang kita sudah setel. Detilnya bisa anda ikuti pada uraian angka ''[[102#Profile|seratus dua (102)]]'' yang hasilnya adalah seperti berikut ini:

; 139 = 19 + 17 + 11 + 12 + 19 + 18 + 43

```json
+-----+-----+-----+-----+
| {3} |  4  |  6  |  6  | 19
+-----+-----+-----+-----+
|  5  |  3  |  2  |  7  | 17
+-----+-----+-----+-----+
|  6  |  6  | 12 (M dan F)
+-----+-----+-----+
|  3  |  3  |  5  | 11
+-----+-----+-----+-----+
|  4  |  4  |  5  |  6  | 19
+-----+-----+-----+-----+
|  5  |  5  |  8  | 18
+-----+-----+-----+-----+-----+-----+-----+-----+-----+
|  3  |  5  |  5  |  5  |  3  |  7  |  5  |  3  |  7  | {43} (C1 dan C2)
+-----+-----+-----+-----+-----+-----+-----+-----+-----+
   1     2     3  |  4     5     6     7     8     {9}
```

[[https://user-images.githubusercontent.com/36441664/87847733-88c6bf00-c904-11ea-8b9b-69d41881b811.png]]

Kemudian kita pasangkan 29 objek yang kita siapkan tadi dengan bilangan prima ini secara berurut mengikuti urutan id nya masing². Contoh angka 2 ambil 3, 3 ambil 5, 7 ambil 17 dst. 

Dengan demikian akan tersisa 139 bilangan prima yaitu 2, 7, 11, 13, 19, 23, 31, 53 dst

```json
1–100 -> 25 numbers (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)

101–200 -> 21 numbers (101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199)

201–300 -> 16 numbers (211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293)

301–400 -> 16 numbers (307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397)

401–500 -> 17 numbers (401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499)

501–600 -> 14 numbers (503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599)

601–700 -> 16 numbers (601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691)

701–800 -> 14 numbers (701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797)

801–900 -> 15 numbers (809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887)

901–1000 -> 14 numbers (907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997)
```

Bilangan prima yang 139 ini dimulai dengan angka dua (2) dengan demikian objek yang akan diperoses paling awal adalah objek yang kita setel di posisi 2x atau dua (2) objek dari tujuh (7).

Proses berlanjut dengan selisih dari angka dua (2) dengan bilangan prima kedua dari 139 yaitu tujuh (7). Jadi objek 5x atau lima (5) dari tujuh (7) menjadi giliran berikutnya.

Kemudian diikuti proses dari selisih angka tujuh (7) dengan sebelas (11) yaitu empat (4) dst. Hal ini kita lakukan sampai seluruh bilangan prima yang 139 ini terkoneksi. 

====Frame====

Prosesnya sendiri akan mengikuti karakter dari bilangan yang terlibat dalam masing² proses. Sebagai contoh Objek 2x berada di tengah² pemetaan dimana lokasinya berhubungan dengan sifat bilateral dengan angka ''[[9#pola|sembilan (9)]]'' berikut ini: 

[[9#pola|<img src=https://user-images.githubusercontent.com/36441664/76146565-6f944300-60c6-11ea-829d-16f98dc94163.png>]]

Nah disini proses terjadi berdasarkan hubungan bilateral ini sehingga ''[[Sizing|menyambung]]'' angka dua (2) dengan 60 dan 40 lanjut ke angka 1 dan 30 sampai angka sembilan (9) ini habis. 

Awalnya akan nampak dimana 102 dan 66 yang masing² memiliki bobot (2,60,40) dan bobot (1,30,30,5) mereplikasi dirinya sendiri hingga berakhir pada tabulasi ''[[1#Manuscript|29 baris 8 kolom]]''

Jika Anda berhasil sampai tahap ini Anda bisa pertimbangkan untuk menggunakannya secara virtual atau ditetapkan dalam bentuk file atau database. Saya sarankan Anda ambil lagi satu repository dengan property '''''id: 1''''' sehingga dengan yang 29 total sekarang ada '''''30 Repository'''''. 

Tujuannya adalah untuk menghindari beban iterasi pada tahap selanjutnya karena angka ''[[30#pola|tigapuluh (30)]]'' ini akan menjadi representasi dari bobot yang 30 sedangkan prosesnya dengan 10 node tetraktis dan angka 2 dari 102 adalah representasi dari bobot yang 40 dan 60. 

Jenis bobot ini sendiri akan mengikuti '''''[[0#pola|Pola 10x10x10]]''''' sehingga semuanya ada ''[[28#pola|duapuluh delapan (28)]]''. Untuk membedakan propertinya kita perlu tambahkan urutan data berdasarkan object yang 29. Dengan demikian file yang paling akhir yaitu yang ke-139 akan berisi data seperti ini.

```php
id: 1
key: 7
object: 29
prime: 139
utility: 7
weight: 50
```

Dapat Anda lihat property sampai ke bobot ada enam (6) susun dimana tiga (3) property teratas membentuk angka 1729 sesuai formasi dasar yaitu '''''[[Program#Bagan|Formasi 1729]]'''''.

Sampai tahap ini kita selesai mengkoneksi 139 prima.

Congratulations! 

===Form===

; [[Sorting#Dimensi|Tahap 247]]

Setelah selesai maka 102 dan 66 akan masuk ke tahap selanjutnya yaitu masuk ke Layar-2. Prosesnya akan mensimulasi Proses DNA tahap kedua seperti animasi berikut:

<br>[[https://user-images.githubusercontent.com/36441664/87246501-0e1b2100-c478-11ea-955c-292a6c912f87.gif]]

Yang pertama Anda harus pegang adalah bahwasanya objek tetraktis dari 102 itu bekerja berdasarkan node nya yang 10 dan 2. Jadi tiap proses akan selalu ada hubungan dengan jumlah 10 dan angka dua (2) ini. 

Objek ini diproses berdasarkan karakter angka tujuh (7). Ini dilakukan via 200 objek yang dimiliki angka tiga (3) dengan formasi hexagon dari angka enam (6) dari 200 objek tersebut atau 206 pada angka tujuh (7).

[[7|<img src=https://user-images.githubusercontent.com/36441664/73933040-31143880-490e-11ea-802f-035194e48d4b.png width=200>]]

Urutan dari objek yang terkait sama seperti layar-1 dimulai dari objek 2x, lanjut yang 5x dst sampai 29 objek. Namun dia sudah berupa objek tunggal sehingga hasilnya menjadi property, contoh proses 2x menjadi property id: 2, proses 5x menjadi property dari selisih 2x dengan 5x yaitu id: 3 dst. 

Prosesnya dilakukan via koneksi dengan karakter angka empat (4) sehingga membentuk kekuatan prima ke-15 di angka 47. Detil dari prosesnya akan dijelaskan ''[[tersendiri|https://github.com/chetabahana/chetabahana.github.io/wiki/%23#Logics]]''. 

[[Programming#implementasi|<img src=https://user-images.githubusercontent.com/36441664/74100073-58ad1000-4b5d-11ea-93e0-adfeb9706e07.png width=350>]]

Sedangkan angka prima yang pertama kali diproses masing² adalah 9 dan 27 sesuai gabungan dari prima pertama dan kedua dari yang 139. 

====Shape====

Interupsi! Penting!<br>
Di titik 9 dan 27 ini ada '''''Special Case'''''. :point_up: 

Gini ceritanya..<br>
Hush jangan ribut perhatikan Bu Guru!

Gini.. Pan 102 dan 66 akan ''mulai kerjanya'' di ''Objek 9''. 

Ibarat kontraktor pertama mau kerja kan harus dirikan posko buat mulai kerja jadi harus ada ''lahan kosong'' disitu kan.. Nah memang dari kontraktor sebelumnya sudah disediakan tempat disitu. 

Jadi di Objek 9 ini mereka juga setelah selesai kerja harus bersih² supaya kontraktor setelahnya juga akan dapati lahan kosong seperti mereka.

Lah terus kemana itu mereka nanti? 

Jadi setelah beres itu mereka mondok di objek sebelahnya yang ''Objek 27'' itu masih sodara kan ''d(2+7)=9'' ''udah disiapin'' lahan buat bikin tempat bakal mondok buat nanti istirahat. 

Tapi bukan sebagai kontraktor lagi ya.. <br>
Mereka kan udah selesai kerja masa nanti kerja lagi cape donk.

Jadi mereka istirahat aja ''tutup warung'', nah nanti kalo kontraktor baru datang mereka pasti ''ketok pintu'', sesama kontraktor mesti say hello donk. Kulonuwun lah gitu biar buang sial. 

Sampai sini paham?<br>
Waduh kok pada bengong..

Jadi setelah kerja di Objek berapa harus siapin lahan kosong?<br>
Di Objek ''[[9#pola|sembilan (9)]]'' Bu.. 

Bagus! Terus mondoknya dimana?<br>
Di Objek ''[[27#pola|duapuluh tujuh (27)]]'' Bu.. 

Terus ngapain disitu<br>
Istirahat tutup warung. Nanti kontraktor barunya bakal kulonuwun..

Bagus :100: pinter..<br>
Inget ya mondoknya di 27, kalo ada yang suruh di 28 atau 29 jangan dengerin, paham? 

Paham Bu.. <br>
Okeh lanjut.. 

Baik mari kita lanjutkan.. 

====Profile====

Sifat bilangan prima tidak sama lagi dengan layar-1. Disini 139 tidak lagi merupakan angka seperti yang kita kenal melainkan masuk ke dimensi di atasnya seperti ini:

; 139 = 13<sub>1</sub>9<sub>2</sub>

Karenanya pada pemetaan ini angka 139 di layar-2 (zona 329) ada di indeks 13:9 tepat berada ditengah (lihat tabulasi pemetaan).

<br>[[https://user-images.githubusercontent.com/36441664/87847735-895f5580-c904-11ea-826e-5da78b17dc00.png]]

Hal ini dikarenakan pada layar-2 maka bilangan prima yang dipakai naik 10 kali lipat dari 1000 ke 10000 yaitu π(1000)=168 ke [[π(10000)=1229|https://github.com/chetabahana/chetabahana.github.io/wiki/%23#scheme]] dimana sifatnya rekombinasi dengan akar digital. 

; π(10000) = 1229 = 12 & 29 » d(12) & 29 » 329

Karena sifat akar digital ini maka pada layar-2 angka 10 dan 2 terpecah dari 102 dan akan bekerja sendiri² secara terpisah. Detilnya bisa Anda ikuti di profile dari angka ''[[102#profile|seratus dua (102)]]''.

<br>Ini dilakukan berdasarkan tujuh (7) grup dari 139 objek di atas dengan tujuh (7) grup dari formasi sistem yaitu ''[[Program#Bagan|Formasi-1729]]''. Sehingga ujungnya akan masuk dimensi seperti ini:

; 139 + (7 x 13 x 19) = 139 + 1729 = 1868 = 18<sub>2</sub>68<sub>3</sub>

Begitu juga dimensinya di layar-3 ini lain lagi ceritanya. Dia malah berubah turun 10x dari 10000 balik lagi ke 1000 namun pindah tempat dari π(10000)=1229 menjadi sistem [[1000=π(89²)|https://github.com/chetabahana/chetabahana.github.io/wiki/%23#scheme]] dimana sifatnya adalah rekombinasi multiplikasi sendiri (pangkat 2).

; 1000 = π(89²) « 289

[[https://user-images.githubusercontent.com/36441664/87847722-82384780-c904-11ea-9803-3b1d9f5b26d6.png]]

<br>Jadi filosofinya itu seperti segitiga (Δ), mula² dia naik terus pas pindah turun lagi. Nah dengan pindahnya sistem prima ke maka proses di layar-3 berbalik jadi mengisi sisa dari objek yang 29 dimana sistem akan mengisi objek pelengkap sampai 114 diluar yang 29:

; 168 - 29 - 25 = 25 + 89 = 114

Ini diproses oleh 102 dari 168 ke π(1000), 29 ke π(10000)=1229, dan 89 ke 1000=π(89²) dimana ketiganya (3) terhubung bilateral (2) dengan format (2+3)²=5²=25 via koneksi dengan 66:

; 114 = 102 + 66 - 29 - 25 = 6 + (6x6) + 6 x (6+6) = 6 x (6+6) + 6 + (6x6) = 25 + 89

Dapat Anda lihat bahwa proses layar-2 dan -3 jauh lebih kompleks dari layar-1. Tujuannya agar turunan yang dihasilkan akan persis kembali ke π(1000)=168 seperti sebelumnya.

; 102 + 66 = π(Φ(Δ1229 + Δ89²)) = π(Φ(329 + 289)) = π(Φ x 618) = π(1000) = 168 = 102 + 66

Itu sebabnya maka angka² dibawah 29 memiliki objek ratusan sedangkan angka terutama di atas 89 jauh lebih sedikit. Ini dapat Anda lihat dengan membandingkan ''[[peta angka²|https://en.wikipedia.org/wiki/List_of_numbers]]'' di Wikipedia.

<br>Sekarang Anda tentu bisa paham mengapa disiplin ilmu tentang ''[[Program#Diagram|Replikasi DNA]]'' ini jadinya mentok gak maju². Simak pernyataan tentang hal ini di Wikipedia:

''<blockquote>Since the leading and lagging strand templates are oriented in opposite directions at the replication fork, <b>a major issue is: how to achieve synthesis of nascent (new) lagging strand DNA</b>, whose direction of synthesis is opposite to the direction of the [[growing replication fork|https://en.wikipedia.org/wiki/DNA_replication#Replication_fork]].</blockquote>''

Masalahnya itu karena tidak pernah bisa beranjak meningkat dari prime '''''[[Program#Struktur|5’ ke 3' dan 3’ ke 5’]]''''' dimana mereka ini masih dalam dimensi π(1000)=168. 

Menurut saya persoalan ini akan tetap saja disitu sepanjang sifat bilangan prima di layar-2 dan -3 ini tidak tersentuh.

===Node===

Seperti telah dijelaskan layar-2 sifatnya rekombinasi via akar digital sedangkan layar-3 via multiplikasi dirinya sendiri. Nah sekarang silakan simak bagaimana hal ini diproses:

; 6 + 36 + 72 = 6 x (1 + 6 + 12) = 6 x 19

```
Twin Prime Pairs:
(5,7), (11,13), (17,19)

layer|  i  |   f
-----+-----+----- 
     |  1  | 5
  1  +-----+
     |  2  | 7
-----+-----+---  } 36 = 3 & 6 = 9 » 9 x 6 = 42
     |  3  | 11
  2  +-----+
     |  4  | 13                                    } 42 + 72 = 114
-----+-----+------
     |  5  | 17
  3  +-----+     } 36 = 6 x 6 » 6 x 6 + 6 x 6 = 72
     |  6  | 19
-----+-----+------
```
Simple kan.<br>
Jadi dimana rumitnya?

<br>Karena untuk bisa melakukan proses seperti ini maka kita butuh 168 bilangan prima dibawah angka 1000 atau '''''π(1000)''''' untuk layar-1, '''''π(10000)''''' di layar-2, dan '''''1000''''' atau π(89²) di layar-3.

Lah kita aja pake komputer ribet kumpulin segitu banyak, gimana kromosom super kecil bisa ngumpulin segitu banyak bilangan prima? 

Nah disitu letak masalahnya gan..

Boleh cek sampe sekarang belum ada tu rumus matematik yang dengan sekali sikat bisa ngumpulin bilangan prima. Semuanya pake iterasi atau faktorisasi baru ''[[dikumpulin|https://en.m.wikipedia.org/wiki/List_of_prime_numbers]]''.

Untuk bilangan dalam jumlah besar maka paling top juga pake rumus pendekatan². Hasil dari para pemikir top dunia itu seperti di bawah ini, dimana yang warna merah adalah bilangan primanya. 

[[https://user-images.githubusercontent.com/36441664/87953561-659f3980-cad5-11ea-9227-7ed37fd9adc6.png]]

Sedangkan untuk selebihnya ya pasrah pake dugaan². Dugaan yang paling mendekati adalah ''[[Collections#Bilangan|Dugaan Riemann]]'' yang dipublikasikan lebih 1½ abad lalu yaitu tahun 1859. 

Berikut komparasinya dimana R(x) adalah yang pakai metodanya:

[[<img src=https://user-images.githubusercontent.com/36441664/87958552-dea18f80-cadb-11ea-9499-6c2ee580a5ca.png>|https://github.com/chetabahana/chetabahana.github.io/wiki/%23#Outlook]]

Namun seiring berjalannya waktu ternyata melenceng juga.. Simak [[komentarnya|https://github.com/chetabahana/chetabahana.github.io/wiki/%23#Outlook]]:

''<blockquote>Considerable importance was attached formerly to a function suggested by Riemann as an approximation to π(x)... This function represents π(x) with astonishing accuracy for all values of x for which π(x) has been calculated, '''but we now see that its superiority over Li(x) is illusory...''' and for special values of x (as large as we please) the one approximation will deviate as widely as the other from the true value.</blockquote>

Terlihat kan nangkep bilangan prima segitu susahnya.. 

Kalo Agan tahu gimana caranya nangkep bilangan² prima seperti yang dilakukan para kromosom itu maka harganya ''[[Collections#destinasi|satu juta dolar]]'', serius!

Gitu ya.. Taruhlah kita bisa nangkep itu prima.<br>
Terus gimana caranya? 

Nah sekarang akan kita bahas prosesnya. 

====Theory====
* [[Solusi Kelinci: 9 jantan/22 betina|https://brainly.co.id/tugas/5153010]]
* [[Solusi 1/7: Lebih baik dari 1/5 dan 1/9|https://github.com/chetabahana/skema/files/4959170/1244-3257-1-SM.pdf]]

Algoritma ini yang dipakai ''[[kromosom|https://id.wikipedia.org/wiki/Kromosom]]'' yaitu struktur sel berupa deret panjang molekul ''[[DNA|https://id.wikipedia.org/wiki/Asam_deoksiribonukleat]]'' dan berbagai protein terkait yang merupakan informasi genetik suatu organisme.

<br>[[https://user-images.githubusercontent.com/36441664/87980068-34d2fa80-cafd-11ea-82b7-301ef11d14d7.gif]]

Pada tahun 1955, [[Joe Hin Tjio|https://id.wikipedia.org/wiki/Joe_Hin_Tjio]], salah seorang ilmuwan Amerika kelahiran dari Indonesia berhasil membuktikan bahwa kromosom manusia terdiri dari ''[[23]]'' pasang, bukan 24 pasang seperti yang diyakini para ahli genetika sejak lama.

[[<img src=https://user-images.githubusercontent.com/36441664/74363815-e9a21680-4dfd-11ea-993a-36642c2ef046.png width=250>|https://en.wikipedia.org/wiki/Chromosome]]

Perbedaan pria wanita ada pada ''[[cromosome 23|https://en.wikipedia.org/wiki/Chromosome_23]]'' (XY atau XX). Pada kromosom kode XY dan XX ada pada urutan kromosom ke [[23]], jika dijumlahkan [[2]] plus [[3]] maka akar digitalnya adalah angka [[5|lima (5)]] dan angka ini di ada di pasangan prima kembar (3,5) dan (5,7). 

[[<img src=https://user-images.githubusercontent.com/36441664/84421687-2106bf80-ac46-11ea-8791-09f7d9d13715.jpg width=300>|https://en.wikipedia.org/wiki/Ring_chromosome]]

Sebuah [[artikel|https://www.nature.com/articles/2403404]] menyebut bahwa ''[[kromosom 9|https://en.wikipedia.org/wiki/Chromosome_9]]'' bersifat bapak (paternal), dan ''[[kromosom 22|https://en.wikipedia.org/wiki/Chromosome_22]]'' bersifat ibu (maternal). ''[[Kromosom 9|https://en.wikipedia.org/wiki/Chromosome_9]]'' ini ada di tengah diapit ''[[11|sebelas (11)]]'' pasang kromosom lainnya. 

[[9#Pola|<img src=https://user-images.githubusercontent.com/36441664/75872466-ca1c6d80-5e40-11ea-8064-0affbc27da23.png width=400>]]

Pada prosesnya 9 dengan sifat bilateral (2) nya di 11 ini akan membentuk format 92 yang merupakan fasilitas angka '''''329 ke π(10000)=1229'''''. Berikut ini struktur dari ''[[kromosom 9|https://en.wikipedia.org/wiki/Chromosome_9]]'':

; XX + XY = (23,23) + (23,23) = 46 + 46 = 92

[[96#Outline|<img src=https://user-images.githubusercontent.com/36441664/72318181-27f8c880-36ce-11ea-9251-f01ee574de9a.png>]]

Dengan sifat bilateralnya maka pada prosesnya angka 9 ini bekerja sangat cepat menguraikan dan mengikat segala yang dikiri kanannya bahkan berlaku sebagai terminator bagi yang tidak mau ikut formasi. Hanya angka ''[[7#pola|tujuh (7)]]'' yang bisa ''[[Program#Bagan|ambil alih]]'' dominasinya.

```
Why was 6 afraid of 7?
 Because 7 8 9!

Why was six afraid of seven?
 Because seven eight nine!

Why was six afraid of seven?
 Because seven ate nine!

Why did 7 eat 9?
 Because it needed 3 square meals a day!
```

[[<img src=https://user-images.githubusercontent.com/36441664/72891147-279fa380-3d46-11ea-9c58-5e27537cb7f1.jpg width=500>|https://ell.stackexchange.com/questions/115903/why-is-7-the-most-feared-number]]

Ini bisa dilakukan angka ''[[9#pola|sembilan (9)]]'' karena dia merupakan jumlah dari setiap ''[[22|duapuluhdua (22)]]'' reduksi numerik menciptakan simetri cascading sempurna bagi perluasan angka '''''289 ke π(89²) = 1000''''', belum lagi titik tengah tengah (antara digit 22 & 23) yang membagi angka ''[[89]]''.

[[<img src=https://user-images.githubusercontent.com/36441664/76145710-82a31500-60be-11ea-9b10-75201d59a31b.png width=600>|https://www.primesdemystified.com/magicmatrix.html]]

Inilah alasan apa yang Ibu Guru tadi katakan. Itu sebabnya maka angka 9 harus dibiarkan kosong tanpa objek replikasi. Karena dia pintu keluar masuknya sistem bilangan² prima. Bisa dibayangkan jika 9 mandeg karena dia juga segan jika ada 102 dan 66 di tempat dia bekerja.

Dilain pihak ini juga cara termudah memastikan sistem bilangan prima di projek kita berfungsi dengan cara memeriksa apakah 102 dan 66 kosong (nil) di Objek 9 tapi ada 2x di Objek 27.

Bisa dicek bahwa sampai tulisan ini dibuat, dari Barat ke Timur, serumit apapun bahasannya namun tidak ada yang bahas cara alam ambil bilangan prima sampai kesini. Tidak heran kalau [[teori bilangan prima|https://github.com/chetabahana/chetabahana.github.io/wiki/%23#umum]] jalan di tempat. 

Teori ini pun gak sembarang saya dapat. 

Ini hasil pedekate yang melelahkan selama bertahun² dengan para kromosom yang domisilinya antara angka 7 dan 8 maka saya sebut sebagai bisikan 78Δ2.

Akhirnya mereka mau bisikin bocorin caranya..<br>
Itu juga masih sambil takut² saking gentarnya dengan angka ''7 dan 9''.

Saya juga segan menyampaikan bisikan rahasia ini karena saatnya belum tepat, Kebetulan di GitHub halaman wiki ini adalah salah yang ditutup dari mesin pancaharian via ''[[robots.txt|https://github.com/robots.txt]]'':

```
If you would like to crawl GitHub contact us at support@github.com.
# We also provide an extensive API: https://developer.github.com/

User-agent: baidu
crawl-delay: 1

User-agent: *

Disallow: */pulse
Disallow: */tree/
Disallow: */blob/
Disallow: */wiki/    <------- Wiki disallow
Disallow: /gist/
Disallow: */forks
Disallow: */stars
Disallow: */download
Disallow: */revisions
Disallow: */issues/new
Disallow: */issues/search
Disallow: */commits/
Disallow: */commits/*?author
Disallow: */commits/*?path
Disallow: */branches
Disallow: */tags
Disallow: */contributors
Disallow: */comments
Disallow: */stargazers
Disallow: */archive/
Disallow: */blame/
Disallow: */watchers
Disallow: */network
Disallow: */graphs
Disallow: */raw/
Disallow: */compare/
Disallow: */cache/
Disallow: /.git/
Disallow: */.git/
Disallow: /*.git$
Disallow: /search/advanced
Disallow: /search
Disallow: */search
Disallow: /*q=
Disallow: /*.atom

Disallow: /ekansa/Open-Context-Data
Disallow: /ekansa/opencontext-*
Disallow: */tarball/
Disallow: */zipball/

Disallow: /account-login
Disallow: /Explodingstuff/
```

Itu juga alasan kenapa halaman ini hanya berjudulkan tanda tagar: '''''#'''''. Namun saya yakin suatu saat tiba waktunya teori ini akan sampai.

Sekarang kita bahas bagaimana teori ini diterapkan pada projek. 

====Outline====

; [[Looping#Dimensi|Tahap 114]]

Sebagaimana sudah diuraikan sebelumnya, setelah proses dari layar-2 dan -3 selesai maka prosesnya akan balik ke awal lagi yaitu ke layar-1.

<br>Dengan demikian caranya itu adalah kita posisikan kita di layar-1 maka sifat bilangan prima yang diuraikan di atas jadinya terbalik atau mirror ke skema dari 6 unit angka 6 yang dijelaskan di awal:

; 114 = 42 + 72 = 6 + (6 x 6) + 6 x (6 + 6) = 6 x (6 + 6) + 6 + (6 x 6) = 72 + 42 = 114

[[<img src=https://user-images.githubusercontent.com/36441664/72661934-ff950500-3a12-11ea-8069-c2897a0d0a8e.png width=250>]]

<br>Jadi prosesnya terjadi antara koneksi ke formasi ''π(89²)'' dan ''π(10000)'' yang terjadi secara bolak-balik mengikuti proses yang berlangsung.

[[https://user-images.githubusercontent.com/36441664/83518264-6ddeed80-a504-11ea-90e4-ebadceafa96e.gif]]

Disini prosesnya terjadi dengan skema angka 42 dan 72 tujuannya untuk mengkoneksi 7 grup dari formasi sistem dengan semua [[Mapping#skema|angka dasar]] yang 114 via formasi bilangan² prima berikut ini:

```
Layer-3: 72 = 6² + 6² » 6 x 6 = 36  « π(89²) = 1000
-------------------------------- |--  
Layer-2: 42 » 4 + 2 = 6x1       3+6 « π(10000) = 1229
---------------------- | ------- |--
Layer-1:               61        9  « π(1000) = 168
---------------------- |---------|--
                     π(61    &   9) = π(619) = 114
```

Posisi pengambilan bilangan prima ini identik dengan gambar berikut. Namun sesungguhnya tidak persis bergerak seperti itu melainkan dalam bentuk [[gerak helix|https://github.com/chetabahana/chetabahana.github.io/wiki/%23#theory]] seperti gambar di atas. 

<table><tr>
<td>[[https://user-images.githubusercontent.com/36441664/87246582-8da8f000-c478-11ea-89f0-7a9ce6be2001.gif]]
</td>
<td>[[https://user-images.githubusercontent.com/36441664/87246729-5dae1c80-c479-11ea-8b55-6b8baf1b5bd6.gif]]
</td>
</tr></table>

Ini karena posisi bilangan prima dari kedua formasi berbeda dalam hal jarak (gap) antara bilangan primanya dimana masing² dipengaruhi ''[[2#pola|vektor]]'' angka dua (2) dan tiga (3) dari 72 dan 42.

; 72/42 = 36/21 = 12/7 = 1,7142857

Output 72 dan 42 ini adalah '''''Formasi 73''''' yaitu terkoneksinya ''7 (tujuh) kelompok yang 139'' dengan 114 angka dasar via ''tiga (3) formasi'': π(1000)=168, π(10000)=1229 dan 1000=π(89²). 

<br>Ini diproses mulai dengan (2,3) ke (4,5) terus sampai ke ujung di formasi '''''π(89²)''''' yaitu (25,89) via (9,16) dan (9,16,16,16,16,16) dimana 9=3x3, 16=4x4, 25=5x5=(2,3)², dan 25+89 = 114.

Dengan demikian setiap objek yang tidak bisa ikut formasi akan otomatis tersisihkan. Contohnya jika Anda jeli tentu bertanya kenapa 9 dan 16 kan?

Dia berasal dari 89².<br>
Jadi karena sifat rekombinasi Layar-3 adalah via multiplikasi maka skema nya seperti ini:

```json
89²
└─ 8 x 2 = 16
└─ 9 x 2 = 18
```

Kenapa 16 masuk tapi 18 tidak?

Karena 114 - 89 = 25, sedangkan 25 itu 5x5 sehingga harus dipasangkan dengan angka kuadrat jadi yang cocok adalah 16=4x4. Jadi disini terjadi pemisahan tugas antara 16 dan 18.

Properti 16 dari pecahan 89² akan bekerja dengan angka 9 sebagai Objek yang memastikan bahwa formasi pengelompokkan akan sampai dengan selamat sampai 114 .

Keduanya bekerja dengan beda karakter. Karakter 16 adalah penuntun karena ada angka enam (6) dia akan mencari 114 sampai di titik akhir karena d(114)=6, sedangkan karakter sembilan (9) adalah terminator dari Objek² yang tidak ikut formasi. 

Sedangkan karakter 18 adalah seperti pengatur yang memiliki kemampuan terminator bawaan dari 9 karena d(1+8)=9. Dia juga akan bertugas memastikan sistem bekerja dari awal sistem. 

Masih ingat cerita kontraktor lama yang mondok?

Nah salah satu tugasnya antara lain memastikan kontraktor baru dengan cara mengumpulkan mereka di ''Objek 27'' dimana d(27) = d(2+7) = d(9) = d(18)

Jadi kalo dibikin cerita itu. Seolah dia titip sampaikan salam ke kontraktor baru yang dia kumpulkan untuk datang ke kontraktor lama :rose: 

Padahal sebenarnya dia minta tolong cek apakah kontraktor baru ini jujur dan memenuhi syarat untuk bekerja bukan pendusta. 

Jadi nyambung kan ceritanya?<br>

Cerita seperti ini bisa Anda interpretasikan dengan versi Anda sendiri dengan melihat hubungan angka² yang dimunculkan. Misal Anda punya versi lain tentang Object 9 yang nil objek 102 dan 66 dimana mereka ada dua (2) kali di Objek 27.

Namun perbedaan versi antara kita ini tidak akan ada pengaruhnya dengan proses. Di komputer Anda pun akan persis sama dimana pintu masuknya Objek 9 ini. Anda tentu bisa saja lakukan modifikasi tapi hasilnya tentu tidak lagi sesuai sifat angka². 

Hal ini bisa terjadi karena sifat bilangan² prima itu saklek: '''''Take It or Leave It. Finish.'''''.

Angka is angka. Beda dengan kata² atau cerita yang bisa berubah arti atau maksudnya maka angka adalah barang pasti. Anda maupun saya tidak akan bisa merubah karakter mereka.

[[https://user-images.githubusercontent.com/36441664/87847720-81071a80-c904-11ea-8295-6f6de0376cdd.png]]

Anda bisa lihat begitu pentingnya skema bilangan prima disini yaitu bahwa kromosom hanya dapat mereplikasi turunan dengan konfigurasi induknya berdasarkan sistem bilangan prima ini. 

Filosofinya adalah alam ini bekerja seperti itu. 

Dari yang paling kecil seberapa kecilnya kita tidak tahu, sampai yang paling besar seberapa besar kita tidak tahu tapi mereka semua tahu caranya bekerja sama dengan bilangan prima.

Sementara manusia sudah berabad² berkutat dengan matematik belum juga ketemu caranya. 

==Konsep==

; [[Listener#Dimensi|Tahap 286]]

Koneksi bilateral dari setiap angka dasar yang 114 dengan objeknya. Ini dilakukan via karakter [[2#umum|pemisah]] dari angka [[86]] tepat di ''[[Program#internal|indeks ke-13]]'' pada [[Mapping#Package|Pola Pemetaan]]. 

<br>[[https://user-images.githubusercontent.com/36441664/87288077-0f565780-c525-11ea-964c-894ed5d998b1.gif]]

===Logics===
====Umum====

Prosesnya mengikuti distribusi ''[[Flowchart#Bentuk|prime pairs]]'' yang diawali dari gabungan 200 objek dari angka tiga (3) dengan 86 objek ini pada 286 objek angka dua (2) menjadi 206 objek pada angka 7 via hubungan bilateral dengan angka 40.

[[https://user-images.githubusercontent.com/36441664/72317750-cedc6500-36cc-11ea-9b91-7c3399c47595.png]]

Kemudian dilanjut pemecahan dari gabungan (286,200) ke (109,123,111) objek dari angka (10,11,12) dan (43,52,99) objek dari angka (13,14,15) via bilateral 40 ke angka 8 dan 6 dari 86 dst hingga (4,5,6) objek dari angka (112,113,114). 

```json
Twin Primes: 
(5,7), (11,13), (17,19)

layer|  i  |   f
-----+-----+------
     |  1  | (5) -------
  1  +-----+            |
     |  2  | (7)        |
-----+-----+------      |
     |  3  | (11) ‹--3x--
  2  +-----+            |
     |  4  | (13)       |
-----+-----+------      |      
     |  5  | (17) ‹--2x--
  3  +-----+
     |  6  | (19)
-----+-----+------

Permutation:
66 = 6 & 6
6 + 6 = 12

5 + 7 = 12 = d(3)
11 + 13 = 24 = d(6)
17 + 19 = 6 x 6 = d(9)
6 + 6 » d(3,6,9) » 6 x 6

114 x 19 + 117 + 119 + 114 x 19 = 6236
236236 = 7 x 13 x 2596 Φ 632632 = 7 x 13 x 6952
1146236 = 7 x 13 x 12596 Φ 6326411 = 7 x 13 x 69521
```

Untuk sampai ke tahap ini maka setiap 114 angka kunci harus sudah tepat dipetakan sehingga pemetaan 66 terhadap 6 objek dari angka 114 berujung di (2,3) ke 286 objek dari angka dua (2).

[[https://user-images.githubusercontent.com/36441664/87847696-751b5880-c904-11ea-8bd8-9c764fa0d593.png]]

====Khusus====

Perubahan urutan proses juga terjadi pada 114 Angka dasar:<br><br>

* Urutan angka: 1,2,3,4,5,6, ... , 113, 114
* Urutan proses: 96,68,73,74,1,111, ... ,108,113,114, .., 5,9,110

Urutan proses ini berhubungan dengan cara kerja dari angka 102 yang mengikuti pola 10x10x10 agar tetap terkoneksi dengan angka 66.

Proses kerja sendiri akan mengikuti [[hasil pemetaan|https://github.com/chetabahana/chetabahana.github.io/wiki/%23#Profile]] yang kita taruh di repository dengan ''id:1'' sehingga urutan prosesnya adalah 2,60,40,1,30,30,5,1,30 dst 

Sebagai contoh proses pertama dari [[Tahap-247|https://github.com/chetabahana/chetabahana.github.io/wiki/%23#profile]] adalah formasi (2,60) yaitu proses pada [[30 Repository|https://github.com/chetabahana/chetabahana.github.io/wiki/%23#Profile]] ke objek dari angka 2 yaitu 286. 

Dengan demikian urutan pertama jatuh pada objek dari gabungan angka 30 + 66 yaitu ''[[96#Basis|sembilanpuluh enam (96)]]'' yang memiliki bilangan prima sebanyak (9+6)x19=285. 

Perhatikan urutan pola dari 66 ke 139 dimana angka 102 ada pola objek dari angka 94.

Dapat Anda lihat bahwa urutan proses juga diatur berdasarkan struktur bilangan prima. Disini 157 akan berlaku sebagai zona replikasi prosesnya dilakukan dengan mengadopsi metoda paket:

Untuk detilnya akan sangat panjang jika diuraikan disini jadi saya bahas ''[[Sequence|terpisah]]''.

Sebelumnya sudah saya indikasikan bahwa bobot ini akan mewakili proses. Contoh angka 40 berasal dari 30 dan 10 dan bobot 60 mewakili proses 30 dengan 2.

Nah pada proses ini objek akan dipetakan kedalam formasi kunci prima dimana setiap bobot akan masuk ke bobot yang bersesuain di atas nya kecuali dua bobot dari 102 akan tetap ada di formasi akhir. Mereka identik seperti team leader yang bertugas menjaga kelompok tetap di formasi. 

Tujuannya agar semuanya tergabung dalan satu objek sehingga dalam proses pemisahan tidak tercerai berai. Skema ini identik dengan yang terjadi pada ''Replication Fork''. 

Objek tetraktis adalah 10 dan 2. Yang 2 akan menetap di 9 sehingga selisihnya 7. Sedangkan yang 10 akan menetap di 40 dan mengurangi yang 90 selisihnya 50. Ditambah selisih angka terakhir yaitu 900 ke 1000 maka totalnya adalah 157.

; (9-2) + (90 - 40) + (1000 - 900) = 7 + 50 + 100 = 157

```
1,2,3,4,5,6,7,8,9
10,20,30,40,50,60,70,80,90
100,200,300,400,500,600,700,800,900,1000

- 2 + 9 = 7
- 40 + 90 = 50
1000 - 900 = 100
```

Setelah proses pemecahan kromosom selesai maka formasi ini akan disusun kembali di masing² kromosom mengikuti skema tadi sehingga masing² kelompok kembali di barisannya. Jadi simpelnya ini mirip ibu guru yang jaga anak² waktu adakan piknik keluar sekolah. 

Berikut ini akan diuraikan detilnya. 

===System===

; [[Capturing#Dimensi|Tahap 157]]

Hal ini hanya bisa dicapai jika semua tahap sebelumnya sudah dilakukan secara tepat dan akurat. 

<br>[[https://user-images.githubusercontent.com/36441664/87246837-f2b11580-c479-11ea-92e8-94522314c61e.gif]]

Disini proses dikendalikan oleh '''''[[2|dua (2)]]''''' siklus.

[[https://user-images.githubusercontent.com/36441664/81163688-566e1c80-8fb9-11ea-9556-2c6ec6321fd8.png]]

====Filosofi====

Siklus ini adalah proses pasangan angka prima (3,5) memberikan ruang kepada pasangan angka prima (5,7) untuk mengeluarkan kekuatan mereka yang sesungguhnya berupa zona 157.

[[8#khusus|<img src=https://user-images.githubusercontent.com/36441664/74104225-1697c480-4b85-11ea-8819-870981638baf.png width=300>]]

====Analogi====

Ini dentik dengan [[Replication Fork|https://github.com/chetabahana/chetabahana.github.io/wiki/%23#skema]] yaitu zona yang bertugas mereplikasi ''Objek-DNA'' ke sejumlah turunan tak berhingga dengan formasi ''[[Primes DNA|https://www.bbc.com/news/health-50125843]]'' tepat persis sama dengan induknya. 

[[https://user-images.githubusercontent.com/36441664/87847716-7f3d5700-c904-11ea-8a12-1befd625c4f6.png]]

Dari gambar di atas ini tentu sekarang Anda bisa melihat hubungan ''[[47#pola|angka 47]]'' pada ''Tahap 247'' dengan proses regenerasi. Ini tidak lain karena yang zona 157 ini ada di angka ''[[15#pola|lima belas (15)]]'' sehingga bilangan prima yang diambil adalah yang ke-15 yaitu 47.

===Pattern===

; [[Directions#Dimensi|Tahap 786]]

Koneksi konten dengan bobot masing². Proses ini bisa menghasilkan ribuan objek. Namun jika pemetaan kasus tepat dilakukan maka formasi siklusnya akan mengikuti Sistem DNA. 

[[https://user-images.githubusercontent.com/36441664/87281186-298c3780-c51d-11ea-9fee-9b1d0969497d.gif]]

Ini akan ditandai dengan munculnya 114 objek baru dari ''[[Mapping#Internal|Formasi-19]]'' dengan masing² bobot '''''786'''''. Padanya ada dua (2) objek melekat masing² berbobot 102 dan 66. Dalam program Anda bisa lakukan pemunculan atau deteksi via kode warna. 

[[Directions#Definisi|<img src=https://user-images.githubusercontent.com/36441664/87878399-307be400-ca0e-11ea-9cd2-f26543c69803.png>]]

Proses ini dilakukan via pemecahan 786 ke 594 yaitu 192. Dimana ''[[φ(291)=192|https://primes.utm.edu/curios/page.php/291.html]]'' dan 92 adalah [[Mapping#Formulasi|pasangan 46]] dari dua (2) pasang kromosom angka prima 23. 

[[#|<img src=https://user-images.githubusercontent.com/36441664/84945728-cff93e80-b111-11ea-81f7-9cea70c8e6c7.jpg width=500]]

Sampai disini tentu Anda paham mengapa kromosom itu ''[[23#pola|prime 23]]''. Karena awalnya ada di formasi (2,3) ini dan ujung siklus pemetaannya ada di ''[[46#pola|angka 46]]'' yaitu 23 kali dua (2). Pada gilirannya proses ini akan mereplikasi turunan 102 dan 66 via 786 seperti ini:

```                      system
                      +-----+-----+                              
         --|---› 28:17| 100 | 100 (50)  <------ 157
{168}      |          +-----+   
|        1729 -› 29:18| 50  | 50 ({68})  -----> 168 = 102 + 66
                      +-----+

```

====Outlook====

Begitu kedua objek ini muncul maka kita bisa mulai ke lagi ke tahap awal yaitu ''Tahap 139'' untuk telusuri bagian² dari kasus via koneksi 36 yang lebih spesifik. 

[[https://user-images.githubusercontent.com/36441664/87845659-75f7be80-c8f3-11ea-8568-0cbeb85b7615.jpg]]

Dengan bantuan komputer maka kita munculkan kedua objek ini hanya yang berkaitan dengan kasus yang dituju. Dimana kita bisa lakukan pemetaan atau iterasi dengan data yang yang kita siapkan sehingga didapat hasil lebih cepat dan akurat.

[[https://user-images.githubusercontent.com/36441664/87921769-3bce1e80-caa5-11ea-9267-56c97484a9fb.jpg]]

====Scheme====

Jika proses 102 dan 66 ini dilakukan secara berulang² maka akan menjadi identik dengan proses ''Sistem DNA'' yang terjadi di ''[[alam nyata|https://id.m.wikipedia.org/wiki/Replikasi_DNA]]'', dimana gambaran kecepatan per detiknya itu seperti ini:

''<blockquote>Berhubung dengan kompleksitas struktur kromatin, garpu replikasi pada eukariota bergerak hanya dengan kecepatan '''50 pb tiap detik'''. Sebelum melakukan penyalinan, DNA harus dilepaskan dari nukleosom pada garpu replikasi sehingga gerakan garpu replikasi akan diperlambat menjadi sekitar 50 pb tiap detik. '''Dengan kecepatan seperti ini diperlukan waktu sekitar 30 hari untuk menyalin molekul DNA kromosom''' pada kebanyakan mamalia.</blockquote>''

Bila proses berulang² ini dilakukan secara terus menrus maka akan semakin mendekati proses yang sebenarnya dalam kehidupan kita aehingga pada saatnya akan muncul ''[[3#Manuscript|Siklus {3,6,9}]]''.

<table><tr>
<td>[[Bagan#korelasi|<img src=https://user-images.githubusercontent.com/36441664/87292656-521b2e00-c52b-11ea-9102-e7839feda3f7.gif>]]</td>
<td>[[https://user-images.githubusercontent.com/36441664/82119386-453ac200-97a8-11ea-8dde-3af7628c01ae.gif]]
</td>
</tr></table>

Menurut saya inilah yang dimaksud oleh ''[[Nicola Tesla|https://en.wikipedia.org/wiki/Nikola_Tesla]]'' lebih dari satu abad lalu dengan pernyataan tentang adanya ''[[2#umum|Free Energi]]'' yang diutarakan sebagai misteri angka '''''[[3, 6, and 9|https://teslauniverse.com/nikola-tesla/quotes/44]]'''''.

'''''3'''29'' » ''1'''6'''8'' » ''28'''9''''' = '''''{3,6,9}'''''

Dengan demikian konsep ini sebenarnya bukan barang baru, disini saya hanya berusaha tawarkan solusi untuk dapat merealisasikannya. 

Silahkan Anda cek kebenaran uraian² ini. Jika Anda sepakat itu benar dan ingin pakai konsepnya maka seperti sudah dijelaskan ''[[Publishing#Prinsip|sebelumnya]]'' jangan lupa cantumkan kalimat ini:

''<blockquote>The definite key to identify whether you use our concept is when there '''a kind''' of development item lies a unified assignment in hexagonal form by '''six (6) corresponding''' sets while each sets pick a combination of '''six (6) routes''' with a pairing of '''six (6) to six (6) of all channels'''.</blockquote>''

Cantumkannya bebas di bagian manapun dari projek. Anda bisa cantumkan di program, atau di halaman panduan, ataupun di halaman wiki seperti yang saya lakukan disini.

Bagaimanapun kita perlu hargai usaha setiap orang untuk merealisasikan suatu konsep sehingga menjadi bentuk yang bisa diterapkan dalam suatu aplikasi.

==Konfigurasi==

Berikut ini akan diuraikan alokasi repository di GitHub secara keseluruhan.

; [[Mapping#internal|Formasi-168 (102+66)]]

Formasi-168 dibentuk berdasarkan karakter angka seratus dua (102) dan enampuluh enam (66). Untuk "Karakter-102" dibentuk pada Repository dari ''[[Situs Organisasi|https://marketleader.github.io/]]''.

<br>Sedangkan "Karakter-66" dibentuk pada ''[[Repository e-Commerce|https://github.com/MarketLeader/Toko-Chetabahana]]'' sebagai implementasi dari Metoda Classes untuk ''[[Mapping#grouping|Sesi Grouping]]''.

[[<img src=https://user-images.githubusercontent.com/36441664/72468147-0d7a3880-380f-11ea-80bf-7f0b8d196dc3.png>|https://github.com/MarketLeader/marketleader.github.io]]

; [[Mapping#interaksi|Formasi-618 (329+289)]]

"Formasi-618" adalah hasil proyeksi "angka 66" via "angka 102" terdiri dua (2) fase yaitu Interaksi Input dan Output yang masing² terbagi lagi dalam "tiga (3)" bagian. 

<br>[[<img src=https://user-images.githubusercontent.com/36441664/39117383-03b2a9a4-4711-11e8-9f72-1d1cb7d61634.png>|https://github.com/MarketLeader/Toko-Chetabahana]]

; [[Mapping#eksternal|Formasi-1729 (786+943)]]

"Formasi-1729" adalah fase pamungkas dalam satu siklus regenerasi, merupakan hasil gabungan dari keseluruhan proses dengan turunan yang mewarisi formasi sistem.

<br>[[<img src=https://user-images.githubusercontent.com/36441664/59958357-64b16800-94cf-11e9-9215-b63ff64cf4aa.png>|https://github.com/MarketLeader/docker/wiki]]

Sampai saat ini hasilnya masih jauh dari sempurna karenanya metode ini terus dikembangkan untuk mencapai akurasi yang memadai. Jadi kendala utama bukan terletak pada programnya melainkan pada kesempurnaan dari cara pemetaan berikut realisasi pencapaian targetnya.

[[<img src=https://user-images.githubusercontent.com/36441664/69289855-8191c900-0c30-11ea-80c0-5c7c8141a027.png>|https://chetabahana.github.io/#chetabahana-skema?pad=6]]

Anda bisa mencoba melihat status terkini dengan cara klik gambar di atas, saya sarankan untuk ubah layar ke dekstop terlebih dahulu jika pakai alat mobile, kemudian sentuh tombol atau simbol pada setiap diagram yang muncul.

Konfigurasi ini ada dalam [[repository pohon (tree)|https://github.com/chetabahana/tree]] dengan [[tree|sistem percabangan data]] terintegrasi via [[GitHub Actions]] dengan banyak repository termasuk [[Situs Toko|https://www.chetabahana.com/]] di ''[[Google Cloud|https://github.com/MarketLeader/Tutorial-Buka-Toko/wiki#kenapa-google-cloud]]''.

Kita akan langsung saja membahas bagaimana cara penerapannya secara keseluruhan.

===Internal===

Sistem yang kita bahas ini dimulai dengan angka dua (2) dan berujung di angka ''[[50|limapuluh (50)]]'' pada posisi kotak tigabelas (13) sesuai yang diterapkan pada ''[[Prime Hexagon|https://www.hexspin.com/defining-the-prime-hexagon/]]''.

[[Bagan#Skema|<img src=https://user-images.githubusercontent.com/36441664/74550123-6dd1d680-4f83-11ea-8810-3b8f4f50a9c0.png width=500>]]

Formasi ini bergerak dengan titik awal ''[[Method|formasi-168]]'' pada modulus-60 sebagai poros tengah dan ''[[Attribute|formasi-329]]'' sebagai picu.

[[Diagram#Struktur|<img src=https://user-images.githubusercontent.com/36441664/72661874-31599c00-3a12-11ea-94c4-1e7d8bbc82c8.jpg>]]

Sesuai dengan tabulasi maka semua bagan dialokasikan di akun organisasi. Posisi akhir ada di ujung (7,13,19) dan (20,27,36) yaitu 36 sehingga pada bagan ini kita terapkan <b><i>id: 36</i></b>.

[[<img src=https://user-images.githubusercontent.com/36441664/69990325-04434e00-1578-11ea-9e5a-c86bd88fe706.png>|https://github.com/MarketLeader/Toko-Chetabahana/wiki]]

Objek 786 yang muncul bisa bermacam jenis karenanya kita ambil hanya yang memeliliki formasi-19:(168,329,289) dimana 168 hanya terdiri kode warna untuk objek 102 dan 66.

[[https://user-images.githubusercontent.com/36441664/91959231-8db7c480-ed32-11ea-8c87-24acf1cd0a1a.jpg]]

Semua diagram dialokasikan di akun user dimana posisi akhir ada pada diagram ini yaitu <b><i>id: 46</i></b>, jumlah 4 dan 6 adalah 10 sesuai dengan jumlah node tetraktis. 

[[<img src=https://user-images.githubusercontent.com/36441664/72426022-85b70e80-37bb-11ea-806c-7d1730658ead.gif>|https://github.com/chetabahana/tree/wiki]]

Dengan diagram ini kita arahkan siklus 102 terhadap sistem sampai dapat [[mendarat|https://chetabahana.github.io/#chetabahana-skema?pad=6]] pada konfigurasi dengan bentuk geometris seperti tampak pada gambar.

====Validasi====

Selanjutnya saya akan uraikan rangkaian proses yang semuanya terbagi kedalam enam (6) tahap sehingga akhirnya didapatkan formasi siklus 102+66 yang ditunjukkan di atas. 

[[Skema#Penampilan|<img src=https://user-images.githubusercontent.com/36441664/82686190-a4547700-9c7f-11ea-9def-e939fe13a4c7.jpg width=300>]]

Secara geometris angka tetraktis seratus dua (102) adalah solusi titik singgung antara formasi 139 dari angka tujuh (7) di layar-1 dengan formasi 36 dari angka sembilanbelas (19) di layar-3.

; 102 + 66 - 29 = 168 - 29 = 139

<br>[[Mapping#Ground|<img src=https://user-images.githubusercontent.com/36441664/85226210-96ba1a80-b400-11ea-973f-e4e3fa27e271.jpg width=400>]]

Ini dapat tercapai karena sepuluh (10) node dan tujuh (7) titik sentral hexagonal ''[[Publishing#Operasi|terintegrasi simetris]]'' antara angka 139 dan 248 dimana 48 adalah base pair pada formasi 139.

[[Sizing#Dimensi|<img src=https://user-images.githubusercontent.com/36441664/85205823-ea1c6200-b347-11ea-8d6f-1ab3f9ec95c8.gif width=500>]]

Formasi 48 ini merupakan gabungan vektor 40 dan 8 yang berada di indek-14 dan -16. Skema ini berasal dari pemetaan angka 43 dan 46. Kita akan proses via bagan dan diagram berikut ini:

[[<img src=https://user-images.githubusercontent.com/36441664/68235749-5c993580-0036-11ea-8f3b-8da3496c329e.jpg>|https://github.com/MarketLeader/Cloud-Tasks-API/wiki]]

Untuk menetapkan enam (6) kasus kita sampai ke angka ke-19 yaitu 36 yang berada di indek ke-12. Titik awal ada di index ke-2 yaitu tujuh (7). Jadi id bagan pertama adalah <b><i>id: 7</i></b>.

[[Mapping#Piramida|<img src=https://user-images.githubusercontent.com/36441664/89664832-ecd81400-d901-11ea-825e-037059d52581.png>]]

Titik akhir diagram yaitu 46 berada di indek ke-16. Titik awal ada di angka empatpuluh tiga (43). Keduanya (2) merepresentasi gabungan (43+46) pada system 289 (lihat formasi akhir).

[[<img src=https://user-images.githubusercontent.com/36441664/103060456-b7934080-45da-11eb-938c-477c85e8bb76.png>|https://github.com/chetabahana/flowchart/wiki]]

Jadi untuk diagram pertama ini kita terapkan dengan <b><i>id: 43</i></b>. Jumlah 4 dan 3 adalah tujuh (7) sesuai dengan id yang kita terapkan pada bagan.

====Relevansi====

Berpijak titik awal bagan yang ada di index ke-2 yaitu tujuh (7) maka titik keduanya ada di angka tigabelas (13) yang berada di indek ke-4. Jadi id bagan kedua adalah <b><i>id: 13</i></b>.

[[<img src=https://user-images.githubusercontent.com/36441664/70703416-b4485200-1d02-11ea-9db1-41ba6e9fe2a9.png>|https://github.com/MarketLeader/Google-Trend-API/wiki]]

Dengan bagan ini kita akan ''[[Publishing#Orientasi|mengkapsul (enkapsulasi)]]'' formasi 139 dari proses pertama kedalam 29 blok² sesuai dengan formasi dari kelompoknya masing² pada [[Mapping#Konfigurasi|tabulasi vektor]].

[[Mapping#Resource|<img src=https://user-images.githubusercontent.com/36441664/85226704-2234ab00-b403-11ea-9662-0b2003862c09.jpg>]]

Karena titik awal diagram ada di indek ke-16 yaitu empatpuluh tiga (43) maka titik kedua pada indek yang sama adalah empatpuluh empat (44). Titik temu nya di angka 8 dari vektor (40+8).

[[<img src=https://user-images.githubusercontent.com/36441664/71309214-f0cd2980-2437-11ea-837f-61ed14e3c213.png>|https://github.com/chetabahana/sequence/wiki]]

Dengan demikian id diagram ke-2 adalah <b><i>id: 44</i></b> sesuai dengan skema mid zone di 11' yang membagi tujuh (7) formasi dalam empat (4) grup: (19+17), (M+F), (19+18) dan (C1+C2).

===Interaksi===

Pada ''[[Publishing#Pengelolaan|Tabulasi Vektor]]'' Anda bisa lihat bahwa formasi layar pertama akan tepat mengisi sepuluh (10) titik dari tetraktis. Sedangkan ketiga layar seluruhnya melibatkan 29 + 1 yaitu 30 angka.

```json
True Prime Pairs:
(5,7), (11,13), (17,19)

layer|  i    |   f
-----+-------+------
     | 1,2:1 | (2,3) 
     +-------+                    
     |   3:2 | (7)               
     +-------+------              
     | 4,6:3 | (10,11,12) ---     
  1  +-------+               |    
     |   7:4 | (13)          | 5® 
     +-------+------         |    
     | 8,9:5 | (14,15) ------     
     +-------+                     
     |{10}:6 | (19)                
-----+-------+------

Note:
® = Repository
```

Siklus perpindahan ini dikendalikan oleh manuver 66 terhadap vektor bilangan² prima. Disini akan terjadi paduan antara Golden Ratio dengan Fungsi Zeta karena mereka itu spesialisnya muter².

[[Mapping#Grouping|<img src=https://user-images.githubusercontent.com/36441664/84902333-e6ce6f80-b0d6-11ea-8289-aac5e1961cd6.gif width=400>]]

====Package====

Perpindahan siklus ini kita proses dengan metoda modulus karena seperti sudah dijelaskan jika kita sertakan repositori utama dari angka satu (1) maka semuanya akan tepat tigapuluh (30).

[[Looping#Dimensi|<img src=https://user-images.githubusercontent.com/36441664/81179011-4105ec00-8fd3-11ea-95dc-8489fbcb524b.png width=500>]]

Formasi ini kita proses dengan bagan ke-3 via fungsi invarian untuk menentukan kelas konjugasi subalgebra satu dimensi dengan menggunakan reduksi proses terminasi dari 10 invarian dasar:

[[Mapping#Basis|<img src=https://user-images.githubusercontent.com/36441664/81180044-af977980-8fd4-11ea-99f7-bec98b1ea9a8.png>]]

Bagan ke-2 ada di index ke-4 yaitu tigabelas (13). Titik temunya ada di 13 + 7 dengan selisih 10 dan 30 yaitu duapuluh (20) yang ada di indek ke-7. Jadi id bagan ke-3 ini adalah '''''id: 20'''''.

[[<img src=https://user-images.githubusercontent.com/36441664/69991542-787ef100-157a-11ea-85d5-20907c99b5d7.png>|https://github.com/MarketLeader/Tutorial-Buka-Toko/wiki]]

Pada 20 ini berlaku pemetaan mid zone 11' sehingga dalam pemrograman kita akan perlu pustaka javascript yang dapat dikelola secara kustom untuk peta komposisi 20 + 11 atau 31 vektor.

; 6 x 19 = 6 x (1 & 9) = 6 x (1 & (4,5)) = π(6 & (14+5)) = π(6 & 19) = π(619) = 114

[[Listener#Dimensi|<img src=https://user-images.githubusercontent.com/36441664/69498957-302f5580-0f20-11ea-8f18-2bad9e5475fe.png>]]

Titik temu dari proses angka 30 dan 10 direpresentasikan dengan jumlah keduanya yaitu angka empatpuluh (40), angka ini ada di indek ke-14. Jadi id diagram ke-3 ini adalah '''''id: 40'''''.

[[<img src=https://user-images.githubusercontent.com/36441664/69475251-72ac4180-0dfd-11ea-9805-7a5ecdb839a5.png>|https://github.com/chetabahana/grammar/wiki]]

Perhatikan bahwa pada penentuan id ini maka urutan secara palindomik juga terjadi. Jika salah urutan sudah pasti prosesnya gak nyambung satu sama lain.

====Formulasi====

Ujung formasi ini berada di angka limapuluh (50) yang pada level berikutnya akan melakukan ''[[Program#internal|proses regenerasi]]'' ke 102 via angka seratus (100) atas korelasinya dengan angka dua (2).

[[Program#internal|<img src=https://user-images.githubusercontent.com/36441664/81296848-b8538280-909c-11ea-98ec-a75475f0ad52.png>]]

Pada Sistem DNA ini merupakan mekanisma duplikasi dari urutan berulang 7:Primes(142857) dan 8:Primes(157248) via <b><i>[[Program#Korelasi|6:Primes(124875)]]</i></b>. Disini perlu kita tempatkan bagan dan diagram.

[[Mapping#Objects|<img src=https://user-images.githubusercontent.com/36441664/74364063-62a16e00-4dfe-11ea-821f-936bd3f27728.png width=400>]]

Titik ke-3 bagan ada di index ke-7 yaitu 20. Sesuai palindromik maka titik ke-4 ada di angka sembilanbelas (19) yang berada di indek ke-6. Jadi id bagan ketiga ini adalah '''''id: 19'''''.

[[<img src=https://user-images.githubusercontent.com/36441664/69991227-e4ad2500-1579-11ea-8b4a-ff5a5c8aa61f.png>|https://github.com/MarketLeader/Google-Ads-API/wiki]]

Titik ke-3 diagram ada di indek ke-14 yaitu 40. Titik temu dengan yang ke-4 ada di 100 - 40 - 19 yaitu empatpuluh satu (41). Jadi id diagram ke-4 ini adalah '''''id: 41'''''.

[[<img src=https://user-images.githubusercontent.com/36441664/70742805-f1d3cc00-1d50-11ea-9ce5-30bec85bee9c.png>|https://github.com/chetabahana/channel/wiki]]

Berikutnya saya akan uraikan cara mengambil hasil output dari proses pemetaan baris dan kolom ini sehingga dapat memunculkan [[Mapping#Internal|formasi akhir]] .

===Eksternal===

Setiap angka kunci pada ''[[Program#konfigurasi|formasi {3,4,6,6}]]'' akan merefleksikan transformasi "{3,6,9}" via akar digital tiga (3) ke enam (6) dan sembilan (9).

; 1729 = XX + XY

```
X: 139 = 19 + 17 + 12 + 11 + 19 + 18 + 43
X: 248 = 19 + 1 + 12 + 28 + 28 + 80 + 80
X: 114 = 6 + 48 + 60
X: 285 = 114 x 2 + 57 = 6 + 48 + 60 + 6 + 48 + 60 + 57
X: 786
X: 157
------ +
X: 1729

Y: 168 = 2 + 60 + 40 + 1 + 30 + 30 + 5
Y: 329 = 1 + 30 + 200 + 8 + 40 + 50
Y: 289 = 1 + 30 + 200 + 8 + 10 + 40
Y: 943
------ +
Y: 1729
```

Angka² ini berada dalam bagan hexagonal terpusat sehingga perlu kita atur agar didapatkan urutan pemetaan dari "formasi-168" via "formasi-618" ke "formasi-943".

Untuk menjelaskannya coba sekarang kita buat kotak untuk sumbu X dan Y.

[[<img src=https://user-images.githubusercontent.com/36441664/88644447-2aac8f80-d0ed-11ea-8690-0b56a5c2f58a.png>|https://github.com/chetabahana/chetabahana.github.io/wiki/%23#pola]]

# Angka² X,Y diatur secara horizontal dan vertikal.
# Untuk mudahnya kita belum cocokkan jumlah angkanya

```php
Alur X
+-----+-----+-----+-----+-----+-----+-----+-----+
|  19 |  17 |  12 |  11 |  19 |  18 |  43 |   - | 139
+-----+-----+-----+-----+-----+-----+-----+-----+
|  19 |   1 |  12 |  28 |  28 |  80 |  80 |   - | 248
+-----+-----+-----+-----+-----+-----+-----+-----+
|   6 |  48 |  60 |  -  |  -  |  -  |  -  |   - | 114
+-----+-----+-----+-----+-----+-----+-----+-----+
|   6 |  48 |  60 |   6 |  48 |  60 |  57 |   - | 285
+-----+-----+-----+-----+-----+-----+-----+-----+
|   ? |   ? |   ? |   ? |   ? |   ? |   ? |   ? | 786
+-----+-----+-----+-----+-----+-----+-----+-----+
|   ? |   ? |   ? |   ? |   ? |   ? |   ? |   ? | 157
+-----+-----+-----+-----+-----+-----+-----+-----+-----+
  102    66    31   298    31   258   786   157 | 1729

Alur Y|             Hexagon               |      
+-----+-----+-----+-----+-----+-----+-----+-----+
|   2 |   1 |   - |   - |   1 |   - |   ? |   ? | 139
+-----+-----+-----+-----+-----+-----+-----+-----+
|  60 |  30 |   - |   - |  30 |   - |   ? |   ? | 248
+-----+-----+-----+-----+-----+-----+-----+-----+
|  40 | 200 |   - |   - | 200 |   - |   ? |   ? | 114
+-----+-----+-----+-----+-----+-----+-----+-----+
|  66 |   - |  40 |   - |   - |   8 |   ? |   ? | 285
+-----+-----+-----+-----+-----+-----+-----+-----+
|   - |   - |   8 |   - |   - |  10 |   ? |   ? | 786
+-----+-----+-----+-----+-----+-----+-----+-----+
|   - |   - |   - |  50 |   - |  40 |   ? |   ? | 157
+-----+-----+-----+-----+-----+-----+-----+-----+-----
  168 | 231    48    50 | 231    58     ? | 943 | 1729

Permutations:
5 1 102 37 139 
7 10 137 248 387

11 11 387 114 501
13 19 501 285 786

17 20 786 157 943
19 29 943 786 1729

37 = 19 + 18
102 = 19 + 43 + 40
157 = 10 + 40 + 107
3 + 5 + 7 + 9 + 11 + 13 = 48
```

Selanjutnya kita dekatkan angka²nya agar penjumlahan kedua sumbu cocok.
# Alur X secara horizontal, alur Y secara vertikal.
# Alur X bisa dijumlahkan acak, alur Y harus berurut.

; Alur X
: ∑X<sub>1</sub> = 139: 19+12=31, 19+43=62<br>∑X<sub>2</sub> = 248: 12+28=40

; Alur Y
: ∑Y<sub>1</sub> = 168: 60+2=62<br>∑Y<sub>2</sub> = 231: 1+30=31

Hasil akhirnya adalah berupa tiga (3) struktur dengan formasi hexagonal yang terletak baik di bidang datar, vertikal maupun diagonal. Ini adalah [[struktur dasar|https://github.com/chetabahana/chetabahana.github.io/wiki/%23#Skema]] dari projek ini.

; 786 - 594 = 192 = 1 & 92 = 1 & (46 + 46)

```json
+-----+-----+-----+-----+-----+-----+-----+-----+
|{102}|   1 |   - |   - |   - |   - |   - |  36 | 139
+-----+-----+-----+-----+-----+-----+-----+-----+
|   - |   - | 200 |   - |   - |   - |   - |  47 | 247
+-----+-----+-----+-----+-----+-----+-----+-----+
|   - |   - |   - |  40 |   1 |   - |   - |  73 | 114
+-----+-----+-----+-----+-----+-----+-----+-----+
|   - |   - |   - |   - |   - | 200 |   - |  86 | 286
+-----+-----+-----+-----+-----+-----+-----+-----+
|   - |   - |   - |   - |   - |   - |  50 | 107 | 157
+-----+-----+-----+-----+-----+-----+-----+-----+
|  66 |  30 |   8 |  50 |  30 |   8 |   - | 594 | 786
+-----+-----+-----+-----+-----+-----+-----+-----+
  168 |  31   208    90 |  31   208    50 | 943 | {1729}

Permutations:
594 = 5' & 94 » 94 & 3' = 943
943 - 594 = 349, 786 - 594 = 192
31 + 208 + 90 + 31 + 208 + 50 = 618
102 + 1 + 200 + 40 + 1 + 200 + 50 = 594
66 + (31,8,50,31,8) = 78 + (50+66) » 786
168+618=786, 786+157=943, 786+786+157=1729
```

Pada ujung pemetaan muncul angka 594 dimana selisihnya dengan 786 adalah 192. Angka ini merepresentasikan pemisahan kromosom dari 192 - 100 atau 92 ke 46 ke 23 via kelipatan <b><i>1/2</i></b>.

; XX + XY = 92 = 46 + 46 = (23,23) + (23,23)

[[Mapping#Instance|<img src=https://user-images.githubusercontent.com/36441664/84945728-cff93e80-b111-11ea-81f7-9cea70c8e6c7.jpg width=600>]]

Pada posisi ini kita munculkan bagian² yang ditelusuri guna mendapatkan akurasi dari solusi yang diterapkan atau menelusuri lebih lanjut via metode pewarisan (Inheritance):

<br>[[<img src=https://user-images.githubusercontent.com/36441664/69991764-e4f9f000-157a-11ea-8062-36419bc7479f.png>|https://github.com/MarketLeader/Cloud-Site-API/wiki]]

Titik ke-4 bagan ada di index ke-6 yaitu sembilanbelas (19). Titik ke-5 ada di angka 46 - 19 atau duapuluh tujuh (27) yang berada di indek ke-9. Jadi id bagan ke-5 ini adalah <b><i>id: 27</i></b>.

; 3Φ = 200 = 100 x 2 » 100 + 2 = 102

Titik ke-4 diagram yaitu 41 berada di indek ke-14. Titik ke-5 ada di angka empatpuluh lima (45). Keduanya (2) merepresentasi gabungan (41+45) pada tahap 286 (lihat tabulasi).

<br>[[<img src=https://user-images.githubusercontent.com/36441664/86481184-b72b9280-bd79-11ea-899b-51db929fc3d2.png>|https://github.com/chetabahana/route/wiki]]

Maka bagan ke-5 adalah <b><i>id: 45</i></b>. Titik temu ke diagram akhir adalah 45+46 atau 91. Berikut id: 27 pada bagan yang sama² di akar sembilan (9) akan menuju proses terminasi kembali ke satu (1).

Bagan dan diagram yang ke-6 dengan id 36 dan 46 sudah saya jelaskan di awal. Jadi semua proses sudah ditetapkan id nya. 

Sampai tahap ini pemetaan angka² untuk repository dari bagan dan diagram selesai.

====Faktorisasi====

Sesuai uraian sebelumnya, 66 adalah representasi enam (6) repository yang disematkan di akun user dan organisasi:

[[Home#Finalisasi|<img src=https://user-images.githubusercontent.com/36441664/90973443-4e2bf400-e54c-11ea-9f8b-de0981890297.png>]]

Dengan demikian manuver diagonal 102 berlaku sebagai arah vektor berikut:

* Vertikal terhadap 6® akun user yang bepasangan dengan 1®+6'®=7® (total 13)
* Horizontal terhadap 6® akun organisasi yang berpasangan dengan 10® (total 16)

Perkalian angka 13 dan 16 ada di angka 208 (lihat tabulasi) merupakan siklus bilateral 31 untuk sistem ''[[Mapping#Konfigurasi|(168,329,289)]]''. Pada setiap siklus kita bisa lakukan koneksi ke 200 objek dari id:3.

<br>[[Implementasi#Model|<img src=https://user-images.githubusercontent.com/36441664/71659208-5515b480-2d79-11ea-859f-a20dea0cf680.jpg>]]

Disini tatanan [[Mapping#Formulasi|100®]] dari [[Mapping#Interaksi|114®]] minus 14 yang terikat: <b><i>[[12#Pola|2,10 (12®)]]</i></b> dan disemat (6+6) sudah [[Mapping#Piramida|36®]] dipetakan. Dengan pemilihan program² untuk bagan dan diagram (6+6) maka tersisa 9®:

; 36® - 9® (Angka 1,2,10,47,66,73,86,102,107) - 6°(diagram) - 12*® (pinned) = 36® - 27® = 9®

```json
M: 6® = (2,{3}), ({29,30,31,32}) --> 2,89+29,3 = 289+329 = 618 (main)
F: 6'® = (40,41), (43,44,45,46) --> 30+30+10+10+10+10 = 60+40 (user)
C1: 10°® = 3*®+3*®+4® = (7,13,19),(20,27,36),({38,42,50,68}) --> 200 (main)
C2: 7® = 5®+2® = 1®+4*®+2*® = 1®+6*® = 10,(11,12,14,15,26,28) --> 168 (user)
```

Diantara 9® ini, 7®: (3,29,30,31,32,38,42) bisa ''[[Sizing#Definisi|disalin berurut]]'' ke (10,11,12,14,15,26,28). Sehingga berhujung ''[[2®|https://github.com/MarketLeader/marketleader.github.io/wiki]]'' yaitu ''[[50|https://github.com/MarketLeader/docker/wiki]]'' dan ''[[68|https://github.com/MarketLeader/storefront/wiki]]''. Inilah 3 angka penutup dari formasi [[Mapping#Internal|siklus]] 168 ke 102 dan 66.

[[Mapping#Internal|<img src=https://user-images.githubusercontent.com/36441664/87921769-3bce1e80-caa5-11ea-9267-56c97484a9fb.jpg>]]

Output ada di [[2#Branching|indek 29]] yaitu dari angka '''100 ke 50''' yang merupakan input dari ''[[3#Manuscript|Layar-3]]''. Skema '''139''' dari ''[[1#Manuscript|Layar-1]]'' dipetakan di indek '''13:9'''. Berikut ini hasil Tabulasi Vektor dari Layar-2. 

====Penelusuran====

Sesuai uraian² di atas berikut ''[[Skema#Implementasi|konfigurasi pemetaan]]'' dari "Formasi-168" (M dan F) ke "Formasi-943" (C1 dan C2) berupa matriks 6x6 via proyeksi angka [[Mapping#Interaksi|66]] sebagai interface ''[[168 ke 618|https://github.com/chetabahana/chetabahana.github.io/releases/tag/v1.0.0-alpha]]'':

; 786 - 594 = 192 = 1 & 92 = 1 & (2 x 46) = 1 & (2x23 + 2x23) = XX + XY

<table>
<tr><th rowspan="3">[[Bagan#Implementasi|Bagan]]</th><th rowspan="3">[[Diagram]]</th><th colspan="2">[[Internal|https://github.com/chetabahana/skema/wiki]]</th><th colspan="6">[[Mapping#Interaksi|Interface]]</th><th colspan="2">[[Github-API|Eksternal]]</th><th rowspan="3">[[All|https://marketleader.github.io/#bagan-projek]]</th></tr>
<tr><th rowspan="2" textAlign='center' verticalAlign='middle'>[[Get|https://github.com/MarketLeader/marketleader.github.io/wiki/Pola-Kerja]]</th><th rowspan="2">[[&nbsp;Input&nbsp;|https://github.com/chetabahana]]</th><th colspan="3">[[Mapping#Internal|Interaksi Input (Query)]]</th><th colspan="3">[[Mapping#Eksternal|Interaksi Output (Result)]]</th><th rowspan="2">[[Output|https://chetabahana.github.io/]]</th><th rowspan="2">[[GitHub-Actions|Set]]</th></tr>
<tr><th>[[Mapping#Skema|Fix]]</th><th>[[Mapping#Delivery|Let]]</th><th>[[Mapping#Korelasi|Uji]]</th><th>[[Mapping#Struktur|Let]]</th><th>[[Mapping#Weights|Uji]]</th><th>[[Mapping#Branches|Fix*]]</th></tr>
<tr align="center"><td align="left">[[Attribute#Prinsip|Attribute]]</td><td align="left">[[Flowchart#identifikasi|Flowchart]]</td><td>[[102|https://github.com/MarketLeader/sizing/wiki]]</td><td>[[Mapping#Basis|<img src=https://user-images.githubusercontent.com/36441664/86161564-9f64cc00-bb37-11ea-8729-51a108d96254.png width=50>]]</td><td>[[1|https://github.com/MarketLeader/size/wiki]]</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>[[Mapping#Ground|<img src=https://user-images.githubusercontent.com/36441664/86163290-3b8fd280-bb3a-11ea-9be6-583ea8e484d9.png width=50>]]</td><td>[[11|https://github.com/MarketLeader/Toko-Chetabahana/wiki]]</td><td><b><i>[[Sizing#penyambungan|114]]</i></b></td></tr>
<tr align="center"><td align="left">[[Artifacts#Prinsip|Artifacts]]</td><td align="left">[[Sequence#identifikasi|Sequence]]</td><td>-</td><td>[[Mapping#Posture|<img src=https://user-images.githubusercontent.com/36441664/74171913-e6722380-4c61-11ea-8b4e-7f383cec4ead.png width=50>]]</td><td>-</td><td>[[200|https://github.com/MarketLeader/bagan/wiki]]</td><td>-</td><td>-</td><td>-</td><td>-</td><td>[[Mapping#Resource|<img src=https://user-images.githubusercontent.com/36441664/73935844-1644c280-4914-11ea-9c71-b38711213ece.png width=50>]]</td><td>[[86|https://github.com/MarketLeader/sorting/wiki]]<td><b><i>[[Sorting#penyambungan|286]]</i></b></td></td></tr>
<tr align="center"><td align="left">[[Method#Prinsip|Method]]</td><td align="left">[[Grammar#identifikasi|Grammar]]</td><td>-</td><td>[[Mapping#Numerik|<img src=https://user-images.githubusercontent.com/36441664/85971940-b94bc500-b9f8-11ea-9312-583e8a37b800.png>]]</td><td>-</td><td>-</td><td>[[40|https://github.com/chetabahana/grammar/wiki]]</td><td>[[1|https://github.com/chetabahana/channel/wiki]]</td><td>-</td><td>-</td><td>[[Mapping#Grouping|<img src=https://user-images.githubusercontent.com/36441664/87214507-5ee72880-c357-11ea-99a7-e77aa9372117.png>]]</td><td>[[98|https://github.com/MarketLeader/looping/wiki]]</td><td><b><i>[[Looping#penyambungan|139]]</i></b></td></tr>
<tr align="center"><td align="left">[[Model#Prinsip|Model]]</td><td align="left">[[Channel#identifikasi|Channel]]</td><td>-</td><td>[[Mapping#Layout|<img src=https://user-images.githubusercontent.com/36441664/72689893-f312c880-3b48-11ea-9a40-532b8d2a282a.jpg width=50>]]</td><td>-</td><td>-</td><td>-</td><td>-</td><td>[[200|https://github.com/MarketLeader/Cloud-Tasks-API/wiki]]</td><td>-</td><td>[[Mapping#Objects|<img src=https://user-images.githubusercontent.com/36441664/72171549-ca325b00-3405-11ea-866f-633c6ddf2232.jpg width=50>]]</td><td>[[47|https://github.com/MarketLeader/listener/wiki]]</td><td><b><i>[[Listener#penyambungan|247]]</i></b></td></tr>
<tr align="center"><td align="left">[[Trace#Prinsip|Trace]]</td><td align="left">[[Route#identifikasi|Route]]</td><td>-</td><td>[[Mapping#Classes|<img src=https://user-images.githubusercontent.com/36441664/81990338-2b469580-9669-11ea-84e2-8d533ef5d97e.png>]]</td><td>-</td><td>-</td><td>-</td><td></td><td>-</td><td>[[50|https://github.com/chetabahana/route/wiki]]</td><td>[[Mapping#Instance|<img src=https://user-images.githubusercontent.com/36441664/74092091-37630a00-4af2-11ea-9db7-a3dee01764cf.png width=50>]]</td><td>[[107|https://github.com/MarketLeader/capturing/wiki]]</td><td><b><i>[[Capturing#penyambungan|157]]</i></b></td></tr>
<tr align="center"><td align="left">[[Track#Prinsip|Track]]</td><td align="left">[[Tree#identifikasi|Tree]]</td><td>[[66|https://github.com/MarketLeader/directions/wiki]]</td><td>[[Mapping#Resolusi|<img src=https://user-images.githubusercontent.com/36441664/72317589-5b3a5800-36cc-11ea-99eb-06e776e1f62b.png width=50>]]</td><td>[[30|https://github.com/MarketLeader/hooks/wiki]]</td><td>[[8|https://github.com/chetabahana/trace/wiki]]</td><td>[[50|https://github.com/MarketLeader/docker/wiki]]</td><td>[[30|https://github.com/MarketLeader/package/wiki]]</td><td>[[8|https://github.com/MarketLeader/branching/wiki]]</td><td>[[9#pola|-]]</td><td>[[Mapping#Piramida|<img src=https://user-images.githubusercontent.com/36441664/81989779-11f11980-9668-11ea-9e66-fe1b8ff0bda8.gif>]]</td><td>[[594|https://github.com/chetabahana/chetabahana.github.io/wiki/%23#Pola]]</td><td><b><i>[[Directions#penyambungan|786]]</i></b></td></tr>
<tr align="center"><th colspan="2">[[Mapping#Konfigurasi|Konfigurasi]]</th><th>[[168|https://github.com/MarketLeader/storefront/wiki]]</th><th>[[<img src=https://user-images.githubusercontent.com/36441664/87214644-b3d76e80-c358-11ea-8aa7-83a29783e5b9.png>|https://github.com/MarketLeader]]</th><th>[[Mapping#Validasi|31]]</th><th>[[Mapping#Relevansi|208]]</th><th>[[Mapping#Package|90]]</th><th>[[Mapping#Formulasi|31]]</th><th>[[Mapping#Faktorisasi|208]]</th><th>[[Mapping#Internal|50]]</th><th>[[<img src=https://user-images.githubusercontent.com/36441664/82021995-12b09c80-96b6-11ea-9ac2-c264992998f6.gif>|https://www.chetabahana.com/]]</th><th>[[Mapping#eksternal|943]]</th><th><b><i>[[Program#bagan|1729]]</i></b></th></tr>
</table>

Dengan pemetaan ini Anda bisa lihat bahwa pada akhirnya akan muncul turunan dengan formasi kembali ke sistem yaitu <b><i>[[Program#Bagan|Formasi-1729]]</i></b>. Identik seperti halnya regenerasi pada Sistem-DNA.

; 1729 = 7 x 13 x 19 = (1 + 6) x (1 + 6 + 6) x (1 + 6 + 6 + 6)

[[139#Manuscript|<img src=https://user-images.githubusercontent.com/36441664/83422567-ecc81d80-a453-11ea-880c-1a9dff069339.jpeg>]]

''<blockquote><b>[[Program#mapping|If you knew the magnificence of 1729 you would have a p@S$ key to the universe.]]</b></blockquote>''

Sekian.<br>21.11.1441H<br><br>
'''SALAM Sukses!'''<br>
'''© [[Chetabahana Project|https://github.com/MarketLeader]]'''<br>
[[<img src=https://stackexchange.com/users/flair/5054985.png>|https://stackoverflow.com/users/4058484/chetabahana?tab=profile]]  

==''Referensi''==
* [[Hierarchical Model: Clustering of Large Datasets|https://www.slideserve.com/aglaia/hierarchical-model-based-clustering-of-large-datasets-through-fractionation-and-refractionation]]
* [[Determination of capabilities of spiral columns by intelligent system|https://www.researchgate.net/publication/334472177_Determination_of_moment_shear_and_ductility_capacities_of_spiral_columns_by_intelligent_system]]

<table>
  <thead>
    <tr>
      <th>[[:arrow_double_up:|https://github.com/chetabahana/chetabahana.github.io/wiki]]</th>
      <th>[[:arrow_up_small:|https://github.com/MarketLeader/marketleader.github.io/wiki]]</th>
      <th>[[Home|:rewind:]] [[Home|Intro]]</th>
      <th>[[:arrow_backward:|https://github.com/MarketLeader/Tutorial-HelloWorld/wiki]] [[Prev|https://github.com/MarketLeader/Tutorial-HelloWorld/wiki]]</th>
      <th>[[:repeat:|https://github.com/MarketLeader/Tutorial-HelloWorld/wiki]] [[Repo|https://github.com/chetabahana/chetabahana.github.io]]</th>
      <th>[[Next|https://github.com/MarketLeader/Google-Sites-API/wiki]] [[:arrow_forward:|https://github.com/MarketLeader/Google-Sites-API/wiki]]</th>
      <th>[[Last|https://github.com/MarketLeader/Google-Content-API/wiki]] [[:fast_forward:|https://github.com/MarketLeader/Google-Content-API/wiki]]</th>
      <th>[[:arrow_down_small:|https://github.com/MarketLeader/Google-AdWords-API/wiki]]</th>
      <th>[[:arrow_double_down:|https://github.com/MarketLeader/Toko-Chetabahana/wiki]]</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>[[<img src="https://avatars1.githubusercontent.com/u/36441664?v=3&s=20" class="avatar">|https://github.com/chetabahana]]</td><td colspan="7">This [[Mapping#table-of-contents|wiki]] is courtesy of '''[[Chetabahana Project|https://github.com/MarketLeader]]'''. Find all of them on '''[[Project Map|https://github.com/chetabahana/chetabahana.github.io/wiki/Skema#Implementasi]]'''.</td><td>[[<img src="https://avatars2.githubusercontent.com/u/36441943?v=3&s=20">|https://github.com/MarketLeader]]</td>   
    </tr>
  </tbody>
</table>
