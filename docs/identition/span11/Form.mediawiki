<table>
  <thead>
    <tr>
      <td>[[<img src="https://avatars1.githubusercontent.com/u/36441664?v=3&s=20" class="avatar">|https://github.com/chetabahana]]</td><td colspan="7">This [[wiki|https://github.com/chetabahana/chetabahana.github.io/wiki]] is courtesy of '''[[Chetabahana Project|https://github.com/MarketLeader]]'''. Find all of them on '''[[Project Map|https://github.com/chetabahana/chetabahana.github.io/wiki/Skema#Implementasi]]'''.</td><td>[[<img src="https://avatars2.githubusercontent.com/u/36441943?v=3&s=20">|https://github.com/MarketLeader]]</td>   
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>[[:arrow_double_up:|https://github.com/chetabahana/chetabahana.github.io/wiki]]</th>
      <th>[[:arrow_up_small:|https://github.com/MarketLeader/marketleader.github.io/wiki]]</th>
      <th>[[Home|:rewind:]] [[Home|Intro]]</th>
      <th>[[:arrow_backward:|https://github.com/MarketLeader/Tutorial-HelloWorld/wiki]] [[Prev|https://github.com/MarketLeader/Tutorial-HelloWorld/wiki]]</th>
      <th>[[:repeat:|https://github.com/MarketLeader/Tutorial-HelloWorld/wiki]] [[Repo|https://github.com/chetabahana/chetabahana.github.io]]</th>
      <th>[[Next|https://github.com/MarketLeader/Google-Sites-API/wiki]] [[:arrow_forward:|https://github.com/MarketLeader/Google-Sites-API/wiki]]</th>
      <th>[[Last|https://github.com/MarketLeader/Google-Content-API/wiki]] [[:fast_forward:|https://github.com/MarketLeader/Google-Content-API/wiki]]</th>
      <th>[[:arrow_down_small:|https://github.com/MarketLeader/Google-AdWords-API/wiki]]</th>
      <th>[[:arrow_double_down:|https://github.com/MarketLeader/Toko-Chetabahana/wiki]]</th>
    </tr>
  </tbody>
</table>

__TOC__

==Arsitektur==

Pada bagian ini kita akan masuk ke angka dasar dari sistem yaitu 114. Dengan angka 114 ini maka penjelasan di atas tentang layar-1,-2,-3 akan lebih mudah diikuti. 

[[https://user-images.githubusercontent.com/36441664/84674482-2bca9880-af55-11ea-9cc7-478b843c6ad2.jpg]]

Secara matematis proses ini tentu sangat sulit untuk dijabarkan namun secara sederhana dapat Anda ikuti penjelaskan di bawah ini. 

===Metode===

Dengan demikian jika setiap objek semuanya dibagi menjadi lebih kecil sesuai metoda ini maka per <b>n</b> siklus akan ada '''''114<sup>n</sup> unit''''' mengikuti formasi ini:

; 6 + (6 x 6) + 6 x (6 + 6) = 42 + 72 = 114

[[Bagan#index|<img src=https://user-images.githubusercontent.com/36441664/72317825-1236d380-36cd-11ea-9533-cf8d02b52c23.png width=500>]]

Dalam realisasinya tentu tidak setiap objek akan perlu dipecah. Namun misalkan seberapapun dipecah maka konfigurasinya akan kembali semula.

; d(114) = d(1 + 1 + 4) = d(6)

Algoritma mengapa fenomena ini terjadi ada hubungannya dengan alur alamiah dari [[168=π(10³) ke 10³=π(89²)|https://github.com/chetabahana/chetabahana.github.io/wiki/%23#scheme]]. Anda bisa ikuti detilnya pada uraian tentang angka ''[[2|dua (2)]]''. 

<br>[[2#pola|<img src=https://user-images.githubusercontent.com/36441664/86006504-41a18880-ba40-11ea-974c-12883aba9348.gif>]]

Pada ujungnya Anda akan lihat bahwa karakter dasar dari angka yang diperlukan akan tetap semuanya berjumlah 114 sesuai ''[[program#metode|angka dasar]]'' dari sistem.

===Resolusi===

Fenomena angka 114 ini saya terapkan dengan cara alokasi repository sehingga masing² hanya akan bekerja berdasarkan angka yang dialokasikan. 

Berikut saya rangkum proses yang dilakukan:

; 1729 = 7 x 13 x 19 = (1 + 6) x (1 + 6 + 6) x (1 + 6 + 6 + 6)

# <b>Tahap 7 (''[[Collections#Destinasi|Objek]]'')</b>: Pada tahap ini kita perlu tujuh (7) objek dengan formasi satu (1) tambah enam (6). Saya cari apapun yang berhubungan dengan tujuh (7). Cari sana-sini ternyata ada kasus yang namanya [[The Seven Millenium Prize Problems|https://github.com/chetabahana/chetabahana.github.io/wiki/%23#manuscript]] dimana satu (1) kasusnya sudah close. Sisanya saya kelompokan mengikuti karakter angka enam (6) yaitu 1 + 2 + 3 = 1 x 2 x 3. Ternyata cocok. Tanpa pikir dua (2) kali saya langsung tetapkan sebagai objek. Apapun jadinya yang penting objeknya sesuai dengan formasi. ''Settled. Finito.''.
# <b>Tahap 13 (''[[Bagan#Konsep|Bagan]]'')</b>: Disini kita perlu masukkan lagi enam (6) objek baru yang berorientasi kepada objek yang tujuh (7). Pemilihan objeknya tidak sesulit yang pertama karena enam (6) objek itu jauh lebih banyak daripada tujuh (7). Yang sulit adalah proses integrasinya. Karenanya saya sertakan enam (6) objek dari Metoda ''[[Bagan#Konsep|Object Oriented Programming]]''. Sebelumnya saya coba masukkan objeknya di tahap 7. Ternyata tidak cocok. Tahap 7 tetap harus tujuh (7). Jika tidak tujuh (7) prosesnya tidak akan sesuai sistem.
# <b>Tahap 19 (''[[Diagram#Struktur|Diagram]]'')</b>: Tahap ini juga yang dimasukkan adalah enam (6) objek. Namun orientasinya bukan kepada objek yang tujuh (7) melainkan kepada proses dari tahap 13. Karenanya saya cari bermacam program tentang ''[[Diagram#Struktur|Proses Diagram]]'' yang dapat disertakan.
# <b>Tahap 66 (''[[Mapping#Arsitektur|Mapping]]'')</b>: Ini adalah tahap paling rumit. Dimana sistem harus melepaskan formasi 1729 agar bisa masuk proses. Jenis objek dan berapa banyak objek baru yang harus disertakanpun menjadi persoalan pelik. Ini sempat membuat vakum beberapa waktu. Akhirnya ketemu. Ternyata 66 akan melakukan proses dari 19 objek yang disertakan tadi dari ''[[Mapping#Internal|Formasi-19]]'' ke ''[[Mapping#Package|Formasi-29]]'' dengan 29 objek dalam rangka mempersiapkan ruang bagi 102 untuk melakukan proses pada objek yang tujuh (7). Jadi ketemu hubungannya dengan angka 66 + 102 = 168  dimana tujuh (7) objek akan dipecah menjadi tujuh (7) grup turunan dengan total 168 - 29 = 139 objek turunan. 

Selanjutnya saya akan uraikan detil masing² proses. 

[[<img src=https://user-images.githubusercontent.com/36441664/68235749-5c993580-0036-11ea-8f3b-8da3496c329e.jpg width=800>|https://github.com/MarketLeader/Cloud-Tasks-API/wiki]]

[[<img src=https://user-images.githubusercontent.com/36441664/70703416-b4485200-1d02-11ea-9db1-41ba6e9fe2a9.png width=800>|https://github.com/MarketLeader/Google-Trend-API/wiki]]

[[<img src=https://user-images.githubusercontent.com/36441664/69991542-787ef100-157a-11ea-85d5-20907c99b5d7.png>|https://github.com/MarketLeader/Google-Trend-API/wiki]]

[[<img src=https://user-images.githubusercontent.com/36441664/69991227-e4ad2500-1579-11ea-8b4a-ff5a5c8aa61f.png width=800>|https://github.com/MarketLeader/Google-Ads-API/wiki]]

[[<img src=https://user-images.githubusercontent.com/36441664/69991764-e4f9f000-157a-11ea-8062-36419bc7479f.png width=800>|https://github.com/MarketLeader/Cloud-Site-API/wiki]]

[[<img src=https://user-images.githubusercontent.com/36441664/69990325-04434e00-1578-11ea-9e5a-c86bd88fe706.png width=800|https://github.com/MarketLeader/Toko-Chetabahana/wiki]]

==Konfigurasi==

[[https://user-images.githubusercontent.com/36441664/84674374-0e95ca00-af55-11ea-9dac-65623ca920e8.jpg]]

Berikutnya saya ajak Anda untuk simak gambar berikut:

<br>[[https://user-images.githubusercontent.com/36441664/83051968-e2cfa480-a078-11ea-8ff2-316a809a8fad.jpg]]

Gambar saya temukan tak sengaja karena dia jarang beredar atau dibahas ilmuwan² karena dianggap bentuk mistis. 

Namun ternyata dia kunci bagaimana angka 102 bisa berinteraksi dengan 66.

Coba perhatikan segitiga paling awal ada angka 1, 0, dan 2. Jika digabung menjadi 102. Perhatikan juga bahwa  ujungnya semua bentuk ada di angka 66. 

===Pewarisan===

Tidak hanya sampai disitu. Saya coba kumpulkan semua bentuk² segitiga. 

Ternyata ada segitiga yang disebut [[Mapping#basis|tetraktis]].

Segitiga ini juga sama nasibnya. Jarang disentuh karena alasan yang sama.

[[<img src=https://user-images.githubusercontent.com/36441664/87851970-0f40c800-c928-11ea-9213-0a05c177ab20.png>|https://en.m.wikipedia.org/wiki/Tetractys]]

Bentuk khusus segitiga ini dibanding segitiga lainnya adalah dia punya 10 node. 

Saya hubungkan lagi angka 10 ini dengan angka awal sistem, angka ini bukan satu (1) melainkan dua (2) karena angka awal bilangan prima itu dua (2) bukan satu (1). 

Gabungkan angka 10 dengan 2 muncul 102. Lagi² angkanya 1, 0, dan 2.

===Regenerasi===

Sekarang balik lagi ke gambar awal tadi. 

Perhatikan bahwa setiap prosesnya ada enam (6) tahap.

Perhatikan juga bahwa sebelum angka 66 setiap proses berujung di angka 7, 13, dan 19. Tepat tiga (3) angka dari formasi sistem yaitu [[Formasi-1729|https://github.com/chetabahana/chetabahana.github.io/wiki/%23#skema]].

[[<img src=https://user-images.githubusercontent.com/36441664/72199762-e8827000-3472-11ea-8185-d8caf6c77af3.jpg>|https://github.com/chetabahana/chetabahana.github.io/wiki/%23#skema]]

Penasaran saya maju terus ke hal yang lebih kompleks hingga jumlah bilangan prima dibawah 1000 yaitu 168. Terus ke ''[[Program#internal|Golden Ratio]]''. Maju lagi ke detil seperti yang saya rangkum di atas.

Ternyata semuanya saling berhubungan satu sama lain, suatu hubungan yang terlalu banyak bila dikatakan sebagai suatu kebetulan. Maka disini ketemu benang merahnya.

==Implementasi==

[[https://user-images.githubusercontent.com/36441664/84674423-18b7c880-af55-11ea-8a65-0bd6d07a4f40.jpg]]

Dapat Anda amati bahwa siklus proses ini dimulai dari angka ''[[102#pola|102]]'' dan ''[[66#pola|66]]'' yang akan berujung pada angka yang sama seberapa besar dan atau kecil pun dari kasus yang ditelusuri. 

; 102 + 66 = 168

Tidak ada cara matematis saya dapatkan untuk menjelaskan proses angka 66 di atas. Ini hanya bisa saya sajikan dengan skema berikut:

; 139 = 168 - 29 = (102 + 66) - 29

```json
True Prime Pairs:
(5,7), (11,13), (13,19)

                         |  1    2    3    4    5    6    7
+----+----+----+----+----+----+----+----+----+----+----+----+
|  5'|  7'| 11'| 13'| 17'| 19 | 17 | 11 | 12 | 19 | 18 |    |
+----+----+----+----+----+----+----+----+----+----+----+----+
|---------36'-------|---36'---|                       18+5²=43
   |     =6x6          =6x6                                   ^
   └─ ─ ─ ─ ─ ─ ─ ─ ── ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─  ─┘

                         |  1    2    3    4    5    6   7
+----+----+----+----+----+----+----+----+----+----+----+----+
|  - |  - |  - |  - |  - | 19 | 17 | 12 | 11 | 19 | 18 | 43 |
+----+----+----+----+----+----+----+----+----+----+----+----+
                         |--------------- 139 --------------|

Permutation:
139 = 19 + 17 + 11 + 12 + 19 + 18 + 43
139 = (43,19) + (17,11,12) + (19,18)
139 = 62 + 40 + 37
139 = 102 + 37
```

Dengan demikian diluar 19 objek yang sudah ada maka kita perlu 29 - 19 = 10 objek baru untuk disertakan. 

===Assessment===

Dari uraian di atas tentu timbul pertanyaan, yang 10 objek itu objek apa lagi ya kan.

Nah untuk menjawabnya kita lihat ''[[Mapping#Konfigurasi|True Prime Vektors]]''. Disitu saya kasih tanda 6®, 5®, 2®, 6®. Ini maksudnya adalah posisi dimana kita akan tempatkan 19 objek yang kita sudah siapkan.

Karena jumlah objek pada formasi ini adalah 29 maka sisanya otomatis adalah objek yang 10.

; 6® + 5® + 2® + 6® + 10® = 19® + 10® = 29®

```json
6® = (2,3), (29,30,31,32)
7® = 5x + 2x = (10,11,12,14,15), (26,28)
6® = (40,41), (43,44,45,46)
10® = 7,13,19,20,27,36,38,42,50,68
```

Terus kenapa 10?<br>
Jawabannya karena 66 tahu akan datang 102..

Ada apa dengan 102?<br>
Karena dia sang tetraktis yang punya 10 node. 

[[102#pola|<img src=https://user-images.githubusercontent.com/36441664/87882663-c6723780-ca2b-11ea-9e83-41eface3d8e5.png>]]

Nyambung semuanya kan..<br>
Disinilah benang merah yang saya maksud.

''<blockquote>If it is easy to check that a solution to a problem is correct, is it also easy to solve the problem? This is the essence of '''[[Collections#kelompok|the P vs NP question]]'''. Typical of the NP problems is that of the Hamiltonian Path Problem: given N cities to visit, how can one do this without visiting a city twice? If you give me a solution, I can easily check that it is correct. But I cannot so easily find a solution.</blockquote>''

===Penelusuran===
Sekarang pasti Anda bertanya bagaimana menempatkan objeknya ya kan. 

Disinilah kita akan perlukan program komputer. Caranya adalah kita ambil 29 repository masing² untuk sebuah objek. 

''<blockquote>Catatan:<br>Untuk sekedar mencoba Anda bisa ambil satu repository lalu tempatkan 29 folder. Namun jika dikembangkan dengan sejumlah objek maka akan terbentur dengan karakter angka² prima yang menghendaki property terpisah pada setiap objek yang berbeda fungsi.</blockquote>''

Kemudian kita alokasikan folder khusus dengan file disitu dengan identitas dan bobot mengikuti angka pada tabulasinya. 

Contoh untuk angka 2, folder tersebut kita tempatkan tiga (3) file, masing² kita isi seperti ini:

File ke-1:
```php
id: 2
weight: 1
```

File ke-2:
```php
id: 2
weight: 30
```

File ke-3:
```php
id: 2
weight: 40
```

Hal yang sama kita lakukan kepada objek lainnya.

Begitu Anda selesai maka inilah bentuk [[form]] dari projek ini. 

; 1729 = 7 x 13 x 19 = (1 + 6) x (1 + 6 + 6) x (1 + 6 + 6 + 6)

Mengapa bisa sampai kesitu?

<br>Silahkan ikuti ''[[Plugin#Arsitektur|bagian selanjutnya]]''.. 

Sekian.


'''SALAM Sukses!'''<br>
'''© [[Chetabahana Project|https://github.com/MarketLeader]]'''<br>
[[<img src=https://stackexchange.com/users/flair/5054985.png>|https://stackoverflow.com/users/4058484/chetabahana?tab=profile]]  

==''Referensi''==

https://jekyllcodex.org/without-plugin/form-builder/

<table>
  <thead>
    <tr>
      <th>[[:arrow_double_up:|https://github.com/chetabahana/chetabahana.github.io/wiki]]</th>
      <th>[[:arrow_up_small:|https://github.com/MarketLeader/marketleader.github.io/wiki]]</th>
      <th>[[Home|:rewind:]] [[Home|Intro]]</th>
      <th>[[:arrow_backward:|https://github.com/MarketLeader/Tutorial-HelloWorld/wiki]] [[Prev|https://github.com/MarketLeader/Tutorial-HelloWorld/wiki]]</th>
      <th>[[:repeat:|https://github.com/MarketLeader/Tutorial-HelloWorld/wiki]] [[Repo|https://github.com/chetabahana/chetabahana.github.io]]</th>
      <th>[[Next|https://github.com/MarketLeader/Google-Sites-API/wiki]] [[:arrow_forward:|https://github.com/MarketLeader/Google-Sites-API/wiki]]</th>
      <th>[[Last|https://github.com/MarketLeader/Google-Content-API/wiki]] [[:fast_forward:|https://github.com/MarketLeader/Google-Content-API/wiki]]</th>
      <th>[[:arrow_down_small:|https://github.com/MarketLeader/Google-AdWords-API/wiki]]</th>
      <th>[[:arrow_double_down:|https://github.com/MarketLeader/Toko-Chetabahana/wiki]]</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>[[<img src="https://avatars1.githubusercontent.com/u/36441664?v=3&s=20" class="avatar">|https://github.com/chetabahana]]</td><td colspan="7">This [[Form#table-of-contents|wiki]] is courtesy of '''[[Chetabahana Project|https://github.com/MarketLeader]]'''. Find all of them on '''[[Project Map|https://github.com/chetabahana/chetabahana.github.io/wiki/Skema#Implementasi]]'''.</td><td>[[<img src="https://avatars2.githubusercontent.com/u/36441943?v=3&s=20">|https://github.com/MarketLeader]]</td>   
    </tr>
  </tbody>
</table>

