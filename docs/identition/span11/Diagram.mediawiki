''[[Diagram|https://id.wikipedia.org/wiki/Diagram]]'' adalah suatu representasi simbolis informasi dalam bentuk geometri dua dimensi atau visualisasi tiga dimensi yang kemudian diproyeksikan ke permukaan dua dimensi.

__TOC__

==Struktur==

* [[10+ JavaScript libraries to draw your own diagrams|https://modeling-languages.com/javascript-drawing-libraries-diagrams]]

Pada sesi ini kita akan bahas tentang latar belakang penggunaan, fungsi spesifik dan jenis dari diagram yang digunakan dalam project.

<br>[[Bagan|<img src=https://user-images.githubusercontent.com/36441664/81776188-96348700-9518-11ea-8f49-1d4ef07aa259.png>]]

Berdasarkan [[spesifikasinya|https://en.wikipedia.org/wiki/Unified_Modeling_Language]] diagram memiliki banyak jenis.

[[<img src=https://user-images.githubusercontent.com/36441664/82217831-2f163880-9945-11ea-98f3-27a534654ed0.png>|https://en.wikipedia.org/wiki/Unified_Modeling_Language#Diagrams]]  

Pada project ini akan diimplementasikan sejumlah diagram untuk merekonstruksi penelusuran. Diantaranya seperti yang terlihat dalam [[diagram sintaks|http://en.wikipedia.org/wiki/Syntax_diagram]] di bawah ini.

Diagram ini adalah alat untuk menggambarkan [[sintaks|https://en.wikipedia.org/wiki/Syntax]], juga dikenal sebagai [[diagram rel|https://www.bottlecaps.de/rr/ui]], dibangun dari [[tata bahasa bebas konteks|http://en.wikipedia.org/wiki/Context-free_grammar]] yang ditentukan dalam [[EBNF|http://en.wikipedia.org/wiki/EBNF]]. 

[[<img src=https://user-images.githubusercontent.com/36441664/69912819-3b730b80-1461-11ea-85f9-b4499cd4fdea.png>|https://www.bottlecaps.de/rr/ui]]  

Fitur yang satu ini adalah
# penggunaan notasi [[EBNF W3C|http://www.w3.org/]],
# web-memoing tata bahasa dari spesifikasi W3C,
# pengeditan tata bahasa secara online,
# presentasi diagram dalam [[SVG|http://www.w3.org/Graphics/SVG/]],
# sepenuhnya ditulis dalam bahasa web ([[XQuery|http://en.wikipedia.org/wiki/XQuery]], [[XHTML|http://en.wikipedia.org/wiki/XHTML]], [[CSS|http://en.wikipedia.org/wiki/Cascading_Style_Sheets]], [[JavaScript|http://en.wikipedia.org/wiki/JavaScript]]).

Diagram sintaks telah digunakan selama beberapa dekade sekarang, jadi konsepnya sudah terkenal, dan beberapa alat untuk pembuatan diagram sudah ada. 

[[<img src=https://user-images.githubusercontent.com/36441664/71575563-fd304100-2b1f-11ea-97b3-abd2eaa06f23.png width=400>|https://www.ntu.edu.sg/home/ehchua/programming/java/J3a_OOPBasics.html]]

[[<img src=https://raw.githubusercontent.com/tdwg/vocab/master/tdwg-version-model-2015-07-15.png width=500>|https://github.com/tdwg/vocab/blob/master/version-model.md]]

===Format===

Method dalam sebuah class dapat merubah Property yang dimiliki oleh class tersebut. Sebuah class merupakan dasar dari modularitas dan struktur dalam pemrograman berorientasi object. 

[[Diagram#class|<img src=https://user-images.githubusercontent.com/36441664/70871031-63b84980-1fcd-11ea-8379-6df001761e0b.png>]]  

Properti adalah atribut yang menggambarkan data dalam suatu kelas. Misalnya kelas Film memiliki properti seperti judul, MovieId, dan hasMovieBudget. Kelas Kredit Film memiliki properti seperti hasActor dan hasDirector.

[[<img src=https://user-images.githubusercontent.com/36441664/70888111-1e6a3b00-2012-11ea-9a15-608b9c1c4275.png width=550>|https://docs.cambridgesemantics.com/anzo/v4.1/userdoc/models-intro.htm]]  

Penelusuran dilakukan untuk dua jenis properti:
# Properti data: Menghubungkan kelas ke nilai sederhana. Misalnya, di kelas Film, properti judul dan movieId terkait dengan nilai-nilai sederhana.
# Properti objek: Menghubungkan kelas ke kelas lain. Misalnya, kelas Movie Person berkaitan dengan kelas Aktor dan Sutradara

====Model====

[[Subkelas|https://en.wikipedia.org/wiki/Inheritance_(object-oriented_programming)#Subclasses_and_superclasses]] adalah kelas yang berasal dari kelas lain. Subclass mewarisi keadaan dan perilaku dari semua leluhurnya. Istilah superkelas mengacu pada leluhur langsung suatu kelas dan juga semua kelas yang berpengaruh.  

Mengacu kepada [[Route#pola|pola]]  dalam project ini kita akan telusuri sejauh Sub Class yang dapat diindikasikan. Untuk kasus yang sangat abstrak kita juga akan perlu menelaah kasusnya secara ''[[Tree#ontology|ontologi]]''.

[[<img src=https://user-images.githubusercontent.com/36441664/70889762-e664f700-2015-11ea-80e5-f1d82fee804d.png width=550>|https://docs.cambridgesemantics.com/anzo/v4.1/userdoc/models-intro.htm]]  

Dalam contoh di atas, "Pulp Fiction" adalah turunan dari kelas Film. Orang adalah kelas yang lebih umum, atau kelas dasar, untuk Aktor dan Direktur. Dan Aktor dan Direktur adalah subkelas Person

====Hirarki====

[[<img src=https://user-images.githubusercontent.com/36441664/71370072-4bed5080-25df-11ea-9502-7a0c5381a8c7.png>|https://www.intechopen.com/online-first/application-of-artificial-intelligence-in-modern-healthcare-system]]

[[Diagram#object|<img src=https://user-images.githubusercontent.com/36441664/70118418-7c099980-169a-11ea-8093-6e8c288ff758.png width=500>]]

===Metode===

Konsep yang akan kita lakukan untuk merealisasikan skema yang sudah diuraikan di atas adalah skema ''[[ProofReading|https://github.com/chetabahana/chetabahana.github.io/wiki/Publishing#flexible]]''. Pada Sistem DNA ''[[Rekombinasi|https://github.com/chetabahana/chetabahana.github.io/wiki/Program#model]]'' berkaitan dengan ''[[Replikasi Genetik|https://github.com/chetabahana/chetabahana.github.io/wiki/Artifacts#konfigurasi]]''.

[[<img src=https://user-images.githubusercontent.com/36441664/81181797-2a619400-8fd7-11ea-8462-9e1aab20c709.jpg>|https://github.com/chetabahana/chetabahana.github.io/wiki/Publishing#Flexible]]

Skema ini dilakukan via [[0#Theory|formasi 1729]]. Ini dimulai dari komposisi angka dua (2) yang melibatkan semua angka² yang tidak masuk tabulasi vektor. Detilnya diulas di ''[[Publishing|https://github.com/chetabahana/chetabahana.github.io/wiki/Publishing#Flexible]]''

```json
id: 2

---+-----+-----+-----+-----+
 1 | 19  | 1   | 20  | 21  |-----------------------
---+-----+-----+-----+-----+                       |
 2 | 18  | 21  | 39  | 60  |-----------------      |
---+-----+-----+-----+-----+                 |     |
 3 |{63} | 40  | 103 | 143 |-----------      |     |
---+-----+-----+-----+-----+           |     |     |
 4 | 37  | 104 | 141 | 245 |-----      |     |     |
---+-----+-----+-----+-----+     |     |     |     |
 5 | 10  | 142 | 152 | 294 |- 10 | 13  | 12  | 12  | 18
---+-----+-----+-----+-----+     |     |     |     |
 6 | 24  | 153 | 177 | 332 |-----      |     |     |
---+-----+-----+-----+-----+           |     |     |
 7 | 75  | 178 | 253 | 431 |-----------      |     |
---+-----+-----+-----+-----+                 |     |
 8 | 30  | 254 | 284 | 538 |-----------------      |
---+-----+-----+-----+-----+                       |
 9 | 1   | 285 | 286 | 571 |-----------------------
===+=====+=====+=====+=====+
45 | 277 |
---+-----+

Permutation:
143 x 2 = 286
143 = d(8), 286 = d(7)
10 + 13 + 12 + 12 + 18 = 65 = d(11) = d(2)
```

Polaritas angka enam (6) ada di angka prima ke-18 yaitu enampuluh satu (61). Karena itu pola ini ditrigger oleh angka dua (2) sebagai prima terkecil yang memunculkan polaritas 18.

```json
id: 26

---+-----+-----+-----+-----+
 1 |  {5}|   1 |  6  |   7 |----------------------------
---+-----+-----+-----+-----+                            |
 2 |  {2}|   7 |  9  |  16 |----------------------      |
---+-----+-----+-----+-----+                      |     |                 
 3 | {58}|  10 |  68 |  78 |----------------      |     |
---+-----+-----+-----+-----+                |     |     |
 4 |  35 | {69}| 104 | 173 |----------      |     |     |
---+-----+-----+-----+-----+          |     |     |     |
 5 |  17 | 105 |{122}| 227 |          |     |     |     |
---+-----+-----+-----+-----+- Cross  17  Δ26|43Δ30|13Δ17|30
 6 |  17 |{123}| 140 | 263 |          |     |     |     |
---+-----+-----+-----+-----+          |     |     |     |
 7 | {18}| 141 | 159 | 300 |----------      |     |     |
---+-----+-----+-----+-----+                |     |     |
 8 | {15}| 160 | 175 | 335 |----------------      |     |
---+-----+-----+-----+-----+                      |     |
 9 | {15}| 176 | 191 | 367 |----------------------      |
---+-----+-----+-----+-----+                            |
10 |  35 |{192}| 227 | 419 |----------------------------   
---+-----+-----+-----+-----+
```

Jika implementasi '''id: 57''' dari flowchart kita melakukan transcript simbol kedalam angka² maka di '''157''' ini berlaku kebalikannya yaitu translasi angka yang ada pada text ke bentuk simbol.

; 61 = 18th prime

```json
id: 6

---+-----+-----+-----+-----+
 1 |  72 | 1   |{73} |  74 |-----------------          57. Flowchart <-- 7(111)
---+-----+-----+-----+-----+                 |          v                   |
 2 |  20 |{74} | 94  |{168}|-----------      |{157} >>{58} Sequence <--- 8(111)
---+-----+-----+-----+-----+           | {1} |          v                   |
 3 |  18 | 95  | 113 | 208 |-----      |     |         59. Grammar <---- 9(111)
---+-----+-----+-----+-----+     | {5} |     |          v                   |
 4 |   7 |{114}| 121 | 235 |-{7} |     |     |         60. Channel<--6x10-->Δ
---+-----+-----+-----+-----+     |     |     |          v                   |
 5 |  13 | 122 | 135 | 257 |-----      |     |{61} >>  61. Route - Φ(61)-->{16}
---+-----+-----+-----+-----+           |     |          v                   |
 6 |  19 | 136 | 155 | 291 |-----------      |         62. Tree -- Φ(62)-->{26}
---+-----+-----+-----+-----+                 |          v                   |
 7 |   9 |{156}|{165}| 321 |----------------           63. Out --- Φ(63)-->{369}
---+-----+-----+-----+-----+
```

Pada projek ini kita gunakan ''[[Bagan Sequence|https://github.com/chetabahana/sequence/wiki]]'' untuk mewakili tujuh (7) alur proses (1) 1 ke 2, (2) 2 ke 3, (3) 3 ke 4, (4) 4 ke 5, (5) 5 ke 6, (6) 6 ke 3 dan (7) 6 ke 1 seperti berikut ini:

[[<img src=https://user-images.githubusercontent.com/36441664/104811435-f8732380-582d-11eb-850f-5d807e6825f1.png>|https://github.com/chetabahana/chetabahana.github.io/wiki/58#pola]]

Diagram ini merupakan perangkat yang dapat digunakan untuk menterjemahkan angka² kedalam bentuk dan warna. Padanya kita alokasikan 157 ke ''1+57'' atau '''''[[id: 58|https://github.com/chetabahana/chetabahana.github.io/wiki/58#pola]]''''' sebagai kelanjutan ''[[id: 57|https://github.com/chetabahana/chetabahana.github.io/wiki/57#pola]]''.

====Proses====

[[<img src=https://user-images.githubusercontent.com/36441664/71373214-05045880-25e9-11ea-96c4-42c710cfa484.png width=600>|https://schema.org/docs/automotive.html]]

====Matriks====

[[<img src=https://user-images.githubusercontent.com/36441664/71666689-99fb1480-2d94-11ea-8c7e-4f16f75b7f8d.png width=600>]]

[[https://user-images.githubusercontent.com/36441664/71659208-5515b480-2d79-11ea-859f-a20dea0cf680.jpg]]

===Interaksi===

[[https://user-images.githubusercontent.com/36441664/71636347-24425c00-2c61-11ea-952c-bd219b086d7a.png]]

====Internal====

[[https://user-images.githubusercontent.com/36441664/71636056-bc3e4680-2c5d-11ea-81d9-2fd77b0212b5.png]]

====Eksternal====

Ketika Anda mengembangkan suatu program bisa saja terjadi bahwasanya Anda akan memerlukan banyak produk turunan sehingga eksekusinya menjadi sangat kompleks.  

[[<img src=https://user-images.githubusercontent.com/36441664/71576455-59e12b00-2b23-11ea-835e-1dc3beb48abe.png>|https://www.geeksforgeeks.org/oops-object-oriented-design/]]

Oleh karenanya diperlukan pola penelusuran yang dapat mengidentifikasi permasalahan secara efisien. Dalam project ini kita akan menggunakan pola penelusuran dengan ''[[Diagram#metode-oops|Metode OOP]]''.  

[[https://user-images.githubusercontent.com/36441664/71567977-f68cd400-2af5-11ea-95c5-a7d553af70a4.png]]

[[Diagram#object|<img src=https://user-images.githubusercontent.com/36441664/70888142-3215a180-2012-11ea-9e30-c0803a8698e9.png width=500>]]

[[<img src=https://raw.githubusercontent.com/tdwg/vocab/master/tdwg-standards-hierarchy-2017-01-23.png width=600>|https://github.com/tdwg/rs.tdwg.org#tdwg-standards-metadata]]

Seperti telah dijelaskan pada bagian ''[[Diagram#Konstruksi|Konstruksi Diagram]]'', pembentukan ''[[Diagram#piramida|piramida data]]'' pada project ini ''[[Program|dikonfigurasikan]]'' dengan ''[[Diagram#paket-npm|Paket NPM]]'' pada setiap repository [[Tree#arsitektur|yang terkait]] dan diupdate secara otomatis berdasarkan ''[[Tree#Delivery|progresnya]]'' terhadap ''[[Pola Kerja|https://github.com/MarketLeader/marketleader.github.io/wiki]]'' via ''[[Tree#custom-api|Custom API]]'' dan ''[[GitHub Actions]]''.

[[Akun-GitHub-Actions|<img src=https://user-images.githubusercontent.com/36441664/71581711-14c7f380-2b39-11ea-9f61-8cf3df12a100.png>]]

==Formasi==
[[https://user-images.githubusercontent.com/36441664/82458017-610fd200-9ae0-11ea-8ed2-11a6faeee380.gif]]

[[https://user-images.githubusercontent.com/36441664/82580411-49f0e300-9bb9-11ea-9506-19bcad85c4bb.gif]]

===Modul===

[[https://user-images.githubusercontent.com/36441664/82588632-4d8a6700-9bc5-11ea-9bab-4cb69cedbafb.png]]

<img src=https://user-images.githubusercontent.com/36441664/82580358-3cd3f400-9bb9-11ea-846d-8dd6401f176d.jpeg>

<img src=https://user-images.githubusercontent.com/36441664/82580366-3e9db780-9bb9-11ea-8186-8519e0a53c9f.jpeg>

<img src=https://user-images.githubusercontent.com/36441664/82580378-40677b00-9bb9-11ea-85ab-bf929390ba21.jpeg>

[[Diagram|<img src=https://user-images.githubusercontent.com/36441664/83051986-e8c58580-a078-11ea-8155-703bb84bc1e8.png width=400>]]

[[https://user-images.githubusercontent.com/36441664/82582691-9ee22880-9bbc-11ea-953d-b03bd7c18fe8.gif]]

[[https://user-images.githubusercontent.com/36441664/82582689-9db0fb80-9bbc-11ea-97f3-7d26fdbdc77b.gif]]

[[https://user-images.githubusercontent.com/36441664/83052064-fda21900-a078-11ea-8a7c-23b6df37ba0f.jpg]]

====Scope====
[[https://user-images.githubusercontent.com/36441664/82458084-7553cf00-9ae0-11ea-9959-b230a72a3157.jpg]]

[[https://user-images.githubusercontent.com/36441664/82458020-6240ff00-9ae0-11ea-88a3-52d36017befb.png]]

[[https://user-images.githubusercontent.com/36441664/82737416-2bc2e880-9d5b-11ea-8325-8b130693b3c4.png]]

====Extend====

[[https://user-images.githubusercontent.com/36441664/82728050-47f16600-9d18-11ea-98db-be7a07628409.png]]

[[https://user-images.githubusercontent.com/36441664/82737414-2a91bb80-9d5b-11ea-8a60-90faeb64bbb3.png]]

[[https://user-images.githubusercontent.com/36441664/82728000-209a9900-9d18-11ea-9385-66f75048f600.jpg]]

===Proses===

[[https://user-images.githubusercontent.com/36441664/82452045-f6a76380-9ad8-11ea-93c9-872d04c352d6.jpg]]

[[https://user-images.githubusercontent.com/36441664/82452019-f1e2af80-9ad8-11ea-8f7d-49e6ac3765af.jpg]]

[[https://user-images.githubusercontent.com/36441664/70721601-75c58e00-1d28-11ea-8329-d780c27ee7bd.png]]

[[https://user-images.githubusercontent.com/36441664/69497959-189e9f80-0f15-11ea-86bd-457378ca7567.png]]

====Sinergi====

[[https://user-images.githubusercontent.com/36441664/82458069-6ff68480-9ae0-11ea-9f80-b8d3290a8d71.jpg]]

[[https://user-images.githubusercontent.com/36441664/82458073-71c04800-9ae0-11ea-957e-1aa1335b1d44.png]]

[[https://user-images.githubusercontent.com/36441664/82737463-48f7b700-9d5b-11ea-8c94-681dde0a5d03.png]]

====Numerik====

[[https://user-images.githubusercontent.com/36441664/82737837-efdd5280-9d5d-11ea-80c7-dd0f1f680a9a.jpg]]

[[https://user-images.githubusercontent.com/36441664/82452030-f4450980-9ad8-11ea-8b42-814357ec8dfe.jpg]]

[[https://user-images.githubusercontent.com/36441664/82454158-a1208600-9adb-11ea-8829-b0573dd95e1e.jpg]]

[[https://user-images.githubusercontent.com/36441664/82580389-44939880-9bb9-11ea-8059-3fce6ac040ea.jpg]]

[[https://user-images.githubusercontent.com/36441664/82580395-465d5c00-9bb9-11ea-8202-83e5484bbba8.jpg]]

[[https://user-images.githubusercontent.com/36441664/82452427-6f0e2480-9ad9-11ea-9692-3d044668dbe2.jpg]]

[[https://user-images.githubusercontent.com/36441664/82737863-04b9e600-9d5e-11ea-9958-b49eb12ee5b3.jpg]]

===Matriks===
*[[Module Versions|https://github.com/chetabahana/tree/blob/Chetabahana/doc/abi_version_registry.json]]

<br>[[<img src=https://user-images.githubusercontent.com/36441664/72682632-ba9bcc00-3b01-11ea-9a94-aabac5f3e3ff.jpg width=250>]]

[[https://user-images.githubusercontent.com/36441664/72731176-b89b4100-3bc5-11ea-8a94-a4a620489166.gif]]

[[https://user-images.githubusercontent.com/36441664/72683874-1ec48d00-3b0e-11ea-905e-89539630f51e.png]]

[[https://user-images.githubusercontent.com/36441664/72683588-34848300-3b0b-11ea-9424-9b71321cb0ec.png]]

[[https://user-images.githubusercontent.com/36441664/75837141-9157a680-5df6-11ea-9327-36698511a1f4.png]]

[[https://user-images.githubusercontent.com/36441664/83274808-78457280-a1f8-11ea-9ae0-2d84de83d19a.png]]

====Dimensi====

[[<img src=https://user-images.githubusercontent.com/36441664/73960029-c6c6bc80-493c-11ea-9fae-511f6db26c35.png width=400>]]

[[https://user-images.githubusercontent.com/36441664/74556668-28b4a100-4f91-11ea-960f-dfc804f76e8a.png]]

[[https://user-images.githubusercontent.com/36441664/74097748-85076300-4b42-11ea-811f-51122a392e89.png]]

[[<img src=https://user-images.githubusercontent.com/36441664/70066334-1deba080-161f-11ea-884a-9215980b4243.png>|https://github.com/MarketLeader/marketleader.github.io/wiki]]

* [[Diagram#structure|Struktur]] dan [[Diagram#Hirarki|Hirarki]] disetel berdasarkan [[Diagram#Piramida|Piramida Data]] via [[layout script|https://github.com/chetabahana/chetabahana.github.io/blob/Chetabahana/_layouts/default.json]]
* [[Diagram#tabulasi|Tipe Diagram]] dipilih dan [[dijalankan|https://github.com/chetabahana/skema/tree/gh-pages/js/draw]] berdasarkan [[Output JSON|https://chetabahana.github.io/feed.json]] via [[initial script|https://chetabahana.github.io/skema/js/draw.js]] 
* [[Diagram#diagram|Setiap Diagram]] dikembangkan [[Diagram#oops|secara terpisah]] dan [[Publishing|diintegrasikan]] via [[Fitur-GitHub|Fitur GitHub]]
* [[Diagram#piramida|Piramida data]] pada [[Fitur-GitHub#git|repository terkait]] diupdate dengan [[Diagram#paket-npm|Paket NPM]] via [[GitHub Actions]]
* [[Package|Kendali perubahan]] (versi) [[Listener|diatur]] via [[Diagram#scripts-field-handle|scripts-field-handle]] yang [[ditempatkan|https://github.com/chetabahana/chetabahana.github.io/tree/master/_feeds/section/skema]] sesuai [[Diagram#korelasi|Korelasi]]

====Piramida====

Berdasarkan [[Diagram#konsep|Konsep]] di atas, [[Diagram#object|Object]] akan dikembangkan sebagai pengejawantahan dari [[Diagram#etimologi|etimologi]], sedangkan untuk [[Diagram#terminologi|terminologi]] maka kita akan terapkan metode [[Diagram#encapsulation|Encapsulation]] sampai ke [[Diagram#inheritance|Inheritance]] dimana pada proses pembentukan [[Diagram#class|Class]] akan ''[[Diagram#akurasi|ditelusuri]]'' akurasinya terhadap [[Diagram#kaidah-kognitif|kaidah kognitif]]. 

[[<img src=https://user-images.githubusercontent.com/36441664/71191184-80e46500-22b8-11ea-9f97-5ce856a39820.png>|http://www.allinoneblogs.com/java-tutorials/oops-concept/object-oriented-programming/]]  

Pola penelusuran ini akan dilakukan berdasarkan ''[[Diagram#piramida|piramida]]'' dari setiap pola dengan menggunakan jenis diagram yang dapat mendukung interaksi dalam proses pewarisan. Berikut ini tabulasi antara pola penelusuran dan jenis diagram yang digunakan. 

<table>
<tr><th>No.</th><th>Metode</th><th>Penelusuran</th><th>Implementasi</th><th>Diagram</th></tr>
<tr><td>[[1.|https://chetabahana.github.io/#chetabahana-skema?pad=1]]</td><td>[[Diagram#object|Object]] (parent)</td><td>-</td><td>[[Attribute]] (parent)</td><td>[[Flowchart]]</td></tr>
<tr><td>[[2.|https://chetabahana.github.io/#chetabahana-skema?pad=2]]</td><td>[[Diagram#encapsulation|Encapsulation]]</td><td>[[Pola|https://github.com/MarketLeader/marketleader.github.io/wiki]]</td><td>[[Artifacts]]</td><td>[[Sequence]]</td></tr>
<tr><td>[[3.|https://chetabahana.github.io/#chetabahana-skema?pad=3]]</td><td>[[Diagram#abstraction|Abstraction]]</td><td>[[Diagram#Hirarki|Hirarki]]</td><td>[[Method]]</td><td>[[Grammar]]</td></tr>
<tr><td>[[4.|https://chetabahana.github.io/#chetabahana-skema?pad=4]]</td><td>[[Diagram#polymorphism|Polymorphism]]</td><td>[[Diagram#korelasi|Korelasi]]</td><td>[[Model]]</td><td>[[Channel]]</td></tr>
<tr><td>[[5.|https://chetabahana.github.io/#chetabahana-skema?pad=5]]</td><td>[[Diagram#inheritance|Inheritance]]</td><td>[[Fitur-GitHub#git|Repository]]</td><td>[[Track]]</td><td>[[Route]]</td></tr>
<tr><td>[[6.|https://chetabahana.github.io/#chetabahana-skema?pad=6]]</td><td>[[Diagram#class|Class]]</td><td>[[GitHub Actions|Workflows]]</td><td>[[Trace]]</td><td>[[Tree]]</td></tr>
<tr><td>[[7.|https://chetabahana.github.io/#chetabahana-skema?pad=1]]</td><td>[[Diagram#object|Object]] (child)</td><td>[[Diagram#kaidah_kognitif|Kaidah Kognitif]]</td><td>[[Attribute]] (child)</td><td>[[Flowchart]]</td></tr>
</table>

''Catatan'':
# Dalam project ini proses penelusuran akan disetel secara berulang dimana targetnya adalah produk turunan (child) dari object yang diuraikan pada [[Konsep Kerja|https://github.com/MarketLeader/marketleader.github.io/wiki]].
# ''[[Sequence|Diagram Sequence]]'' seperti terlihat di bawah ini disetel sebagai titik awal yang diasumsikan sebagai hasil proses penelusuran dari object sebelumnya (parent).

Hasil yang diharapkan akan berupa [[Diagram#piramida|piramida data]] dengan formasi ''[[Diagram#akurasi|akurasi pewarisan]]'' yang memadai untuk [[Program#implementasi|diimplementasikan]] kedalam tujuan yang lebih spesifik.

<br>[[Mapping|<img src=https://user-images.githubusercontent.com/36441664/67816683-560e3980-fadd-11e9-8a30-36901cbceaad.png>]]

==Realisasi==

[[<img src=https://user-images.githubusercontent.com/36441664/82493161-b0bac180-9b11-11ea-97d2-f85a9867b11f.jpg width=250>|http://www.hexspin.com/cell-types/]]

[[<img src=https://user-images.githubusercontent.com/36441664/82492085-d21aae00-9b0f-11ea-9f40-c8963afb6ddb.jpg width=300>|http://www.hexspin.com/circular/]]

[[https://user-images.githubusercontent.com/36441664/83331880-a8f1de80-a2c2-11ea-95c2-c1cd7b536d17.png]]

===Internal===
* [[Final analytics code — super compact and simple|https://towardsdatascience.com/how-a-simple-mix-of-object-oriented-programming-can-sharpen-your-deep-learning-prototype-19893bd969bd#7f7a]]

<br>[[<img src=https://user-images.githubusercontent.com/36441664/72747430-358ae280-3be7-11ea-9869-77b76d9302a5.jpg width=300>]]

====Proporsi====
[[<img src=https://user-images.githubusercontent.com/36441664/72747137-64ed1f80-3be6-11ea-981f-ee442b67c00a.jpg width=400>]]

[[<img src=https://user-images.githubusercontent.com/36441664/70118418-7c099980-169a-11ea-8093-6e8c288ff758.png width=600>|https://github.com/chetabahana/tree/wiki]]

====Orientasi====
[[https://user-images.githubusercontent.com/36441664/82580340-3776a980-9bb9-11ea-8426-3b0867da21b4.png]]

[[https://user-images.githubusercontent.com/36441664/82580328-35144f80-9bb9-11ea-8053-6ad70d115237.png]]

[[https://user-images.githubusercontent.com/36441664/82580330-35ace600-9bb9-11ea-9388-7cdb329e67a0.png]]

[[https://user-images.githubusercontent.com/36441664/83052085-0692ea80-a079-11ea-85bf-06bf6a3052d1.jpg]]

===Interface===

[[https://user-images.githubusercontent.com/36441664/82580278-26c63380-9bb9-11ea-812c-55f459b4e542.gif]]

[[https://user-images.githubusercontent.com/36441664/82580292-2af25100-9bb9-11ea-8ca1-1132e40f965e.png]]

====Standard====

[[https://user-images.githubusercontent.com/36441664/82704993-f9ed4b80-9ca0-11ea-876e-ffdacd8946c4.jpg]]

[[https://user-images.githubusercontent.com/36441664/82705032-08d3fe00-9ca1-11ea-93b2-a1e89f6c93a0.jpg]]

[[https://user-images.githubusercontent.com/36441664/82705053-125d6600-9ca1-11ea-9ac8-1d3140f50b7b.jpg]]

[[https://user-images.githubusercontent.com/36441664/82737857-ff5c9b80-9d5d-11ea-8da2-454542d60967.jpg]]

====Abstraksi====

Dengan memodelkan tipe dan struktur modul bahasa pemrograman ke model berbasis-kalkulus memungkinkan untuk mengeksplorasi tentang sifat-sifat abstrak object secara sederhana.

[[<img src=https://user-images.githubusercontent.com/36441664/71628842-c267ff00-2c2c-11ea-840b-84a5a52e6ab1.png width=600>|https://github.com/Mzk-Levi/texts/blob/master/On%20Understanding%20Types%2C%20Data%20Abstraction%2C%20and%20Polymorphism.pdf]]

Secara matematis metode ini dapat berfungsi sebagai dasar desain dengan fasilitas yang lebih ekspresif dan tidak tergantung pada bahasa pemrograman dimana modul tersebut disematkan.

Pemodelan ini menjadi dasar untuk [[Grammar#instantiation|diterapkan]] secara ''monomorfik'' dimana selanjutnya ''[[Channel#terapan|mekanisme polimorfik]]'' seperti ''overloading, koersi, subtyping, dan parameterisasi'' dapat ditinjau.

[[<img src=https://user-images.githubusercontent.com/36441664/39117383-03b2a9a4-4711-11e8-9f72-1d1cb7d61634.png>|https://github.com/MarketLeader/Tutorial-Buka-Toko/wiki/Continuous-Delivery#tampilkan-produk-unggulan]]

===Eksternal===

[[Sequence#proses|<img src=https://user-images.githubusercontent.com/36441664/79077930-0fc93180-7d2f-11ea-9044-0ecec0576a1b.jpg width=300>]]

[[Diagram|<img src=https://user-images.githubusercontent.com/36441664/83052033-f713a180-a078-11ea-8cab-00a4e73c96d9.gif width=300>]]

[[https://user-images.githubusercontent.com/36441664/82582750-af929e80-9bbc-11ea-845e-938a1a67098f.gif]]

====Kapsulisasi====

[[https://user-images.githubusercontent.com/36441664/82706229-623d2c80-9ca3-11ea-9ab7-e1fd5512ce6a.jpg]]

[[https://user-images.githubusercontent.com/36441664/82706355-99abd900-9ca3-11ea-8788-34d22158d11e.jpg]]

====Implementasi====

```json

id: 28

---+-----+-----
 1 | 1   | 6
---+-----+-----
 2 | 7   | 13
---+-----+-----
 3 | 14  | 21
---+-----+-----
 4 | 22  | 28
---+-----+-----
 5 | 29  | 42
---+-----+-----
 6 | 43  | 60
---+-----+-----
 7 | 61  | 75
---+-----+-----
 8 | 76  | 82
---+-----+-----
 9 | 83  | 88
---+-----+-----

```

[[<img src=https://user-images.githubusercontent.com/36441664/71568434-d3642380-2af9-11ea-95dd-627d55a24674.png>|https://sites.google.com/site/sureshdevang/soa?tmpl=%2Fsystem%2Fapp%2Ftemplates%2Fprint%2F&showPrintDialog=1]]

==''Referensi''==
* [[Diktat OOP (Java) - pdf|http://if-lab.itenas.ac.id/iflab/wp-content/uploads/2018/03/Diktat%20OOP%20by%20Jasman%20Pardede.pdf]]
* [[Nested hierarchies for Sequelize|https://www.npmjs.com/package/sequelize-hierarchy]]
* [[Pemrograman Berorientasi Objek (OOP)|https://ndoware.com/pemrograman-berorientasi-objekobject-oriented-programming-oop.html]]
* [[Differences Between Functional Programming vs OOP|https://www.educba.com/functional-programming-vs-oop/]]

Sekian.


'''SALAM Sukses!'''<br>
'''© [[Chetabahana Project|https://github.com/MarketLeader]]'''<br>
[[<img src=https://stackexchange.com/users/flair/5054985.png>|https://stackoverflow.com/users/4058484/chetabahana?tab=profile]] 


<table>
  <thead>
    <tr>
      <th>[[:arrow_double_up:|https://github.com/chetabahana/chetabahana.github.io/wiki]]</th>
      <th>[[:arrow_up_small:|https://github.com/MarketLeader/marketleader.github.io/wiki]]</th>
      <th>[[Home|:rewind:]] [[Home|Intro]]</th>
      <th>[[:arrow_backward:|https://github.com/MarketLeader/Tutorial-HelloWorld/wiki]] [[Prev|https://github.com/MarketLeader/Tutorial-HelloWorld/wiki]]</th>
      <th>[[:repeat:|https://github.com/MarketLeader/Tutorial-HelloWorld/wiki]] [[Repo|https://github.com/chetabahana/chetabahana.github.io]]</th>
      <th>[[Next|https://github.com/MarketLeader/Google-Sites-API/wiki]] [[:arrow_forward:|https://github.com/MarketLeader/Google-Sites-API/wiki]]</th>
      <th>[[Last|https://github.com/MarketLeader/Google-Content-API/wiki]] [[:fast_forward:|https://github.com/MarketLeader/Google-Content-API/wiki]]</th>
      <th>[[:arrow_down_small:|https://github.com/MarketLeader/Google-AdWords-API/wiki]]</th>
      <th>[[:arrow_double_down:|https://github.com/MarketLeader/Toko-Chetabahana/wiki]]</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>[[<img src="https://avatars1.githubusercontent.com/u/36441664?v=3&s=20" class="avatar">|https://github.com/chetabahana]]</td><td colspan="7">This [[Interface#table-of-contents|wiki]] is courtesy of '''[[Chetabahana Project|https://github.com/MarketLeader]]'''. Find all of them on '''[[Project Map|https://github.com/chetabahana/chetabahana.github.io/wiki/Skema#Implementasi]]'''.</td><td>[[<img src="https://avatars2.githubusercontent.com/u/36441943?v=3&s=20">|https://github.com/MarketLeader]]</td>   
    </tr>
  </tbody>
</table>
