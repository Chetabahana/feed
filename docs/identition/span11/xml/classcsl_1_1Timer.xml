<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classcsl_1_1Timer" kind="class" language="C++" prot="public">
    <compoundname>csl::Timer</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcsl_1_1Timer_1affdcb4c9b2e2c575f269c7192fc9b962" prot="private" static="no" mutable="no">
        <type>std::clock_t</type>
        <definition>std::clock_t csl::Timer::start</definition>
        <argsstring></argsstring>
        <name>start</name>
        <qualifiedname>csl::Timer::start</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/timer.h" line="36" column="18" bodyfile="src/csl/timer.h" bodystart="36" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classcsl_1_1Timer_1a4e2b5a91deada5ffaac6a08a9c6104b6" prot="public" static="no" mutable="no">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; csl::Timer::out</definition>
        <argsstring></argsstring>
        <name>out</name>
        <qualifiedname>csl::Timer::out</qualifiedname>
        <initializer>= std::cout</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/timer.h" line="39" column="18" bodyfile="src/csl/timer.h" bodystart="39" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classcsl_1_1Timer_1a4703764235f28f25cd72acc7f8abf051" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>csl::Timer::Timer</definition>
        <argsstring>()</argsstring>
        <name>Timer</name>
        <qualifiedname>csl::Timer::Timer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/timer.h" line="41" column="5" bodyfile="src/csl/timer.h" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1Timer_1aa1aa7c7c22818b25d0a143c320e7fae8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>csl::Timer::Timer</definition>
        <argsstring>(Timer const &amp;other)</argsstring>
        <name>Timer</name>
        <qualifiedname>csl::Timer::Timer</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Timer" kindref="compound">Timer</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/timer.h" line="46" column="5" bodyfile="src/csl/timer.h" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1Timer_1aa39931149385ccfe76b388550e1df981" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcsl_1_1Timer" kindref="compound">Timer</ref> &amp;</type>
        <definition>Timer &amp; csl::Timer::operator=</definition>
        <argsstring>(Timer const &amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>csl::Timer::operator=</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Timer" kindref="compound">Timer</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/timer.h" line="49" column="11" bodyfile="src/csl/timer.h" bodystart="49" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1Timer_1ad2952b5b7e3752b8e4f10830e1b7ea00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>csl::Timer::~Timer</definition>
        <argsstring>()</argsstring>
        <name>~Timer</name>
        <qualifiedname>csl::Timer::~Timer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/timer.h" line="55" column="5" bodyfile="src/csl/timer.h" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1Timer_1a18f366f20e670e6faa26cd22ff39046f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void csl::Timer::restart</definition>
        <argsstring>()</argsstring>
        <name>restart</name>
        <qualifiedname>csl::Timer::restart</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/timer.h" line="60" column="10" bodyfile="src/csl/timer.h" bodystart="60" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1Timer_1aafb125eece11f786e06384a3f5a36b86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void csl::Timer::display</definition>
        <argsstring>()</argsstring>
        <name>display</name>
        <qualifiedname>csl::Timer::display</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/timer.h" line="66" column="10" bodyfile="src/csl/timer.h" bodystart="66" bodyend="70"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classcsl_1_1Timer_1a641f325d4bab3f279938feced8f2e294" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int csl::Timer::getSecondsFromTime</definition>
        <argsstring>(std::clock_t time)</argsstring>
        <name>getSecondsFromTime</name>
        <qualifiedname>csl::Timer::getSecondsFromTime</qualifiedname>
        <param>
          <type>std::clock_t</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/timer.h" line="73" column="16" bodyfile="src/csl/timer.h" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1Timer_1a6c724eed2083904cffbddadeffa3689d" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int csl::Timer::getModulo</definition>
        <argsstring>(int &amp;init, int modulo)</argsstring>
        <name>getModulo</name>
        <qualifiedname>csl::Timer::getModulo</qualifiedname>
        <param>
          <type>int &amp;</type>
          <declname>init</declname>
        </param>
        <param>
          <type>int</type>
          <declname>modulo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/timer.h" line="78" column="16" bodyfile="src/csl/timer.h" bodystart="78" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1Timer_1a74bc3459848f9f98815776d7fff87a5c" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string csl::Timer::getStringFromTime</definition>
        <argsstring>(int number, int nDigits=2)</argsstring>
        <name>getStringFromTime</name>
        <qualifiedname>csl::Timer::getStringFromTime</qualifiedname>
        <param>
          <type>int</type>
          <declname>number</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDigits</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/timer.h" line="85" column="24" bodyfile="src/csl/timer.h" bodystart="85" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1Timer_1a63cf6df86fddecdbdacca7ffe44fd0cc" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string csl::Timer::elapsedTime</definition>
        <argsstring>(std::clock_t time)</argsstring>
        <name>elapsedTime</name>
        <qualifiedname>csl::Timer::elapsedTime</qualifiedname>
        <param>
          <type>std::clock_t</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/timer.h" line="95" column="24" bodyfile="src/csl/timer.h" bodystart="95" bodyend="105"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/csl/timer.h" line="33" column="1" bodyfile="src/csl/timer.h" bodystart="33" bodyend="106"/>
    <listofallmembers>
      <member refid="classcsl_1_1Timer_1aafb125eece11f786e06384a3f5a36b86" prot="public" virt="non-virtual"><scope>csl::Timer</scope><name>display</name></member>
      <member refid="classcsl_1_1Timer_1a63cf6df86fddecdbdacca7ffe44fd0cc" prot="private" virt="non-virtual"><scope>csl::Timer</scope><name>elapsedTime</name></member>
      <member refid="classcsl_1_1Timer_1a6c724eed2083904cffbddadeffa3689d" prot="private" virt="non-virtual"><scope>csl::Timer</scope><name>getModulo</name></member>
      <member refid="classcsl_1_1Timer_1a641f325d4bab3f279938feced8f2e294" prot="private" virt="non-virtual"><scope>csl::Timer</scope><name>getSecondsFromTime</name></member>
      <member refid="classcsl_1_1Timer_1a74bc3459848f9f98815776d7fff87a5c" prot="private" virt="non-virtual"><scope>csl::Timer</scope><name>getStringFromTime</name></member>
      <member refid="classcsl_1_1Timer_1aa39931149385ccfe76b388550e1df981" prot="public" virt="non-virtual"><scope>csl::Timer</scope><name>operator=</name></member>
      <member refid="classcsl_1_1Timer_1a4e2b5a91deada5ffaac6a08a9c6104b6" prot="public" virt="non-virtual"><scope>csl::Timer</scope><name>out</name></member>
      <member refid="classcsl_1_1Timer_1a18f366f20e670e6faa26cd22ff39046f" prot="public" virt="non-virtual"><scope>csl::Timer</scope><name>restart</name></member>
      <member refid="classcsl_1_1Timer_1affdcb4c9b2e2c575f269c7192fc9b962" prot="private" virt="non-virtual"><scope>csl::Timer</scope><name>start</name></member>
      <member refid="classcsl_1_1Timer_1a4703764235f28f25cd72acc7f8abf051" prot="public" virt="non-virtual"><scope>csl::Timer</scope><name>Timer</name></member>
      <member refid="classcsl_1_1Timer_1aa1aa7c7c22818b25d0a143c320e7fae8" prot="public" virt="non-virtual"><scope>csl::Timer</scope><name>Timer</name></member>
      <member refid="classcsl_1_1Timer_1ad2952b5b7e3752b8e4f10830e1b7ea00" prot="public" virt="non-virtual"><scope>csl::Timer</scope><name>~Timer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
