<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classsgl_1_1IndexChain" kind="class" language="C++" prot="public">
    <compoundname>sgl::IndexChain</compoundname>
    <basecompoundref refid="classsgl_1_1AbstractMultiFunction" prot="public" virt="non-virtual">sgl::AbstractMultiFunction</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsgl_1_1IndexChain_1a5523cdcb1c496e8c06befca0d0b00704" prot="private" static="no" mutable="no">
        <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref></type>
        <definition>csl::Index sgl::IndexChain::a</definition>
        <argsstring></argsstring>
        <name>a</name>
        <qualifiedname>sgl::IndexChain::a</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="233" column="28" bodyfile="src/marty/sgl/indexchain.h" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsgl_1_1IndexChain_1af0b0461feb3171d3cf6f02afc53d2bb3" prot="private" static="no" mutable="no">
        <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref></type>
        <definition>csl::Index sgl::IndexChain::b</definition>
        <argsstring></argsstring>
        <name>b</name>
        <qualifiedname>sgl::IndexChain::b</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="234" column="28" bodyfile="src/marty/sgl/indexchain.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsgl_1_1IndexChain_1a87f23d9e0bdec2a8e0438557b471d631" prot="private" static="no" mutable="no">
        <type><ref refid="classstd_1_1shared__ptr" kindref="compound">std::shared_ptr</ref>&lt; <ref refid="classsgl_1_1Field" kindref="compound">Field</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Field&gt; sgl::IndexChain::psiL</definition>
        <argsstring></argsstring>
        <name>psiL</name>
        <qualifiedname>sgl::IndexChain::psiL</qualifiedname>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="235" column="21" bodyfile="src/marty/sgl/indexchain.h" bodystart="235" bodyend="235"/>
      </memberdef>
      <memberdef kind="variable" id="classsgl_1_1IndexChain_1a5c93091c796430af1b75057745e5e6f7" prot="private" static="no" mutable="no">
        <type><ref refid="classstd_1_1shared__ptr" kindref="compound">std::shared_ptr</ref>&lt; <ref refid="classsgl_1_1Field" kindref="compound">Field</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Field&gt; sgl::IndexChain::psiR</definition>
        <argsstring></argsstring>
        <name>psiR</name>
        <qualifiedname>sgl::IndexChain::psiR</qualifiedname>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="236" column="21" bodyfile="src/marty/sgl/indexchain.h" bodystart="236" bodyend="236"/>
      </memberdef>
      <memberdef kind="variable" id="classsgl_1_1IndexChain_1abee9987bcb16ca97237e5711757b8cbb" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool sgl::IndexChain::fierzFixed</definition>
        <argsstring></argsstring>
        <name>fierzFixed</name>
        <qualifiedname>sgl::IndexChain::fierzFixed</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="237" column="28" bodyfile="src/marty/sgl/indexchain.h" bodystart="237" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a36c058b4df54543e5f6d80a076a1de62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sgl::IndexChain::IndexChain</definition>
        <argsstring>()=default</argsstring>
        <name>IndexChain</name>
        <qualifiedname>sgl::IndexChain::IndexChain</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="40" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1af285442429f0fe49a53860a80a7296d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sgl::IndexChain::IndexChain</definition>
        <argsstring>(IndexChain const &amp;)=default</argsstring>
        <name>IndexChain</name>
        <qualifiedname>sgl::IndexChain::IndexChain</qualifiedname>
        <param>
          <type><ref refid="classsgl_1_1IndexChain" kindref="compound">IndexChain</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="41" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1aa8d2241305a8f1e8eaa4e35b798515d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sgl::IndexChain::IndexChain</definition>
        <argsstring>(Field const &amp;psi)</argsstring>
        <name>IndexChain</name>
        <qualifiedname>sgl::IndexChain::IndexChain</qualifiedname>
        <param>
          <type><ref refid="classsgl_1_1Field" kindref="compound">Field</ref> const &amp;</type>
          <declname>psi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="43" column="5" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="32" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1afdb02b964422b1e47d4ea3f0220dbfc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sgl::IndexChain::IndexChain</definition>
        <argsstring>(csl::Index const &amp;t_a, csl::Index const &amp;t_b)</argsstring>
        <name>IndexChain</name>
        <qualifiedname>sgl::IndexChain::IndexChain</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <declname>t_a</declname>
        </param>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <declname>t_b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="45" column="5" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a272a3dc9fb3a90e60124fd88209c2c4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sgl::IndexChain::IndexChain</definition>
        <argsstring>(GExpr const &amp;mu, csl::Index const &amp;t_a, csl::Index const &amp;t_b)</argsstring>
        <name>IndexChain</name>
        <qualifiedname>sgl::IndexChain::IndexChain</qualifiedname>
        <param>
          <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref> const &amp;</type>
          <declname>mu</declname>
        </param>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <declname>t_a</declname>
        </param>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <declname>t_b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="47" column="5" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="42" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1aa706df942caf8663083ae5dc4068b2f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sgl::IndexChain::IndexChain</definition>
        <argsstring>(std::vector&lt; GExpr &gt; const &amp;mu, csl::Index const &amp;t_a, csl::Index const &amp;t_b)</argsstring>
        <name>IndexChain</name>
        <qualifiedname>sgl::IndexChain::IndexChain</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref> &gt; const &amp;</type>
          <declname>mu</declname>
        </param>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <declname>t_a</declname>
        </param>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <declname>t_b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="49" column="5" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="49" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1ae5c2d130638d7b618401a04727259dd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sgl::IndexChain::IndexChain</definition>
        <argsstring>(Field const &amp;t_a, csl::Index const &amp;t_b)</argsstring>
        <name>IndexChain</name>
        <qualifiedname>sgl::IndexChain::IndexChain</qualifiedname>
        <param>
          <type><ref refid="classsgl_1_1Field" kindref="compound">Field</ref> const &amp;</type>
          <declname>t_a</declname>
        </param>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <declname>t_b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="53" column="5" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="59" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a8105c4e9b18db506fe033a3b9b276442" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sgl::IndexChain::IndexChain</definition>
        <argsstring>(GExpr const &amp;mu, Field const &amp;t_a, csl::Index const &amp;t_b)</argsstring>
        <name>IndexChain</name>
        <qualifiedname>sgl::IndexChain::IndexChain</qualifiedname>
        <param>
          <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref> const &amp;</type>
          <declname>mu</declname>
        </param>
        <param>
          <type><ref refid="classsgl_1_1Field" kindref="compound">Field</ref> const &amp;</type>
          <declname>t_a</declname>
        </param>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <declname>t_b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="55" column="5" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="67" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a081395faa2a77dcfbf601b3c800d4e1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sgl::IndexChain::IndexChain</definition>
        <argsstring>(std::vector&lt; GExpr &gt; const &amp;mu, Field const &amp;t_a, csl::Index const &amp;t_b)</argsstring>
        <name>IndexChain</name>
        <qualifiedname>sgl::IndexChain::IndexChain</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref> &gt; const &amp;</type>
          <declname>mu</declname>
        </param>
        <param>
          <type><ref refid="classsgl_1_1Field" kindref="compound">Field</ref> const &amp;</type>
          <declname>t_a</declname>
        </param>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <declname>t_b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="57" column="5" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="74" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1ad624e98b1a50172adf4e307325f88331" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sgl::IndexChain::IndexChain</definition>
        <argsstring>(csl::Index const &amp;t_a, Field const &amp;t_b)</argsstring>
        <name>IndexChain</name>
        <qualifiedname>sgl::IndexChain::IndexChain</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <declname>t_a</declname>
        </param>
        <param>
          <type><ref refid="classsgl_1_1Field" kindref="compound">Field</ref> const &amp;</type>
          <declname>t_b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="61" column="5" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="84" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1ae17e19fda4e2be5e335b0a0783166d27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sgl::IndexChain::IndexChain</definition>
        <argsstring>(GExpr const &amp;mu, csl::Index const &amp;t_a, Field const &amp;t_b)</argsstring>
        <name>IndexChain</name>
        <qualifiedname>sgl::IndexChain::IndexChain</qualifiedname>
        <param>
          <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref> const &amp;</type>
          <declname>mu</declname>
        </param>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <declname>t_a</declname>
        </param>
        <param>
          <type><ref refid="classsgl_1_1Field" kindref="compound">Field</ref> const &amp;</type>
          <declname>t_b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="63" column="5" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="92" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a35379019aff13212ee06aa5cb754f22a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sgl::IndexChain::IndexChain</definition>
        <argsstring>(std::vector&lt; GExpr &gt; const &amp;mu, csl::Index const &amp;t_a, Field const &amp;t_b)</argsstring>
        <name>IndexChain</name>
        <qualifiedname>sgl::IndexChain::IndexChain</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref> &gt; const &amp;</type>
          <declname>mu</declname>
        </param>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <declname>t_a</declname>
        </param>
        <param>
          <type><ref refid="classsgl_1_1Field" kindref="compound">Field</ref> const &amp;</type>
          <declname>t_b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="65" column="5" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="99" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1af0fc3e0ea1e76bc6328110b7cf5832d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sgl::IndexChain::IndexChain</definition>
        <argsstring>(Field const &amp;t_a, Field const &amp;t_b)</argsstring>
        <name>IndexChain</name>
        <qualifiedname>sgl::IndexChain::IndexChain</qualifiedname>
        <param>
          <type><ref refid="classsgl_1_1Field" kindref="compound">Field</ref> const &amp;</type>
          <declname>t_a</declname>
        </param>
        <param>
          <type><ref refid="classsgl_1_1Field" kindref="compound">Field</ref> const &amp;</type>
          <declname>t_b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="69" column="5" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="109" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a0dd3d1e44dbc6121895019209e30cd17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sgl::IndexChain::IndexChain</definition>
        <argsstring>(GExpr const &amp;mu, Field const &amp;t_a, Field const &amp;t_b)</argsstring>
        <name>IndexChain</name>
        <qualifiedname>sgl::IndexChain::IndexChain</qualifiedname>
        <param>
          <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref> const &amp;</type>
          <declname>mu</declname>
        </param>
        <param>
          <type><ref refid="classsgl_1_1Field" kindref="compound">Field</ref> const &amp;</type>
          <declname>t_a</declname>
        </param>
        <param>
          <type><ref refid="classsgl_1_1Field" kindref="compound">Field</ref> const &amp;</type>
          <declname>t_b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="71" column="5" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="118" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a2b31560f9b50a6cd5698e54fc89310b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sgl::IndexChain::IndexChain</definition>
        <argsstring>(std::vector&lt; GExpr &gt; const &amp;mu, Field const &amp;t_a, Field const &amp;t_b)</argsstring>
        <name>IndexChain</name>
        <qualifiedname>sgl::IndexChain::IndexChain</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref> &gt; const &amp;</type>
          <declname>mu</declname>
        </param>
        <param>
          <type><ref refid="classsgl_1_1Field" kindref="compound">Field</ref> const &amp;</type>
          <declname>t_a</declname>
        </param>
        <param>
          <type><ref refid="classsgl_1_1Field" kindref="compound">Field</ref> const &amp;</type>
          <declname>t_b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="73" column="5" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="127" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a569358d6010df9d45a6d3f115503c44e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool sgl::IndexChain::isZero</definition>
        <argsstring>() const override</argsstring>
        <name>isZero</name>
        <qualifiedname>sgl::IndexChain::isZero</qualifiedname>
        <reimplements refid="classsgl_1_1AbstractGammaSym_1adfe9ff61706305c5c0eb268dd2653d0d">isZero</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="77" column="10" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="163" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a14b5251a62bc8b241b23f02df04405c5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref></type>
        <definition>csl::Expr sgl::IndexChain::getFactor</definition>
        <argsstring>() const override</argsstring>
        <name>getFactor</name>
        <qualifiedname>sgl::IndexChain::getFactor</qualifiedname>
        <reimplements refid="classsgl_1_1AbstractGammaSym_1a5e749ec71535aae944635a29bdb7eeba">getFactor</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="79" column="15" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="170" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1ae207d6977971aee02a3d3da689a46cd7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref></type>
        <definition>GExpr sgl::IndexChain::getTerm</definition>
        <argsstring>() const override</argsstring>
        <name>getTerm</name>
        <qualifiedname>sgl::IndexChain::getTerm</qualifiedname>
        <reimplements refid="classsgl_1_1AbstractGammaSym_1a75034a33b0e554585206b38961960113">getTerm</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="80" column="15" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="180" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a5823c65d637805fb17c72cb34d44a9e8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classstd_1_1shared__ptr" kindref="compound">std::shared_ptr</ref>&lt; <ref refid="classsgl_1_1Field" kindref="compound">Field</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Field &gt; sgl::IndexChain::getPsiL</definition>
        <argsstring>() const</argsstring>
        <name>getPsiL</name>
        <qualifiedname>sgl::IndexChain::getPsiL</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="82" column="21" bodyfile="src/marty/sgl/indexchain.h" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1abff7c40792b2b4f5d85de8be518046f5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classstd_1_1shared__ptr" kindref="compound">std::shared_ptr</ref>&lt; <ref refid="classsgl_1_1Field" kindref="compound">Field</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Field &gt; sgl::IndexChain::getPsiR</definition>
        <argsstring>() const</argsstring>
        <name>getPsiR</name>
        <qualifiedname>sgl::IndexChain::getPsiR</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="86" column="21" bodyfile="src/marty/sgl/indexchain.h" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a6d312e75ca62c6a14e01e689832078cd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::pair&lt; <ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref>, <ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> &gt;</type>
        <definition>std::pair&lt; csl::Index, csl::Index &gt; sgl::IndexChain::getBorderIndices</definition>
        <argsstring>() const</argsstring>
        <name>getBorderIndices</name>
        <qualifiedname>sgl::IndexChain::getBorderIndices</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="90" column="15" bodyfile="src/marty/sgl/indexchain.h" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a65e0751710e6c075716a36b6c9fba045" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sgl::IndexChain::isHappy</definition>
        <argsstring>() const</argsstring>
        <name>isHappy</name>
        <qualifiedname>sgl::IndexChain::isHappy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="95" column="10" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="188" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1addc2937b9b2a8be269b9cf314f3d028e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sgl::IndexChain::isReversed</definition>
        <argsstring>() const</argsstring>
        <name>isReversed</name>
        <qualifiedname>sgl::IndexChain::isReversed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="97" column="10" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="193" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a74b47e0a2cdec90dca030e4dce3daa2b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool sgl::IndexChain::isFierzFixed</definition>
        <argsstring>() const</argsstring>
        <name>isFierzFixed</name>
        <qualifiedname>sgl::IndexChain::isFierzFixed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="99" column="10" bodyfile="src/marty/sgl/indexchain.h" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1af8af3a9a3a037a0fa7b6d3672c5a2bf6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sgl::IndexChain::setFixFierz</definition>
        <argsstring>(bool value)</argsstring>
        <name>setFixFierz</name>
        <qualifiedname>sgl::IndexChain::setFixFierz</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="103" column="10" bodyfile="src/marty/sgl/indexchain.h" bodystart="103" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a1a2a6e310c7d9fb7b4b78868dacd5540" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sgl::IndexChain::hasCommonIndex</definition>
        <argsstring>(IndexChain const &amp;other) const</argsstring>
        <name>hasCommonIndex</name>
        <qualifiedname>sgl::IndexChain::hasCommonIndex</qualifiedname>
        <param>
          <type><ref refid="classsgl_1_1IndexChain" kindref="compound">IndexChain</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="108" column="11" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="198" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1ac49deef004025c76612beb267a03e662" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref></type>
        <definition>GExpr sgl::IndexChain::mergeChain</definition>
        <argsstring>(IndexChain const &amp;other) const</argsstring>
        <name>mergeChain</name>
        <qualifiedname>sgl::IndexChain::mergeChain</qualifiedname>
        <param>
          <type><ref refid="classsgl_1_1IndexChain" kindref="compound">IndexChain</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="109" column="11" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="219" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a37223f368dbcc7d842137b46bac707b7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref></type>
        <definition>GExpr sgl::IndexChain::mergeConjugateChain</definition>
        <argsstring>(IndexChain const &amp;other) const</argsstring>
        <name>mergeConjugateChain</name>
        <qualifiedname>sgl::IndexChain::mergeConjugateChain</qualifiedname>
        <param>
          <type><ref refid="classsgl_1_1IndexChain" kindref="compound">IndexChain</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="110" column="11" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="250" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a9960cfe8ae1231411e493fed9e5425d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool sgl::IndexChain::hasPropertyWith</definition>
        <argsstring>(GExpr const &amp;other) const override</argsstring>
        <name>hasPropertyWith</name>
        <qualifiedname>sgl::IndexChain::hasPropertyWith</qualifiedname>
        <reimplements refid="classsgl_1_1AbstractGammaSym_1ade647a5eec39ac5e5e6de2d612b8cdd3">hasPropertyWith</reimplements>
        <param>
          <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="111" column="11" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="290" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a60fc798d1cd317cf53fd4d776d96b3c7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref></type>
        <definition>GExpr sgl::IndexChain::propertyWith</definition>
        <argsstring>(GExpr const &amp;other) const override</argsstring>
        <name>propertyWith</name>
        <qualifiedname>sgl::IndexChain::propertyWith</qualifiedname>
        <reimplements refid="classsgl_1_1AbstractGammaSym_1abdacec8b02e4d1b58b9b938ae9be8e98">propertyWith</reimplements>
        <param>
          <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="112" column="11" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="303" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a26ee9b5c8ac3d8dcb352004462b4e69b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool sgl::IndexChain::contains</definition>
        <argsstring>(csl::Index const &amp;) const override</argsstring>
        <name>contains</name>
        <qualifiedname>sgl::IndexChain::contains</qualifiedname>
        <reimplements refid="classsgl_1_1AbstractMultiFunction_1a9104b3ba49d10499b83c4b5a41035af4">contains</reimplements>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <defname>index</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="114" column="10" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="321" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1aa6997ddef330583973207930ffb7436c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void sgl::IndexChain::replace</definition>
        <argsstring>(csl::Index const &amp;, csl::Index const &amp;) override</argsstring>
        <name>replace</name>
        <qualifiedname>sgl::IndexChain::replace</qualifiedname>
        <reimplements refid="classsgl_1_1AbstractGammaSym_1a7e40a14116fc813571670c09065016d9">replace</reimplements>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <defname>i</defname>
        </param>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <defname>j</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="115" column="10" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="329" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a8230230335caf79814949d1576836058" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref></type>
        <definition>GExpr sgl::IndexChain::copy</definition>
        <argsstring>() const override</argsstring>
        <name>copy</name>
        <qualifiedname>sgl::IndexChain::copy</qualifiedname>
        <reimplements refid="classsgl_1_1AbstractGammaSym_1af757efe5cd359a3d83f1ef642c4fec8b">copy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="117" column="11" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="340" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a3fb869bed012278e3443a7cef5eb6993" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref></type>
        <definition>GExpr sgl::IndexChain::refresh</definition>
        <argsstring>() const override</argsstring>
        <name>refresh</name>
        <qualifiedname>sgl::IndexChain::refresh</qualifiedname>
        <reimplements refid="classsgl_1_1AbstractGammaSym_1a13cc14a47f1ddf8fb51b0861e93c1d00">refresh</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="118" column="11" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="345" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a0450b1dbc1f623f634f744a38a9cca4a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref></type>
        <definition>csl::Expr sgl::IndexChain::toCSL</definition>
        <argsstring>(TensorSet const &amp;tensors) const override</argsstring>
        <name>toCSL</name>
        <qualifiedname>sgl::IndexChain::toCSL</qualifiedname>
        <reimplements refid="classsgl_1_1AbstractGammaSym_1a2c88557366387dab3a16a1e71aa192a6">toCSL</reimplements>
        <param>
          <type><ref refid="structsgl_1_1TensorSet" kindref="compound">TensorSet</ref> const &amp;</type>
          <declname>tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="120" column="15" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="363" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a8b51464ff87976b6ea175453e1cab2a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; <ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref>, <ref refid="classsgl_1_1IndexChain" kindref="compound">IndexChain</ref> &gt;</type>
        <definition>std::pair&lt; GExpr, IndexChain &gt; sgl::IndexChain::cut</definition>
        <argsstring>(size_t pos, size_t len=1) const</argsstring>
        <name>cut</name>
        <qualifiedname>sgl::IndexChain::cut</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="122" column="15" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="406" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1aaf99d8339c932208eceef977bda61cf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sgl::IndexChain::erase</definition>
        <argsstring>(size_t pos, size_t len)</argsstring>
        <name>erase</name>
        <qualifiedname>sgl::IndexChain::erase</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="124" column="10" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="435" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a9b207ee41294a4d94aeeb94a1e034c49" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref></type>
        <definition>GExpr sgl::IndexChain::applyEOM</definition>
        <argsstring>(MomentumIndex const &amp;p) const</argsstring>
        <name>applyEOM</name>
        <qualifiedname>sgl::IndexChain::applyEOM</qualifiedname>
        <param>
          <type><ref refid="classsgl_1_1MomentumIndex" kindref="compound">MomentumIndex</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="126" column="11" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="613" bodyend="663"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a63be94bc1681b54a055778a92b152a97" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref></type>
        <definition>GExpr sgl::IndexChain::simplify</definition>
        <argsstring>() override</argsstring>
        <name>simplify</name>
        <qualifiedname>sgl::IndexChain::simplify</qualifiedname>
        <reimplements refid="classsgl_1_1AbstractGammaSym_1a2c8730e190c88413a50d6f7b6864a97b">simplify</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="128" column="11" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="665" bodyend="670"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1aa307b5a15015883a9b5ed5872ef2fa81" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref></type>
        <definition>GExpr sgl::IndexChain::calculateTrace</definition>
        <argsstring>() const</argsstring>
        <name>calculateTrace</name>
        <qualifiedname>sgl::IndexChain::calculateTrace</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="130" column="11" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="672" bodyend="686"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a941691e9e12b9d8737b8990597ee642a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref></type>
        <definition>GExpr sgl::IndexChain::calculateStandardTrace</definition>
        <argsstring>() const</argsstring>
        <name>calculateStandardTrace</name>
        <qualifiedname>sgl::IndexChain::calculateStandardTrace</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="131" column="11" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="688" bodyend="714"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a009fc3cce58d20082334bfee0f034bc1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref></type>
        <definition>GExpr sgl::IndexChain::calculateChiralTrace</definition>
        <argsstring>() const</argsstring>
        <name>calculateChiralTrace</name>
        <qualifiedname>sgl::IndexChain::calculateChiralTrace</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="132" column="11" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="716" bodyend="741"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a40d5100687051514781512a8ba34e1f7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; <ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref> &gt;</type>
        <definition>std::optional&lt; GExpr &gt; sgl::IndexChain::reduceStep</definition>
        <argsstring>() const</argsstring>
        <name>reduceStep</name>
        <qualifiedname>sgl::IndexChain::reduceStep</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="134" column="19" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="554" bodyend="581"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1af30324bd04512e36009ef4cd883ba512" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; <ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref> &gt;</type>
        <definition>std::optional&lt; GExpr &gt; sgl::IndexChain::reduceMomenta</definition>
        <argsstring>(MomentumIndex const &amp;p1, MomentumIndex const &amp;p2) const</argsstring>
        <name>reduceMomenta</name>
        <qualifiedname>sgl::IndexChain::reduceMomenta</qualifiedname>
        <param>
          <type><ref refid="classsgl_1_1MomentumIndex" kindref="compound">MomentumIndex</ref> const &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type><ref refid="classsgl_1_1MomentumIndex" kindref="compound">MomentumIndex</ref> const &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="136" column="19" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="583" bodyend="611"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a57c127dfa054a2d6cc4c863f15d0b1e1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref></type>
        <definition>GExpr sgl::IndexChain::applyGeneralFierz</definition>
        <argsstring>(IndexChain const &amp;other, bool chiral=true) const</argsstring>
        <name>applyGeneralFierz</name>
        <qualifiedname>sgl::IndexChain::applyGeneralFierz</qualifiedname>
        <param>
          <type><ref refid="classsgl_1_1IndexChain" kindref="compound">IndexChain</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>chiral</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="141" column="11" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="828" bodyend="875"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a57b4e33b0edd08b7a1b243066fb6356d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref></type>
        <definition>GExpr sgl::IndexChain::applyGeneralFierzTwice</definition>
        <argsstring>(IndexChain const &amp;other, bool chiral=true) const</argsstring>
        <name>applyGeneralFierzTwice</name>
        <qualifiedname>sgl::IndexChain::applyGeneralFierzTwice</qualifiedname>
        <param>
          <type><ref refid="classsgl_1_1IndexChain" kindref="compound">IndexChain</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>chiral</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="142" column="11" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="877" bodyend="934"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1ad3fea84396f544de50e80682fe8bd9f0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void sgl::IndexChain::print</definition>
        <argsstring>(std::ostream &amp;out) const override</argsstring>
        <name>print</name>
        <qualifiedname>sgl::IndexChain::print</qualifiedname>
        <reimplements refid="classsgl_1_1AbstractGammaSym_1a167b1ff6b236463f5c2cb2cff18b7109">print</reimplements>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="145" column="10" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="997" bodyend="1017"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1aee444f1be116132b76488d4afcc547cc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool sgl::IndexChain::isTrace</definition>
        <argsstring>() const</argsstring>
        <name>isTrace</name>
        <qualifiedname>sgl::IndexChain::isTrace</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="147" column="10" bodyfile="src/marty/sgl/indexchain.h" bodystart="147" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a5140564bf3061b7a50ee849ec7c9cdb3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sgl::IndexChain::isOnBasis</definition>
        <argsstring>(bool chiralBasis) const</argsstring>
        <name>isOnBasis</name>
        <qualifiedname>sgl::IndexChain::isOnBasis</qualifiedname>
        <param>
          <type>bool</type>
          <declname>chiralBasis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="152" column="10" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="936" bodyend="947"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a35335f753f1280fda956e6e6998123c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; <ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref> &gt;</type>
        <definition>std::optional&lt; GExpr &gt; sgl::IndexChain::projectOnBasis</definition>
        <argsstring>(bool chiralBasis) const</argsstring>
        <name>projectOnBasis</name>
        <qualifiedname>sgl::IndexChain::projectOnBasis</qualifiedname>
        <param>
          <type>bool</type>
          <declname>chiralBasis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="154" column="19" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="949" bodyend="995"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a125b0e9d6c23b34a2c936d5fcc8e62aa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; <ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref> &gt;</type>
        <definition>std::optional&lt; GExpr &gt; sgl::IndexChain::checkGammaAndConjugation</definition>
        <argsstring>() const</argsstring>
        <name>checkGammaAndConjugation</name>
        <qualifiedname>sgl::IndexChain::checkGammaAndConjugation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="156" column="19" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="137" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a2235ce0280b9c323ac261dd47cc37da4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref></type>
        <definition>GExpr sgl::IndexChain::identityFactor</definition>
        <argsstring>(GammaIndex const &amp;other) const</argsstring>
        <name>identityFactor</name>
        <qualifiedname>sgl::IndexChain::identityFactor</qualifiedname>
        <param>
          <type><ref refid="classsgl_1_1GammaIndex" kindref="compound">GammaIndex</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="166" column="11" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="1019" bodyend="1024"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1ad215aeab572e507211e2f444fbdad8e1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref></type>
        <definition>GExpr sgl::IndexChain::factor</definition>
        <argsstring>(GammaIndex const &amp;A, GammaIndex const &amp;B) const</argsstring>
        <name>factor</name>
        <qualifiedname>sgl::IndexChain::factor</qualifiedname>
        <param>
          <type><ref refid="classsgl_1_1GammaIndex" kindref="compound">GammaIndex</ref> const &amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type><ref refid="classsgl_1_1GammaIndex" kindref="compound">GammaIndex</ref> const &amp;</type>
          <declname>B</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="167" column="11" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="1026" bodyend="1042"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a1ff62d5ff027895441c5c27beb9f078e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref></type>
        <definition>GExpr sgl::IndexChain::getContributionTo</definition>
        <argsstring>(IndexChain const &amp;other) const</argsstring>
        <name>getContributionTo</name>
        <qualifiedname>sgl::IndexChain::getContributionTo</qualifiedname>
        <param>
          <type><ref refid="classsgl_1_1IndexChain" kindref="compound">IndexChain</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="168" column="11" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="1044" bodyend="1078"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1af83c835dde47b22207a0c4240e7963bd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; int, <ref refid="classsgl_1_1IndexChain" kindref="compound">IndexChain</ref> &gt;</type>
        <definition>std::pair&lt; int, IndexChain &gt; sgl::IndexChain::conjugated</definition>
        <argsstring>() const</argsstring>
        <name>conjugated</name>
        <qualifiedname>sgl::IndexChain::conjugated</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="170" column="15" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="1080" bodyend="1116"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1aa7941ebea77fe5dfc44494f193f77083" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref></type>
        <definition>GExpr sgl::IndexChain::moveIndex</definition>
        <argsstring>(size_t init, size_t target) const</argsstring>
        <name>moveIndex</name>
        <qualifiedname>sgl::IndexChain::moveIndex</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>init</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="179" column="11" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="517" bodyend="552"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classsgl_1_1IndexChain_1ab28c61d8b963524a8d93c54c6373fe27" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref></type>
        <definition>GExpr sgl::IndexChain::trace</definition>
        <argsstring>(IndexChain A, IndexChain C, IndexChain B, IndexChain D)</argsstring>
        <name>trace</name>
        <qualifiedname>sgl::IndexChain::trace</qualifiedname>
        <param>
          <type><ref refid="classsgl_1_1IndexChain" kindref="compound">IndexChain</ref></type>
          <declname>A</declname>
        </param>
        <param>
          <type><ref refid="classsgl_1_1IndexChain" kindref="compound">IndexChain</ref></type>
          <declname>C</declname>
        </param>
        <param>
          <type><ref refid="classsgl_1_1IndexChain" kindref="compound">IndexChain</ref></type>
          <declname>B</declname>
        </param>
        <param>
          <type><ref refid="classsgl_1_1IndexChain" kindref="compound">IndexChain</ref></type>
          <declname>D</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="139" column="18" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="743" bodyend="758"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a3ee48535c7322a91365b27e65302a315" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref></type>
        <definition>static csl::Index sgl::IndexChain::easyIndex</definition>
        <argsstring>(int i)</argsstring>
        <name>easyIndex</name>
        <qualifiedname>sgl::IndexChain::easyIndex</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="158" column="23" bodyfile="src/marty/sgl/indexchain.h" bodystart="158" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1ae90a05d045313ed9b7e8eb3b69fe5c06" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool sgl::IndexChain::isDelta</definition>
        <argsstring>(GExpr const &amp;gamma)</argsstring>
        <name>isDelta</name>
        <qualifiedname>sgl::IndexChain::isDelta</qualifiedname>
        <param>
          <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref> const &amp;</type>
          <declname>gamma</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="189" column="17" bodyfile="src/marty/sgl/indexchain.h" bodystart="189" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1ab0cf6a75ef021e89467520225ec21e87" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool sgl::IndexChain::isGammaMu</definition>
        <argsstring>(GExpr const &amp;gamma)</argsstring>
        <name>isGammaMu</name>
        <qualifiedname>sgl::IndexChain::isGammaMu</qualifiedname>
        <param>
          <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref> const &amp;</type>
          <declname>gamma</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="193" column="17" bodyfile="src/marty/sgl/indexchain.h" bodystart="193" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a7532f5a78e5ad989e1e4f748cc601ac2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool sgl::IndexChain::isSigma</definition>
        <argsstring>(GExpr const &amp;gamma)</argsstring>
        <name>isSigma</name>
        <qualifiedname>sgl::IndexChain::isSigma</qualifiedname>
        <param>
          <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref> const &amp;</type>
          <declname>gamma</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="197" column="17" bodyfile="src/marty/sgl/indexchain.h" bodystart="197" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a4c66b3a81ecc366cec6adf3293682c3d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool sgl::IndexChain::isChiral</definition>
        <argsstring>(GExpr const &amp;gamma)</argsstring>
        <name>isChiral</name>
        <qualifiedname>sgl::IndexChain::isChiral</qualifiedname>
        <param>
          <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref> const &amp;</type>
          <declname>gamma</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="201" column="17" bodyfile="src/marty/sgl/indexchain.h" bodystart="201" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a505f2f0943fe7058ded574384cb1a0da" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool sgl::IndexChain::isGamma5</definition>
        <argsstring>(GExpr const &amp;gamma)</argsstring>
        <name>isGamma5</name>
        <qualifiedname>sgl::IndexChain::isGamma5</qualifiedname>
        <param>
          <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref> const &amp;</type>
          <declname>gamma</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="205" column="17" bodyfile="src/marty/sgl/indexchain.h" bodystart="205" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a181a7358ecf093fc011b4c8803915e16" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool sgl::IndexChain::isProjector</definition>
        <argsstring>(GExpr const &amp;gamma)</argsstring>
        <name>isProjector</name>
        <qualifiedname>sgl::IndexChain::isProjector</qualifiedname>
        <param>
          <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref> const &amp;</type>
          <declname>gamma</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="209" column="17" bodyfile="src/marty/sgl/indexchain.h" bodystart="209" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1ad057d99f63b5bd5bedeb2b50c5e47d9f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool sgl::IndexChain::isP_L</definition>
        <argsstring>(GExpr const &amp;gamma)</argsstring>
        <name>isP_L</name>
        <qualifiedname>sgl::IndexChain::isP_L</qualifiedname>
        <param>
          <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref> const &amp;</type>
          <declname>gamma</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="213" column="17" bodyfile="src/marty/sgl/indexchain.h" bodystart="213" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a2bd4fdc9a0dfd094536ab55fa0b79d0c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool sgl::IndexChain::isP_R</definition>
        <argsstring>(GExpr const &amp;gamma)</argsstring>
        <name>isP_R</name>
        <qualifiedname>sgl::IndexChain::isP_R</qualifiedname>
        <param>
          <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref> const &amp;</type>
          <declname>gamma</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="217" column="17" bodyfile="src/marty/sgl/indexchain.h" bodystart="217" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a6d0b2426fe745a03ba12cf932b93017e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool sgl::IndexChain::isC</definition>
        <argsstring>(GExpr const &amp;gamma)</argsstring>
        <name>isC</name>
        <qualifiedname>sgl::IndexChain::isC</qualifiedname>
        <param>
          <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref> const &amp;</type>
          <declname>gamma</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="221" column="17" bodyfile="src/marty/sgl/indexchain.h" bodystart="221" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a554efa30ec3d3b22c5aca57a1bd479c8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref></type>
        <definition>GExpr sgl::IndexChain::CMatrix</definition>
        <argsstring>()</argsstring>
        <name>CMatrix</name>
        <qualifiedname>sgl::IndexChain::CMatrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="226" column="18" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="1145" bodyend="1148"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a1443d6673baaacf86490396490d15d44" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref></type>
        <definition>GExpr sgl::IndexChain::Id</definition>
        <argsstring>()</argsstring>
        <name>Id</name>
        <qualifiedname>sgl::IndexChain::Id</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="227" column="18" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="1150" bodyend="1153"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1aa5074f6f1d01efaa5d1be7e1c32930dd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref></type>
        <definition>GExpr sgl::IndexChain::gamma5</definition>
        <argsstring>()</argsstring>
        <name>gamma5</name>
        <qualifiedname>sgl::IndexChain::gamma5</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="228" column="18" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="1155" bodyend="1158"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a704c0666644f8e982d4edba5060d583a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref></type>
        <definition>GExpr sgl::IndexChain::P_L</definition>
        <argsstring>()</argsstring>
        <name>P_L</name>
        <qualifiedname>sgl::IndexChain::P_L</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="229" column="18" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="1160" bodyend="1163"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1a107ecb34085b8412eb639d9e41821ad0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref></type>
        <definition>GExpr sgl::IndexChain::P_R</definition>
        <argsstring>()</argsstring>
        <name>P_R</name>
        <qualifiedname>sgl::IndexChain::P_R</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="230" column="18" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="1165" bodyend="1168"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classsgl_1_1IndexChain_1a4e694a7f42e575444f4bd5d7b08025ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref></type>
        <definition>GExpr momentumGammaContraction</definition>
        <argsstring>(sgl::IndexChain const &amp;init, csl::Tensor p, csl::Index const &amp;mu, csl::Index const &amp;nu, size_t i, size_t j)</argsstring>
        <name>momentumGammaContraction</name>
        <qualifiedname>sgl::IndexChain::momentumGammaContraction</qualifiedname>
        <param>
          <type><ref refid="classsgl_1_1IndexChain" kindref="compound">sgl::IndexChain</ref> const &amp;</type>
          <declname>init</declname>
        </param>
        <param>
          <type><ref refid="classcsl_1_1Tensor" kindref="compound">csl::Tensor</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <declname>mu</declname>
        </param>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <declname>nu</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="172" column="18" bodyfile="src/marty/sgl/contraction.cpp" bodystart="208" bodyend="293"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classsgl_1_1IndexChain_1aef1dd65a78645eecf7c106c9fc5364c4" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sgl::IndexChain::hasContraction</definition>
        <argsstring>(size_t i, size_t j) const</argsstring>
        <name>hasContraction</name>
        <qualifiedname>sgl::IndexChain::hasContraction</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="182" column="10" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="447" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1ad7668aa835e156b05c94239d08394622" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; std::pair&lt; size_t, size_t &gt; &gt;</type>
        <definition>std::optional&lt; std::pair&lt; size_t, size_t &gt; &gt; sgl::IndexChain::firstMove</definition>
        <argsstring>() const</argsstring>
        <name>firstMove</name>
        <qualifiedname>sgl::IndexChain::firstMove</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="183" column="19" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="463" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1ac898062d59028c0c6270d2f548663eb6" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; std::pair&lt; size_t, size_t &gt; &gt;</type>
        <definition>std::optional&lt; std::pair&lt; size_t, size_t &gt; &gt; sgl::IndexChain::lastMove</definition>
        <argsstring>() const</argsstring>
        <name>lastMove</name>
        <qualifiedname>sgl::IndexChain::lastMove</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="184" column="19" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="488" bodyend="501"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1IndexChain_1ae4feb037f660b495d0711892f90b38b3" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref></type>
        <definition>GExpr sgl::IndexChain::contraction</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>contraction</name>
        <qualifiedname>sgl::IndexChain::contraction</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/indexchain.h" line="186" column="11" bodyfile="src/marty/sgl/indexchain.cpp" bodystart="503" bodyend="515"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>sgl::AbstractGammaSym</label>
        <link refid="classsgl_1_1AbstractGammaSym"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>sgl::AbstractMultiFunction</label>
        <link refid="classsgl_1_1AbstractMultiFunction"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>sgl::IndexChain</label>
        <link refid="classsgl_1_1IndexChain"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>std::enable_shared_from_this&lt; AbstractGammaSym &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>sgl::AbstractGammaSym</label>
        <link refid="classsgl_1_1AbstractGammaSym"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>sgl::AbstractMultiFunction</label>
        <link refid="classsgl_1_1AbstractMultiFunction"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>sgl::IndexChain</label>
        <link refid="classsgl_1_1IndexChain"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>std::enable_shared_from_this&lt; AbstractGammaSym &gt;</label>
      </node>
    </collaborationgraph>
    <location file="src/marty/sgl/indexchain.h" line="35" column="1" bodyfile="src/marty/sgl/indexchain.h" bodystart="35" bodyend="238"/>
    <listofallmembers>
      <member refid="classsgl_1_1IndexChain_1a5523cdcb1c496e8c06befca0d0b00704" prot="private" virt="non-virtual"><scope>sgl::IndexChain</scope><name>a</name></member>
      <member refid="classsgl_1_1AbstractMultiFunction_1a6900b41811555752f05df7c2a6c99fbd" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>AbstractMultiFunction</name></member>
      <member refid="classsgl_1_1AbstractMultiFunction_1aaaae5d2940ddd21a76d7eee7d9a4da60" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>AbstractMultiFunction</name></member>
      <member refid="classsgl_1_1AbstractMultiFunction_1a5e2092f929145acc669d021386125c3e" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>AbstractMultiFunction</name></member>
      <member refid="classsgl_1_1IndexChain_1a9b207ee41294a4d94aeeb94a1e034c49" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>applyEOM</name></member>
      <member refid="classsgl_1_1IndexChain_1a57c127dfa054a2d6cc4c863f15d0b1e1" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>applyGeneralFierz</name></member>
      <member refid="classsgl_1_1IndexChain_1a57b4e33b0edd08b7a1b243066fb6356d" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>applyGeneralFierzTwice</name></member>
      <member refid="classsgl_1_1AbstractMultiFunction_1a45c89eec7f7fb3af3a4f712000dacda2" prot="public" virt="virtual"><scope>sgl::IndexChain</scope><name>argument</name></member>
      <member refid="classsgl_1_1AbstractMultiFunction_1ad895db48f5411a5297a72afac43aab3a" prot="public" virt="virtual"><scope>sgl::IndexChain</scope><name>argument</name></member>
      <member refid="classsgl_1_1IndexChain_1af0b0461feb3171d3cf6f02afc53d2bb3" prot="private" virt="non-virtual"><scope>sgl::IndexChain</scope><name>b</name></member>
      <member refid="classsgl_1_1AbstractMultiFunction_1a1177adaf927786002416ed584e861127" prot="public" virt="virtual"><scope>sgl::IndexChain</scope><name>begin</name></member>
      <member refid="classsgl_1_1AbstractMultiFunction_1a6992e156c299b31cd2019789355a8c54" prot="public" virt="virtual"><scope>sgl::IndexChain</scope><name>begin</name></member>
      <member refid="classsgl_1_1IndexChain_1a009fc3cce58d20082334bfee0f034bc1" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>calculateChiralTrace</name></member>
      <member refid="classsgl_1_1IndexChain_1a941691e9e12b9d8737b8990597ee642a" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>calculateStandardTrace</name></member>
      <member refid="classsgl_1_1IndexChain_1aa307b5a15015883a9b5ed5872ef2fa81" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>calculateTrace</name></member>
      <member refid="classsgl_1_1IndexChain_1a125b0e9d6c23b34a2c936d5fcc8e62aa" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>checkGammaAndConjugation</name></member>
      <member refid="classsgl_1_1IndexChain_1a554efa30ec3d3b22c5aca57a1bd479c8" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>CMatrix</name></member>
      <member refid="classsgl_1_1IndexChain_1af83c835dde47b22207a0c4240e7963bd" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>conjugated</name></member>
      <member refid="classsgl_1_1AbstractGammaSym_1a84a8f29afaabbe187d15d13a9fac4059" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>const_iterator</name></member>
      <member refid="classsgl_1_1IndexChain_1a26ee9b5c8ac3d8dcb352004462b4e69b" prot="public" virt="virtual"><scope>sgl::IndexChain</scope><name>contains</name></member>
      <member refid="classsgl_1_1IndexChain_1ae4feb037f660b495d0711892f90b38b3" prot="private" virt="non-virtual"><scope>sgl::IndexChain</scope><name>contraction</name></member>
      <member refid="classsgl_1_1IndexChain_1a8230230335caf79814949d1576836058" prot="public" virt="virtual"><scope>sgl::IndexChain</scope><name>copy</name></member>
      <member refid="classsgl_1_1IndexChain_1a8b51464ff87976b6ea175453e1cab2a2" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>cut</name></member>
      <member refid="classsgl_1_1IndexChain_1a3ee48535c7322a91365b27e65302a315" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>easyIndex</name></member>
      <member refid="classsgl_1_1AbstractMultiFunction_1a41b725be4768d92a4aa5e13a32539580" prot="public" virt="virtual"><scope>sgl::IndexChain</scope><name>end</name></member>
      <member refid="classsgl_1_1AbstractMultiFunction_1a1c4c4a1c0bdb062d05bfa95b20aed908" prot="public" virt="virtual"><scope>sgl::IndexChain</scope><name>end</name></member>
      <member refid="classsgl_1_1IndexChain_1aaf99d8339c932208eceef977bda61cf5" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>erase</name></member>
      <member refid="classsgl_1_1AbstractGammaSym_1ac033f1bea41f9a1001abba5b9305ce3e" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>errorPrint</name></member>
      <member refid="classsgl_1_1AbstractGammaSym_1a62ed9a539963b9146ac05c0efafffd47" prot="public" virt="virtual"><scope>sgl::IndexChain</scope><name>expr</name></member>
      <member refid="classsgl_1_1AbstractGammaSym_1acefd4f5cee624ddff586cb005ed2510a" prot="public" virt="virtual"><scope>sgl::IndexChain</scope><name>expr</name></member>
      <member refid="classsgl_1_1IndexChain_1ad215aeab572e507211e2f444fbdad8e1" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>factor</name></member>
      <member refid="classsgl_1_1IndexChain_1abee9987bcb16ca97237e5711757b8cbb" prot="private" virt="non-virtual"><scope>sgl::IndexChain</scope><name>fierzFixed</name></member>
      <member refid="classsgl_1_1IndexChain_1ad7668aa835e156b05c94239d08394622" prot="private" virt="non-virtual"><scope>sgl::IndexChain</scope><name>firstMove</name></member>
      <member refid="classsgl_1_1IndexChain_1aa5074f6f1d01efaa5d1be7e1c32930dd" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>gamma5</name></member>
      <member refid="classsgl_1_1IndexChain_1a6d312e75ca62c6a14e01e689832078cd" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>getBorderIndices</name></member>
      <member refid="classsgl_1_1IndexChain_1a1ff62d5ff027895441c5c27beb9f078e" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>getContributionTo</name></member>
      <member refid="classsgl_1_1IndexChain_1a14b5251a62bc8b241b23f02df04405c5" prot="public" virt="virtual"><scope>sgl::IndexChain</scope><name>getFactor</name></member>
      <member refid="classsgl_1_1IndexChain_1a5823c65d637805fb17c72cb34d44a9e8" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>getPsiL</name></member>
      <member refid="classsgl_1_1IndexChain_1abff7c40792b2b4f5d85de8be518046f5" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>getPsiR</name></member>
      <member refid="classsgl_1_1IndexChain_1ae207d6977971aee02a3d3da689a46cd7" prot="public" virt="virtual"><scope>sgl::IndexChain</scope><name>getTerm</name></member>
      <member refid="classsgl_1_1IndexChain_1a1a2a6e310c7d9fb7b4b78868dacd5540" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>hasCommonIndex</name></member>
      <member refid="classsgl_1_1IndexChain_1aef1dd65a78645eecf7c106c9fc5364c4" prot="private" virt="non-virtual"><scope>sgl::IndexChain</scope><name>hasContraction</name></member>
      <member refid="classsgl_1_1IndexChain_1a9960cfe8ae1231411e493fed9e5425d3" prot="public" virt="virtual"><scope>sgl::IndexChain</scope><name>hasPropertyWith</name></member>
      <member refid="classsgl_1_1IndexChain_1a1443d6673baaacf86490396490d15d44" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>Id</name></member>
      <member refid="classsgl_1_1IndexChain_1a2235ce0280b9c323ac261dd47cc37da4" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>identityFactor</name></member>
      <member refid="classsgl_1_1IndexChain_1a36c058b4df54543e5f6d80a076a1de62" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>IndexChain</name></member>
      <member refid="classsgl_1_1IndexChain_1af285442429f0fe49a53860a80a7296d8" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>IndexChain</name></member>
      <member refid="classsgl_1_1IndexChain_1aa8d2241305a8f1e8eaa4e35b798515d1" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>IndexChain</name></member>
      <member refid="classsgl_1_1IndexChain_1afdb02b964422b1e47d4ea3f0220dbfc9" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>IndexChain</name></member>
      <member refid="classsgl_1_1IndexChain_1a272a3dc9fb3a90e60124fd88209c2c4e" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>IndexChain</name></member>
      <member refid="classsgl_1_1IndexChain_1aa706df942caf8663083ae5dc4068b2f1" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>IndexChain</name></member>
      <member refid="classsgl_1_1IndexChain_1ae5c2d130638d7b618401a04727259dd4" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>IndexChain</name></member>
      <member refid="classsgl_1_1IndexChain_1a8105c4e9b18db506fe033a3b9b276442" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>IndexChain</name></member>
      <member refid="classsgl_1_1IndexChain_1a081395faa2a77dcfbf601b3c800d4e1a" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>IndexChain</name></member>
      <member refid="classsgl_1_1IndexChain_1ad624e98b1a50172adf4e307325f88331" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>IndexChain</name></member>
      <member refid="classsgl_1_1IndexChain_1ae17e19fda4e2be5e335b0a0783166d27" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>IndexChain</name></member>
      <member refid="classsgl_1_1IndexChain_1a35379019aff13212ee06aa5cb754f22a" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>IndexChain</name></member>
      <member refid="classsgl_1_1IndexChain_1af0fc3e0ea1e76bc6328110b7cf5832d3" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>IndexChain</name></member>
      <member refid="classsgl_1_1IndexChain_1a0dd3d1e44dbc6121895019209e30cd17" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>IndexChain</name></member>
      <member refid="classsgl_1_1IndexChain_1a2b31560f9b50a6cd5698e54fc89310b1" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>IndexChain</name></member>
      <member refid="classsgl_1_1AbstractGammaSym_1a984f2acddc646a42a7ace28ffe96f1d3" prot="public" virt="virtual"><scope>sgl::IndexChain</scope><name>indices</name></member>
      <member refid="classsgl_1_1AbstractGammaSym_1a3e2d18fdc22a8012e1179e132c5cdaf3" prot="public" virt="virtual"><scope>sgl::IndexChain</scope><name>indices</name></member>
      <member refid="classsgl_1_1IndexChain_1a6d0b2426fe745a03ba12cf932b93017e" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>isC</name></member>
      <member refid="classsgl_1_1IndexChain_1a4c66b3a81ecc366cec6adf3293682c3d" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>isChiral</name></member>
      <member refid="classsgl_1_1IndexChain_1ae90a05d045313ed9b7e8eb3b69fe5c06" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>isDelta</name></member>
      <member refid="classsgl_1_1IndexChain_1a74b47e0a2cdec90dca030e4dce3daa2b" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>isFierzFixed</name></member>
      <member refid="classsgl_1_1IndexChain_1a505f2f0943fe7058ded574384cb1a0da" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>isGamma5</name></member>
      <member refid="classsgl_1_1IndexChain_1ab0cf6a75ef021e89467520225ec21e87" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>isGammaMu</name></member>
      <member refid="classsgl_1_1IndexChain_1a65e0751710e6c075716a36b6c9fba045" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>isHappy</name></member>
      <member refid="classsgl_1_1IndexChain_1a5140564bf3061b7a50ee849ec7c9cdb3" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>isOnBasis</name></member>
      <member refid="classsgl_1_1IndexChain_1ad057d99f63b5bd5bedeb2b50c5e47d9f" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>isP_L</name></member>
      <member refid="classsgl_1_1IndexChain_1a2bd4fdc9a0dfd094536ab55fa0b79d0c" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>isP_R</name></member>
      <member refid="classsgl_1_1IndexChain_1a181a7358ecf093fc011b4c8803915e16" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>isProjector</name></member>
      <member refid="classsgl_1_1IndexChain_1addc2937b9b2a8be269b9cf314f3d028e" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>isReversed</name></member>
      <member refid="classsgl_1_1IndexChain_1a7532f5a78e5ad989e1e4f748cc601ac2" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>isSigma</name></member>
      <member refid="classsgl_1_1IndexChain_1aee444f1be116132b76488d4afcc547cc" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>isTrace</name></member>
      <member refid="classsgl_1_1IndexChain_1a569358d6010df9d45a6d3f115503c44e" prot="public" virt="virtual"><scope>sgl::IndexChain</scope><name>isZero</name></member>
      <member refid="classsgl_1_1AbstractGammaSym_1a7ecc40fa38a2c881f0e1b2af81e699f4" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>iterator</name></member>
      <member refid="classsgl_1_1IndexChain_1ac898062d59028c0c6270d2f548663eb6" prot="private" virt="non-virtual"><scope>sgl::IndexChain</scope><name>lastMove</name></member>
      <member refid="classsgl_1_1AbstractMultiFunction_1a1ea4671715acc2891f5731393bbc3ebb" prot="protected" virt="non-virtual"><scope>sgl::IndexChain</scope><name>m_argument</name></member>
      <member refid="classsgl_1_1IndexChain_1ac49deef004025c76612beb267a03e662" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>mergeChain</name></member>
      <member refid="classsgl_1_1IndexChain_1a37223f368dbcc7d842137b46bac707b7" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>mergeConjugateChain</name></member>
      <member refid="classsgl_1_1IndexChain_1a4e694a7f42e575444f4bd5d7b08025ab" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>momentumGammaContraction</name></member>
      <member refid="classsgl_1_1IndexChain_1aa7941ebea77fe5dfc44494f193f77083" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>moveIndex</name></member>
      <member refid="classsgl_1_1IndexChain_1a704c0666644f8e982d4edba5060d583a" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>P_L</name></member>
      <member refid="classsgl_1_1IndexChain_1a107ecb34085b8412eb639d9e41821ad0" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>P_R</name></member>
      <member refid="classsgl_1_1IndexChain_1ad3fea84396f544de50e80682fe8bd9f0" prot="public" virt="virtual"><scope>sgl::IndexChain</scope><name>print</name></member>
      <member refid="classsgl_1_1AbstractMultiFunction_1ac19d7269b4f2cabd74cfb5081adcfe0e" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>printArgs</name></member>
      <member refid="classsgl_1_1IndexChain_1a35335f753f1280fda956e6e6998123c3" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>projectOnBasis</name></member>
      <member refid="classsgl_1_1IndexChain_1a60fc798d1cd317cf53fd4d776d96b3c7" prot="public" virt="virtual"><scope>sgl::IndexChain</scope><name>propertyWith</name></member>
      <member refid="classsgl_1_1IndexChain_1a87f23d9e0bdec2a8e0438557b471d631" prot="private" virt="non-virtual"><scope>sgl::IndexChain</scope><name>psiL</name></member>
      <member refid="classsgl_1_1IndexChain_1a5c93091c796430af1b75057745e5e6f7" prot="private" virt="non-virtual"><scope>sgl::IndexChain</scope><name>psiR</name></member>
      <member refid="classsgl_1_1IndexChain_1af30324bd04512e36009ef4cd883ba512" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>reduceMomenta</name></member>
      <member refid="classsgl_1_1IndexChain_1a40d5100687051514781512a8ba34e1f7" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>reduceStep</name></member>
      <member refid="classsgl_1_1IndexChain_1a3fb869bed012278e3443a7cef5eb6993" prot="public" virt="virtual"><scope>sgl::IndexChain</scope><name>refresh</name></member>
      <member refid="classsgl_1_1IndexChain_1aa6997ddef330583973207930ffb7436c" prot="public" virt="virtual"><scope>sgl::IndexChain</scope><name>replace</name></member>
      <member refid="classsgl_1_1AbstractGammaSym_1a37c54670ee0262b62a55279b23e7ce12" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>self</name></member>
      <member refid="classsgl_1_1IndexChain_1af8af3a9a3a037a0fa7b6d3672c5a2bf6" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>setFixFierz</name></member>
      <member refid="classsgl_1_1IndexChain_1a63be94bc1681b54a055778a92b152a97" prot="public" virt="virtual"><scope>sgl::IndexChain</scope><name>simplify</name></member>
      <member refid="classsgl_1_1AbstractMultiFunction_1abcb62c544c37d7bf9ae134f63c4bbd53" prot="public" virt="virtual"><scope>sgl::IndexChain</scope><name>size</name></member>
      <member refid="classsgl_1_1IndexChain_1a0450b1dbc1f623f634f744a38a9cca4a" prot="public" virt="virtual"><scope>sgl::IndexChain</scope><name>toCSL</name></member>
      <member refid="classsgl_1_1IndexChain_1ab28c61d8b963524a8d93c54c6373fe27" prot="public" virt="non-virtual"><scope>sgl::IndexChain</scope><name>trace</name></member>
      <member refid="classsgl_1_1AbstractGammaSym_1a2be842099a79d1c07130664367ed9d91" prot="public" virt="virtual"><scope>sgl::IndexChain</scope><name>~AbstractGammaSym</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
