<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="mathFunctions_8h" kind="file" language="C++">
    <compoundname>mathFunctions.h</compoundname>
    <includes refid="scalarFunc_8h" local="yes">scalarFunc.h</includes>
    <includedby refid="buildingBlock_8cpp" local="yes">src/csl/buildingBlock.cpp</includedby>
    <includedby refid="csl_2csl_8h" local="yes">src/csl/csl.h</includedby>
    <includedby refid="mathFunctions_8cpp" local="yes">src/csl/mathFunctions.cpp</includedby>
    <includedby refid="numerical_8cpp" local="yes">src/csl/numerical.cpp</includedby>
    <includedby refid="operations_8cpp" local="yes">src/csl/operations.cpp</includedby>
    <includedby refid="pseudoIntegral_8h" local="yes">src/csl/pseudoIntegral.h</includedby>
    <includedby refid="scalarFunc_8cpp" local="yes">src/csl/scalarFunc.cpp</includedby>
    <includedby refid="simplification_8cpp" local="yes">src/csl/simplification.cpp</includedby>
    <includedby refid="utils_8cpp" local="yes">src/csl/utils.cpp</includedby>
    <includedby refid="vector_8cpp" local="yes">src/csl/vector.cpp</includedby>
    <incdepgraph>
      <node id="5">
        <label>abstract.h</label>
        <link refid="abstract_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>allocator.h</label>
        <link refid="allocator_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>buildingBlock.h</label>
        <link refid="buildingBlock_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>enum.h</label>
        <link refid="enum_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>error.h</label>
        <link refid="error_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>evaluation.h</label>
        <link refid="evaluation_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>literal.h</label>
        <link refid="literal_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/csl/mathFunctions.h</label>
        <link refid="mathFunctions_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>memory_pool.h</label>
        <link refid="memory__pool_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>numerical.h</label>
        <link refid="numerical_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>options.h</label>
        <link refid="options_8h"/>
      </node>
      <node id="33">
        <label>parent.h</label>
        <link refid="parent_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>scalarFunc.h</label>
        <link refid="scalarFunc_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>std_shared_ptr_inheritance.h</label>
        <link refid="std__shared__ptr__inheritance_8h"/>
      </node>
      <node id="35">
        <label>std_vector_implementation.h</label>
        <link refid="csl_2std__vector__implementation_8h"/>
      </node>
      <node id="29">
        <label>support.h</label>
        <link refid="support_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>typedef.h</label>
        <link refid="typedef_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>variableParent.h</label>
        <link refid="variableParent_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>bitset</label>
      </node>
      <node id="6">
        <label>cassert</label>
      </node>
      <node id="30">
        <label>cmath</label>
      </node>
      <node id="24">
        <label>csignal</label>
      </node>
      <node id="10">
        <label>functional</label>
      </node>
      <node id="13">
        <label>initializer_list</label>
      </node>
      <node id="7">
        <label>iostream</label>
      </node>
      <node id="14">
        <label>map</label>
      </node>
      <node id="11">
        <label>memory</label>
      </node>
      <node id="17">
        <label>mutex</label>
      </node>
      <node id="12">
        <label>optional</label>
      </node>
      <node id="15">
        <label>set</label>
      </node>
      <node id="8">
        <label>sstream</label>
      </node>
      <node id="9">
        <label>string</label>
      </node>
      <node id="25">
        <label>string_view</label>
      </node>
      <node id="18">
        <label>thread</label>
      </node>
      <node id="16">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>src/csl.h</label>
        <link refid="csl_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/csl/csl.h</label>
        <link refid="csl_2csl_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/csl/mathFunctions.h</label>
        <link refid="mathFunctions_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>src/csl/pseudoIntegral.h</label>
        <link refid="pseudoIntegral_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>src/marty.h</label>
        <link refid="marty_8h_source"/>
      </node>
      <node id="96">
        <label>src/marty/core/algebra.h</label>
        <link refid="algebra_8h"/>
      </node>
      <node id="53">
        <label>src/marty/core/amplitude.h</label>
        <link refid="amplitude_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>src/marty/core/amplitudeInitializer.h</label>
        <link refid="amplitudeInitializer_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>src/marty/core/amplitudeSimplification.h</label>
        <link refid="amplitudeSimplification_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>src/marty/core/bernoulli.h</label>
        <link refid="bernoulli_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>src/marty/core/cache.h</label>
        <link refid="cache_8h_source"/>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>src/marty/core/ckm.h</label>
        <link refid="ckm_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>src/marty/core/colorSimplification.h</label>
        <link refid="colorSimplification_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>src/marty/core/colorSpace.h</label>
        <link refid="colorSpace_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>src/marty/core/diracology.h</label>
        <link refid="diracology_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>src/marty/core/drawer.h</label>
        <link refid="drawer_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>src/marty/core/expander.h</label>
        <link refid="expander_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>src/marty/core/fermionChain.h</label>
        <link refid="fermionChain_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>src/marty/core/fermionFlow.h</label>
        <link refid="fermionFlow_8h"/>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>src/marty/core/fermionicField.h</label>
        <link refid="fermionicField_8h"/>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>src/marty/core/feynOptions.h</label>
        <link refid="feynOptions_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>src/marty/core/feynmanDiagram.h</label>
        <link refid="feynmanDiagram_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>src/marty/core/feynmanIntegral.h</label>
        <link refid="feynmanIntegral_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>src/marty/core/feynmanRule.h</label>
        <link refid="feynmanRule_8h"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>src/marty/core/feynruleMomentum.h</label>
        <link refid="feynruleMomentum_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>src/marty/core/filters.h</label>
        <link refid="filters_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>src/marty/core/flavor.h</label>
        <link refid="flavor_8h"/>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>src/marty/core/gauge.h</label>
        <link refid="gauge_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>src/marty/core/gauged.h</label>
        <link refid="gauged_8h"/>
      </node>
      <node id="68">
        <label>src/marty/core/gaugedGroup.h</label>
        <link refid="gaugedGroup_8h"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>src/marty/core/generator.h</label>
        <link refid="generator_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>src/marty/core/ghostField.h</label>
        <link refid="ghostField_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>src/marty/core/goldstoneField.h</label>
        <link refid="goldstoneField_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>src/marty/core/graph.h</label>
        <link refid="graph_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>src/marty/core/group.h</label>
        <link refid="group_8h"/>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>src/marty/core/groupIndices.h</label>
        <link refid="groupIndices_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>src/marty/core/insertion.h</label>
        <link refid="insertion_8h"/>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>src/marty/core/interactionTerm.h</label>
        <link refid="interactionTerm_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>src/marty/core/iterable.h</label>
        <link refid="iterable_8h"/>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>src/marty/core/kinematics.h</label>
        <link refid="kinematics_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>src/marty/core/lagrangian.h</label>
        <link refid="lagrangian_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>src/marty/core/lhaBuiltIn.h</label>
        <link refid="lhaBuiltIn_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>src/marty/core/looptools_extension.h</label>
        <link refid="looptools__extension_8h"/>
      </node>
      <node id="9">
        <label>src/marty/core/marty.h</label>
        <link refid="marty_2core_2marty_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>src/marty/core/model.h</label>
        <link refid="model_8h"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>src/marty/core/modelBuilder.h</label>
        <link refid="modelBuilder_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>src/marty/core/modelData.h</label>
        <link refid="modelData_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>src/marty/core/momentumConservation.h</label>
        <link refid="momentumConservation_8h"/>
      </node>
      <node id="56">
        <label>src/marty/core/mrtInterface.h</label>
        <link refid="mrtInterface_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>src/marty/core/mrtInterfaceCurrent.h</label>
        <link refid="mrtInterfaceCurrent_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>src/marty/core/mrtUtils.h</label>
        <link refid="mrtUtils_8h"/>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>src/marty/core/mtylibrary.h</label>
        <link refid="mtylibrary_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>src/marty/core/polarization.h</label>
        <link refid="polarization_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>src/marty/core/propagator.h</label>
        <link refid="propagator_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>src/marty/core/quantumField.h</label>
        <link refid="quantumField_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>src/marty/core/quantumFieldTheory.h</label>
        <link refid="quantumFieldTheory_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>src/marty/core/representation.h</label>
        <link refid="representation_8h"/>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>src/marty/core/scalarField.h</label>
        <link refid="scalarField_8h"/>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>src/marty/core/semiSimpleAlgebra.h</label>
        <link refid="semiSimpleAlgebra_8h"/>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>src/marty/core/sglconverter.h</label>
        <link refid="sglconverter_8h_source"/>
      </node>
      <node id="6">
        <label>src/marty/core/sglsimplify.h</label>
        <link refid="sglsimplify_8h_source"/>
      </node>
      <node id="78">
        <label>src/marty/core/spectrum.h</label>
        <link refid="spectrum_8h"/>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>src/marty/core/su_n_algebra.h</label>
        <link refid="su__n__algebra_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>src/marty/core/traceIdentities.h</label>
        <link refid="traceIdentities_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>src/marty/core/vectorField.h</label>
        <link refid="vectorField_8h"/>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>src/marty/core/wick.h</label>
        <link refid="wick_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>src/marty/core/wilson.h</label>
        <link refid="wilson_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>src/marty/core/wilsonOperator.h</label>
        <link refid="wilsonOperator_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>src/marty/models/gthdm.h</label>
        <link refid="gthdm_8h_source"/>
      </node>
      <node id="58">
        <label>src/marty/models/mssm.h</label>
        <link refid="mssm_8h_source"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>src/marty/models/mssmData.h</label>
        <link refid="mssmData_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>src/marty/models/nmfv.h</label>
        <link refid="nmfv_8h_source"/>
      </node>
      <node id="59">
        <label>src/marty/models/pmssm.h</label>
        <link refid="pmssm_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>src/marty/models/pmssm_lem.h</label>
        <link refid="pmssm__lem_8h_source"/>
      </node>
      <node id="11">
        <label>src/marty/models/pmssm_lem/pmssm_data.h</label>
        <link refid="pmssm__data_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>src/marty/models/pmssm_lem/pmssm_lem.h</label>
        <link refid="pmssm__lem_2pmssm__lem_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>src/marty/models/qcd.h</label>
        <link refid="qcd_8h_source"/>
      </node>
      <node id="62">
        <label>src/marty/models/qed.h</label>
        <link refid="qed_8h"/>
      </node>
      <node id="63">
        <label>src/marty/models/sm.h</label>
        <link refid="sm_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>src/marty/models/thdm.h</label>
        <link refid="thdm_8h_source"/>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/marty/sgl/abstractgammasym.h</label>
        <link refid="abstractgammasym_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>src/marty/sgl/contraction.h</label>
        <link refid="contraction_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>src/marty/sgl/cslconverter.h</label>
        <link refid="cslconverter_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>src/marty/sgl/cslexpr.h</label>
        <link refid="cslexpr_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>src/marty/sgl/epsilonindex.h</label>
        <link refid="epsilonindex_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>src/marty/sgl/gammaindex.h</label>
        <link refid="gammaindex_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>src/marty/sgl/generalizedindex.h</label>
        <link refid="generalizedindex_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>src/marty/sgl/indexchain.h</label>
        <link refid="indexchain_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>src/marty/sgl/metricindex.h</label>
        <link refid="metricindex_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>src/marty/sgl/momentumindex.h</label>
        <link refid="momentumindex_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>src/marty/sgl/multifunction.h</label>
        <link refid="multifunction_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>src/marty/sgl/ordering.h</label>
        <link refid="ordering_8h"/>
      </node>
      <node id="8">
        <label>src/marty/sgl/sgl.h</label>
        <link refid="sgl_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>src/marty/sgl/sglalgo.h</label>
        <link refid="sglalgo_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>src/marty/sgl/sglcommutation.h</label>
        <link refid="sglcommutation_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>src/marty/sgl/sglfield.h</label>
        <link refid="sglfield_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>src/marty/sgl/sglinterface.h</label>
        <link refid="sglinterface_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>src/marty/sgl/sgloperations.h</label>
        <link refid="sgloperations_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>src/marty/sgl/simplify.h</label>
        <link refid="simplify_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>src/marty/sgl/tensorset.h</label>
        <link refid="tensorset_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>src/marty/sgl/tracer.h</label>
        <link refid="tracer_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>src/marty/sgl/typecast.h</label>
        <link refid="typecast_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classcsl_1_1Abs" prot="public">csl::Abs</innerclass>
    <innerclass refid="classcsl_1_1Exp" prot="public">csl::Exp</innerclass>
    <innerclass refid="classcsl_1_1Log" prot="public">csl::Log</innerclass>
    <innerclass refid="classcsl_1_1Cos" prot="public">csl::Cos</innerclass>
    <innerclass refid="classcsl_1_1Sin" prot="public">csl::Sin</innerclass>
    <innerclass refid="classcsl_1_1Tan" prot="public">csl::Tan</innerclass>
    <innerclass refid="classcsl_1_1ACos" prot="public">csl::ACos</innerclass>
    <innerclass refid="classcsl_1_1ASin" prot="public">csl::ASin</innerclass>
    <innerclass refid="classcsl_1_1ATan" prot="public">csl::ATan</innerclass>
    <innerclass refid="classcsl_1_1Angle" prot="public">csl::Angle</innerclass>
    <innerclass refid="classcsl_1_1Cosh" prot="public">csl::Cosh</innerclass>
    <innerclass refid="classcsl_1_1Sinh" prot="public">csl::Sinh</innerclass>
    <innerclass refid="classcsl_1_1Tanh" prot="public">csl::Tanh</innerclass>
    <innerclass refid="classcsl_1_1ACosh" prot="public">csl::ACosh</innerclass>
    <innerclass refid="classcsl_1_1ASinh" prot="public">csl::ASinh</innerclass>
    <innerclass refid="classcsl_1_1ATanh" prot="public">csl::ATanh</innerclass>
    <innerclass refid="classcsl_1_1Factorial" prot="public">csl::Factorial</innerclass>
    <innerclass refid="classcsl_1_1DiracDelta" prot="public">csl::DiracDelta</innerclass>
    <innernamespace refid="namespacecsl">csl</innernamespace>
    <briefdescription>
<para>Objects handling mathematical functions. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Grégoire Uhlrich </para>
</simplesect>
<simplesect kind="version"><para>1.3 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>MARTY.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MARTY<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MARTY<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>along<sp/>with<sp/>MARTY.<sp/>If<sp/>not,<sp/>see<sp/>&lt;https://www.gnu.org/licenses/&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MATHFUNCTIONS_H_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MATHFUNCTIONS_H_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scalarFunc_8h" kindref="compound">scalarFunc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecsl" kindref="compound">csl</ref><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classcsl_1_1Abs" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcsl_1_1Abs" kindref="compound">Abs</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abs_1ab0569268981dbf81400dbee0852616b3" kindref="member">Abs</ref>();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abs_1ab0569268981dbf81400dbee0852616b3" kindref="member">Abs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;t_argument);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Abs" kindref="compound">~Abs</ref>()</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__record_data_alloc(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classcsl_1_1Abs_1aec650f01292bf5d1381d587e489a4810" kindref="member">getType</ref>()));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classcsl_1_1Abs_1aec650f01292bf5d1381d587e489a4810" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312" kindref="member">csl::Type</ref><sp/><ref refid="classcsl_1_1Abs_1aec650f01292bf5d1381d587e489a4810" kindref="member">getType</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="53"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312a1e34af023adeb7d5f484f8eb4b9826b6" kindref="member">csl::Type::Abs</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abs_1a08ced320bad3c444c1d51efde39c068b" kindref="member">print</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream<sp/>&amp;out<sp/><sp/><sp/><sp/><sp/>=<sp/>std::cout,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LibraryMode<sp/><sp/><sp/>libMode<sp/>=<sp/>LibraryMode::NoLib)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printCode(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0,<sp/>std::ostream<sp/>&amp;out<sp/>=<sp/>std::cout)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classcsl_1_1Abs_1a4dcecd9b1e1dbca2386e4af8dd663ba5" kindref="member">printLaTeX</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1LibDependency" kindref="compound">LibDependency</ref><sp/>getLibDependency()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Abs_1ac08757293e89b6352824ae09843a5c18" kindref="member">evaluate</ref>(csl::eval::mode<sp/>user_mode</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>csl::eval::base)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>unique_Expr<sp/>copy_unique()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepCopy()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>refresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepRefresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abs_1abd250986b9ce084c98fb968db0fb587b" kindref="member">evaluateScalar</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Abs_1afe47e46685e38164123937fffa8c3072" kindref="member">derive</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>expr)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abs_1a3b735634cb0181f048b6fd23dea5a614" kindref="member">getParity</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>t_variable)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal">Expr<sp/><ref refid="namespacecsl_1a5327d368e944125c5ffa58b304051751" kindref="member">abs_s</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;expr);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="classcsl_1_1Exp" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcsl_1_1Exp" kindref="compound">Exp</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Exp_1a35a8d2caa991252f7e5f342cdf1d0e44" kindref="member">Exp</ref>();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Exp_1a35a8d2caa991252f7e5f342cdf1d0e44" kindref="member">Exp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;t_argument);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Exp" kindref="compound">~Exp</ref>()</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__record_data_alloc(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classcsl_1_1Exp_1a6e36f13b9963e395c6d9ce5f58fbbaa1" kindref="member">getType</ref>()));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="classcsl_1_1Exp_1a6e36f13b9963e395c6d9ce5f58fbbaa1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312" kindref="member">csl::Type</ref><sp/><ref refid="classcsl_1_1Exp_1a6e36f13b9963e395c6d9ce5f58fbbaa1" kindref="member">getType</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="132"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312acad39a154bffb61175f674d6eefaf6d0" kindref="member">csl::Type::Exp</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Exp_1a3e803100efb959d15e40b0e69aa9a369" kindref="member">getRealPart</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/><ref refid="classcsl_1_1Exp_1a08b474f3f0dbf2255e4c142ad5e095e1" kindref="member">getImaginaryPart</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Exp_1a6fd77dde2c403a67d2020966a14b0033" kindref="member">getComplexModulus</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Exp_1a9834c3827d1af36549c055f3a4f65c6d" kindref="member">getComplexArgument</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Exp_1acc132fb2a3e66943918158e1be8b2f92" kindref="member">print</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream<sp/>&amp;out<sp/><sp/><sp/><sp/><sp/>=<sp/>std::cout,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LibraryMode<sp/><sp/><sp/>libMode<sp/>=<sp/>LibraryMode::NoLib)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printCode(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0,<sp/>std::ostream<sp/>&amp;out<sp/>=<sp/>std::cout)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classcsl_1_1Exp_1a4bf08517c64b660eb82cf2922e893cfc" kindref="member">printLaTeX</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1LibDependency" kindref="compound">LibDependency</ref><sp/>getLibDependency()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Exp_1a396b88644ca6fe350fff11960592c4b7" kindref="member">evaluateScalar</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Exp_1a9927422cac69f3ef722551ac4d37d33f" kindref="member">evaluate</ref>(csl::eval::mode<sp/>user_mode</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>csl::eval::base)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>unique_Expr<sp/>copy_unique()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepCopy()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>refresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepRefresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Exp_1aff1fdef24f13fcc5f8ccccb8152eaa63" kindref="member">derive</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>expr)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Exp_1a53d5fa8b9bf211862d9c6dde6fcad3a6" kindref="member">expand</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>full<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inplace<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Exp_1a0742b26f0efd5a82473f3d8b26524fcd" kindref="member">expand_if</ref>(std::function&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">(<ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;f,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>full<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inplace<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Exp_1a074d3618469cd4ab010d6c48c47f4976" kindref="member">getParity</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>t_variable)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal">};</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal">Expr<sp/><ref refid="namespacecsl_1a677874110c8d7d3febc7f30085273e6b" kindref="member">exp_s</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;expr);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="classcsl_1_1Log" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcsl_1_1Log" kindref="compound">Log</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Log_1addd0fbc4294eec0b61a6d7b56a45c352" kindref="member">Log</ref>();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Log_1addd0fbc4294eec0b61a6d7b56a45c352" kindref="member">Log</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;t_argument);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Log" kindref="compound">~Log</ref>()</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__record_data_alloc(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classcsl_1_1Log_1a87bd2f7fce0e7a74fdfcbd438553d4c7" kindref="member">getType</ref>()));</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="classcsl_1_1Log_1a87bd2f7fce0e7a74fdfcbd438553d4c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312" kindref="member">csl::Type</ref><sp/><ref refid="classcsl_1_1Log_1a87bd2f7fce0e7a74fdfcbd438553d4c7" kindref="member">getType</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="222"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312ace0be71e33226e4c1db2bcea5959f16b" kindref="member">csl::Type::Log</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Log_1ab37426baaea4c8e148ee683b488d0fb2" kindref="member">getRealPart</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/><ref refid="classcsl_1_1Log_1a2c9e7604ea16b86991190c95a48b6819" kindref="member">getImaginaryPart</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Log_1a130216294a13120423ff0d742321d4b1" kindref="member">getComplexModulus</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Log_1a16aff9ed9a21cb6653deb96048f29225" kindref="member">getComplexArgument</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Log_1a86215b004fb03ac928ba6229d1c97535" kindref="member">print</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream<sp/>&amp;out<sp/><sp/><sp/><sp/><sp/>=<sp/>std::cout,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LibraryMode<sp/><sp/><sp/>libMode<sp/>=<sp/>LibraryMode::NoLib)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printCode(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0,<sp/>std::ostream<sp/>&amp;out<sp/>=<sp/>std::cout)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classcsl_1_1Log_1adb9494e204b723c0401b679cde2b36e3" kindref="member">printLaTeX</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1LibDependency" kindref="compound">LibDependency</ref><sp/>getLibDependency()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Log_1a557c51c92ffe849c9f96e9a9f65d39de" kindref="member">evaluateScalar</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Log_1a6007d682abe9cd508476984a051c0844" kindref="member">evaluate</ref>(csl::eval::mode<sp/>user_mode</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>csl::eval::base)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>unique_Expr<sp/>copy_unique()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepCopy()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>refresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepRefresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Log_1a6fa3e9448a30bfb341a7ef9253841240" kindref="member">derive</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>expr)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Log_1a53b05a1dd7c973da172358bb673e4549" kindref="member">getParity</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>t_variable)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal">};</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal">Expr<sp/><ref refid="namespacecsl_1a77a31d3871e8136ab04e15368528c846" kindref="member">log_s</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;expr);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="classcsl_1_1Cos" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcsl_1_1Cos" kindref="compound">Cos</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Cos_1a9d1c44e33f37025e9541d5f9df6e2f24" kindref="member">Cos</ref>();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Cos_1a9d1c44e33f37025e9541d5f9df6e2f24" kindref="member">Cos</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;t_argument);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Cos" kindref="compound">~Cos</ref>()</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__record_data_alloc(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classcsl_1_1Cos_1a1fb5b606bba498a4ae74ea3ea6f669a3" kindref="member">getType</ref>()));</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="classcsl_1_1Cos_1a1fb5b606bba498a4ae74ea3ea6f669a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312" kindref="member">csl::Type</ref><sp/><ref refid="classcsl_1_1Cos_1a1fb5b606bba498a4ae74ea3ea6f669a3" kindref="member">getType</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="305"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312affca562be079b9e4e41ea9d6a86c582b" kindref="member">csl::Type::Cos</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Cos_1addc14896700e9950baee3374a09b558d" kindref="member">getRealPart</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/><ref refid="classcsl_1_1Cos_1adfb13db23ecb0b199fd19ce03a68af09" kindref="member">getImaginaryPart</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Cos_1a7f26952b1462ae3b1cd2ee13ce5dcaff" kindref="member">getComplexModulus</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Cos_1aae93b65d1aa61e9c6a4422d5c168f617" kindref="member">getComplexArgument</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Cos_1afa1a771ec452b284b470682fcb87b002" kindref="member">print</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream<sp/>&amp;out<sp/><sp/><sp/><sp/><sp/>=<sp/>std::cout,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LibraryMode<sp/><sp/><sp/>libMode<sp/>=<sp/>LibraryMode::NoLib)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printCode(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0,<sp/>std::ostream<sp/>&amp;out<sp/>=<sp/>std::cout)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classcsl_1_1Cos_1a0004c95693419ba41ad203caf20a7f64" kindref="member">printLaTeX</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1LibDependency" kindref="compound">LibDependency</ref><sp/>getLibDependency()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Cos_1a6eb534b4b475261522c8c93ce594646c" kindref="member">evaluateScalar</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Cos_1a3baf3fecf9ea48db4ba1fbbfd3aee05b" kindref="member">evaluate</ref>(csl::eval::mode<sp/>user_mode</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>csl::eval::base)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>unique_Expr<sp/>copy_unique()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepCopy()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>refresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepRefresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Cos_1ae4305e350e7d257c189df1d051169f9c" kindref="member">derive</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>expr)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Cos_1a8a840d5af4c79bf20430b144ee0da9b1" kindref="member">getParity</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>t_variable)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal">};</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal">Expr<sp/><ref refid="namespacecsl_1a3033bff78373155994cbf45ec3e71493" kindref="member">cos_s</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;expr);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="classcsl_1_1Sin" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcsl_1_1Sin" kindref="compound">Sin</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Sin_1a55a7bf021a80e54b301e1b3fcc96d4b2" kindref="member">Sin</ref>();</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Sin_1a55a7bf021a80e54b301e1b3fcc96d4b2" kindref="member">Sin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;t_argument);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Sin" kindref="compound">~Sin</ref>()</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__record_data_alloc(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classcsl_1_1Sin_1a9f090098e2afc33ef5ce79391a207164" kindref="member">getType</ref>()));</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="387" refid="classcsl_1_1Sin_1a9f090098e2afc33ef5ce79391a207164" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312" kindref="member">csl::Type</ref><sp/><ref refid="classcsl_1_1Sin_1a9f090098e2afc33ef5ce79391a207164" kindref="member">getType</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="388"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312a0986d137604183312e6d3599578bc6cd" kindref="member">csl::Type::Sin</ref>;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Sin_1a35ffd397f83edf315fd120c96f44063a" kindref="member">getRealPart</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/><ref refid="classcsl_1_1Sin_1a84960733192e56a4335215ba5ebb6a65" kindref="member">getImaginaryPart</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Sin_1a34f3048a1f09a214bc240cb0030c2c11" kindref="member">getComplexModulus</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Sin_1a91951762c50bbf889d5d0aa1cfd7847f" kindref="member">getComplexArgument</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Sin_1a05bd2fbbf3e80be7bab9a1df28c3f27f" kindref="member">print</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream<sp/>&amp;out<sp/><sp/><sp/><sp/><sp/>=<sp/>std::cout,</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LibraryMode<sp/><sp/><sp/>libMode<sp/>=<sp/>LibraryMode::NoLib)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printCode(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0,<sp/>std::ostream<sp/>&amp;out<sp/>=<sp/>std::cout)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classcsl_1_1Sin_1ab26f459fab68d5b382ff9a4be70b9c2d" kindref="member">printLaTeX</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1LibDependency" kindref="compound">LibDependency</ref><sp/>getLibDependency()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Sin_1af7b3d229ea8b52816102b4facbd7d6bb" kindref="member">evaluateScalar</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Sin_1a9977b55ee7079bf9bc7205a57975dd5f" kindref="member">evaluate</ref>(csl::eval::mode<sp/>user_mode</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>csl::eval::base)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>unique_Expr<sp/>copy_unique()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepCopy()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>refresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepRefresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Sin_1a4a9faa3552509a110f6182306a3dd66c" kindref="member">derive</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>expr)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Sin_1a51c0924da089969435b2fb45118e9a52" kindref="member">getParity</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>t_variable)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="432"><highlight class="normal">};</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal">Expr<sp/><ref refid="namespacecsl_1a5f030b62fc81f11147493796bfa30b54" kindref="member">sin_s</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;expr);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="448" refid="classcsl_1_1Tan" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcsl_1_1Tan" kindref="compound">Tan</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref><sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Tan_1a8e10967b6d14a4a568115176d6fe6c53" kindref="member">Tan</ref>();</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Tan_1a8e10967b6d14a4a568115176d6fe6c53" kindref="member">Tan</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;t_argument);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Tan" kindref="compound">~Tan</ref>()</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__record_data_alloc(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classcsl_1_1Tan_1a13e3eefa59b9a66427401b7a9693cb55" kindref="member">getType</ref>()));</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="470" refid="classcsl_1_1Tan_1a13e3eefa59b9a66427401b7a9693cb55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312" kindref="member">csl::Type</ref><sp/><ref refid="classcsl_1_1Tan_1a13e3eefa59b9a66427401b7a9693cb55" kindref="member">getType</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="471"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312a1266b4e6f81e60733ec6c717e0181f60" kindref="member">csl::Type::Tan</ref>;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Tan_1a89fd2f3ff51edc27812a0440189da5cc" kindref="member">getRealPart</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/><ref refid="classcsl_1_1Tan_1af3ffacb8a8af004785a01eb099d5c246" kindref="member">getImaginaryPart</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Tan_1a34ccf0fdcfa2a43f5725e32e9c201aeb" kindref="member">getComplexModulus</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Tan_1a36c5713ba2b02de5da810bbdc1cf0cce" kindref="member">getComplexArgument</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Tan_1a6a1e5434ee58f6eb13d4bacf43e97804" kindref="member">print</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream<sp/>&amp;out<sp/><sp/><sp/><sp/><sp/>=<sp/>std::cout,</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LibraryMode<sp/><sp/><sp/>libMode<sp/>=<sp/>LibraryMode::NoLib)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printCode(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0,<sp/>std::ostream<sp/>&amp;out<sp/>=<sp/>std::cout)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classcsl_1_1Tan_1a69fc6716a19363bc3379d64faad91f28" kindref="member">printLaTeX</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1LibDependency" kindref="compound">LibDependency</ref><sp/>getLibDependency()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Tan_1a01cd6db9fc2543411cba9362d082b54d" kindref="member">evaluateScalar</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Tan_1a1c5025345411cb71d081394524492ae1" kindref="member">evaluate</ref>(csl::eval::mode<sp/>user_mode</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>csl::eval::base)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>unique_Expr<sp/>copy_unique()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepCopy()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>refresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepRefresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Tan_1a53bc7f2997e0380a6d148c2f1dbf395a" kindref="member">derive</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>expr)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Tan_1a888df766c47e82b50a9e2bd72192cbbb" kindref="member">getParity</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>t_variable)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="515"><highlight class="normal">};</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal">Expr<sp/><ref refid="namespacecsl_1afbaab772a8fb873c65e06d079e73cd06" kindref="member">tan_s</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;expr);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="531" refid="classcsl_1_1ACos" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcsl_1_1ACos" kindref="compound">ACos</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1ACos_1a126cdbe28f59fe0fadc5dcd47e188830" kindref="member">ACos</ref>();</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ACos_1a126cdbe28f59fe0fadc5dcd47e188830" kindref="member">ACos</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;t_argument);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1ACos" kindref="compound">~ACos</ref>()</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__record_data_alloc(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classcsl_1_1ACos_1a6533f24c81b914bd04f440e19cbb3a16" kindref="member">getType</ref>()));</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="553" refid="classcsl_1_1ACos_1a6533f24c81b914bd04f440e19cbb3a16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312" kindref="member">csl::Type</ref><sp/><ref refid="classcsl_1_1ACos_1a6533f24c81b914bd04f440e19cbb3a16" kindref="member">getType</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="554"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312a1c3ca8e525c0e6a47cc8489cb3155365" kindref="member">csl::Type::ACos</ref>;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1ACos_1a16301f8ed54cac63ac5389fc179f24d6" kindref="member">getRealPart</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/><ref refid="classcsl_1_1ACos_1aab3e1ceb5273ff6ada3c1d0d207f75d3" kindref="member">getImaginaryPart</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1ACos_1a9363acfe89a647a562322a036fe68469" kindref="member">getComplexModulus</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1ACos_1a745db1e3e6c7e9afb433a89b0f10b0a0" kindref="member">getComplexArgument</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ACos_1ac3a70d756d2c6f91ee35dc46f845b7f5" kindref="member">print</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream<sp/>&amp;out<sp/><sp/><sp/><sp/><sp/>=<sp/>std::cout,</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LibraryMode<sp/><sp/><sp/>libMode<sp/>=<sp/>LibraryMode::NoLib)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printCode(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0,<sp/>std::ostream<sp/>&amp;out<sp/>=<sp/>std::cout)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classcsl_1_1ACos_1acd36159ea83e46fe2ca50a3ada149bd5" kindref="member">printLaTeX</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1LibDependency" kindref="compound">LibDependency</ref><sp/>getLibDependency()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ACos_1a24cd3961c5c39c3788a702410c437808" kindref="member">evaluateScalar</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1ACos_1a17e119e2f6d22f0b6c1f149e2ebefcd5" kindref="member">evaluate</ref>(csl::eval::mode<sp/>user_mode</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>csl::eval::base)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>unique_Expr<sp/>copy_unique()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepCopy()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>refresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepRefresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1ACos_1aa0c7176fd612d3d1ed3f1f61eb900399" kindref="member">derive</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>expr)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ACos_1a95a6076fdc3cae921b5cde90a835e74e" kindref="member">getParity</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>t_variable)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="598"><highlight class="normal">};</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal">Expr<sp/><ref refid="namespacecsl_1a51f0625e0729c8516296eaa4e82a9928" kindref="member">acos_s</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;expr);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="614" refid="classcsl_1_1ASin" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcsl_1_1ASin" kindref="compound">ASin</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref><sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1ASin_1af26aa02b8bf894310b9f466efa17fb0b" kindref="member">ASin</ref>();</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ASin_1af26aa02b8bf894310b9f466efa17fb0b" kindref="member">ASin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;t_argument);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1ASin" kindref="compound">~ASin</ref>()</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__record_data_alloc(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classcsl_1_1ASin_1aff7945ce6a7782ffc619ebcef75ef15f" kindref="member">getType</ref>()));</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="636" refid="classcsl_1_1ASin_1aff7945ce6a7782ffc619ebcef75ef15f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312" kindref="member">csl::Type</ref><sp/><ref refid="classcsl_1_1ASin_1aff7945ce6a7782ffc619ebcef75ef15f" kindref="member">getType</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="637"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312a118d7e2878ba8789c8f86eee41c470b3" kindref="member">csl::Type::ASin</ref>;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1ASin_1ac0f8218b321a2294612e25d3e57c2318" kindref="member">getRealPart</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/><ref refid="classcsl_1_1ASin_1ab7c943492f3eb479cc7f846049e86811" kindref="member">getImaginaryPart</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1ASin_1a776b7c1794fe574114e1e3198d73fa18" kindref="member">getComplexModulus</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1ASin_1a390673a164b5daae797188ebebc2a4fc" kindref="member">getComplexArgument</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ASin_1ac1da66cfd9b73db5a47e92279011dd08" kindref="member">print</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream<sp/>&amp;out<sp/><sp/><sp/><sp/><sp/>=<sp/>std::cout,</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LibraryMode<sp/><sp/><sp/>libMode<sp/>=<sp/>LibraryMode::NoLib)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printCode(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0,<sp/>std::ostream<sp/>&amp;out<sp/>=<sp/>std::cout)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classcsl_1_1ASin_1ae9ef3ca87aa148c1bdcdb4d62ae9f2dd" kindref="member">printLaTeX</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1LibDependency" kindref="compound">LibDependency</ref><sp/>getLibDependency()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ASin_1af81b867514a85671642e52445b18e4d9" kindref="member">evaluateScalar</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1ASin_1afd6d69a61c924d596c1f7adb859893b0" kindref="member">evaluate</ref>(csl::eval::mode<sp/>user_mode</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>csl::eval::base)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>unique_Expr<sp/>copy_unique()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepCopy()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>refresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepRefresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1ASin_1afec8424240e853545a33c5c260195716" kindref="member">derive</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>expr)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ASin_1a142897732f1f6c347bc4e65c344bbb27" kindref="member">getParity</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>t_variable)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="681"><highlight class="normal">};</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal">Expr<sp/><ref refid="namespacecsl_1ac5fe6fa63f0b6cd80fd9edd625a715ad" kindref="member">asin_s</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;expr);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="697" refid="classcsl_1_1ATan" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcsl_1_1ATan" kindref="compound">ATan</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref><sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1ATan_1aef16996e7bd408bbc9fc9a1b21f0cccd" kindref="member">ATan</ref>();</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ATan_1aef16996e7bd408bbc9fc9a1b21f0cccd" kindref="member">ATan</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;t_argument);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1ATan" kindref="compound">~ATan</ref>()</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__record_data_alloc(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classcsl_1_1ATan_1aef622a35036fcdd32527b881dc14e559" kindref="member">getType</ref>()));</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="719" refid="classcsl_1_1ATan_1aef622a35036fcdd32527b881dc14e559" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312" kindref="member">csl::Type</ref><sp/><ref refid="classcsl_1_1ATan_1aef622a35036fcdd32527b881dc14e559" kindref="member">getType</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="720"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312af9be9640e98f6072e8e0eaf2b418efe2" kindref="member">csl::Type::ATan</ref>;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ATan_1a309557f2c6332130e57396181f0cc64f" kindref="member">print</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream<sp/>&amp;out<sp/><sp/><sp/><sp/><sp/>=<sp/>std::cout,</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LibraryMode<sp/><sp/><sp/>libMode<sp/>=<sp/>LibraryMode::NoLib)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printCode(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0,<sp/>std::ostream<sp/>&amp;out<sp/>=<sp/>std::cout)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classcsl_1_1ATan_1a851f824336d8fd176d2cc9264bfd8fcf" kindref="member">printLaTeX</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1LibDependency" kindref="compound">LibDependency</ref><sp/>getLibDependency()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ATan_1a5cc44ce49897c4488538e7b2f8ecf0b3" kindref="member">evaluateScalar</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1ATan_1a275592a7ba6a9985e921b3a791dc461f" kindref="member">evaluate</ref>(csl::eval::mode<sp/>user_mode</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>csl::eval::base)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>unique_Expr<sp/>copy_unique()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepCopy()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>refresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepRefresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1ATan_1a4b4ed4cfcd4c834f3a99ac2a474bad51" kindref="member">derive</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>expr)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ATan_1abce45fbcda74eb7acf909c5c711176c0" kindref="member">getParity</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>t_variable)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="756"><highlight class="normal">};</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal">Expr<sp/><ref refid="namespacecsl_1a55a28054aa1541d982b05e4c90e22243" kindref="member">atan_s</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;expr);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="772" refid="classcsl_1_1Angle" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcsl_1_1Angle" kindref="compound">Angle</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1AbstractDuoFunc" kindref="compound">AbstractDuoFunc</ref><sp/>{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Angle_1af641fb8201339c8f0322370210ada690" kindref="member">Angle</ref>();</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Angle_1af641fb8201339c8f0322370210ada690" kindref="member">Angle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;leftOperand,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;rightOperand);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Angle" kindref="compound">~Angle</ref>()</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__record_data_alloc(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classcsl_1_1Angle_1a2a0a138a9196c8c5f195a822f7a8a982" kindref="member">getType</ref>()));</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="797" refid="classcsl_1_1Angle_1a2a0a138a9196c8c5f195a822f7a8a982" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312" kindref="member">csl::Type</ref><sp/><ref refid="classcsl_1_1Angle_1a2a0a138a9196c8c5f195a822f7a8a982" kindref="member">getType</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="798"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312a45f4ce6c3306644b1efe333f4f8d6929" kindref="member">csl::Type::Angle</ref>;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Angle_1a6efd87ab8730302f18e72b19431cf3b7" kindref="member">print</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream<sp/>&amp;out<sp/><sp/><sp/><sp/><sp/>=<sp/>std::cout,</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LibraryMode<sp/><sp/><sp/>libMode<sp/>=<sp/>LibraryMode::NoLib)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printCode(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0,<sp/>std::ostream<sp/>&amp;out<sp/>=<sp/>std::cout)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classcsl_1_1Angle_1a51993a606446fead779049e3581905f8" kindref="member">printLaTeX</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1LibDependency" kindref="compound">LibDependency</ref><sp/>getLibDependency()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Angle_1ab6f5cc0b8e682f2d670d65c76402a738" kindref="member">evaluateScalar</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Angle_1a2f0b4708a98d477767a53218adf0affa" kindref="member">evaluate</ref>(csl::eval::mode<sp/>user_mode</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>csl::eval::base)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>unique_Expr<sp/>copy_unique()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepCopy()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>refresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepRefresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Angle_1a739e0603cbf9fdee3c3a5373ff96a04a" kindref="member">derive</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>expr)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Angle_1a92d43b635f0e38a6c1bc57875cf7341d" kindref="member">operator==</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>expr)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abstract" kindref="compound">Abstract</ref><sp/>*expr)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Angle_1a1c2c4dff4cecb505f6d9ce05701dfde0" kindref="member">getParity</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>t_variable)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="842"><highlight class="normal">};</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal">Expr<sp/>angle_s(Expr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;a,<sp/>Expr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;b);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="849" refid="classcsl_1_1Cosh" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcsl_1_1Cosh" kindref="compound">Cosh</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref><sp/>{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Cosh_1a7bed0807549cc4ed37f89d17b75bd79b" kindref="member">Cosh</ref>();</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Cosh_1a7bed0807549cc4ed37f89d17b75bd79b" kindref="member">Cosh</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;t_argument);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Cosh" kindref="compound">~Cosh</ref>()</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__record_data_alloc(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classcsl_1_1Cosh_1a49c09e3519a2307ef7c8713c643249ef" kindref="member">getType</ref>()));</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="871" refid="classcsl_1_1Cosh_1a49c09e3519a2307ef7c8713c643249ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312" kindref="member">csl::Type</ref><sp/><ref refid="classcsl_1_1Cosh_1a49c09e3519a2307ef7c8713c643249ef" kindref="member">getType</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="872"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312a4371c3565b771b40c187487cc0190392" kindref="member">csl::Type::Cosh</ref>;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Cosh_1a3d88db8dd64a46ef1cc70b1a0d19bca3" kindref="member">getRealPart</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/><ref refid="classcsl_1_1Cosh_1a86f7a0850d4ee1968733701c27273fce" kindref="member">getImaginaryPart</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Cosh_1a1eead10ed28b194fd75399d748a63254" kindref="member">getComplexModulus</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Cosh_1a6efd3054c14922af72c0e057395869f2" kindref="member">getComplexArgument</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Cosh_1a01a5c90284d2e60271aec223efed3348" kindref="member">print</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream<sp/>&amp;out<sp/><sp/><sp/><sp/><sp/>=<sp/>std::cout,</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LibraryMode<sp/><sp/><sp/>libMode<sp/>=<sp/>LibraryMode::NoLib)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printCode(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0,<sp/>std::ostream<sp/>&amp;out<sp/>=<sp/>std::cout)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classcsl_1_1Cosh_1a4f968c087cdf5402e49b67ea3ac5bf19" kindref="member">printLaTeX</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1LibDependency" kindref="compound">LibDependency</ref><sp/>getLibDependency()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Cosh_1a403d11f101661cb030e72f41907fdfc7" kindref="member">evaluateScalar</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Cosh_1ad40b853fb9959e63b514ed9c71b5bf2a" kindref="member">evaluate</ref>(csl::eval::mode<sp/>user_mode</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>csl::eval::base)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>unique_Expr<sp/>copy_unique()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepCopy()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>refresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepRefresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Cosh_1a028b7c99b3703dd1fb12c47cada7aaaf" kindref="member">derive</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>expr)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Cosh_1a1ad8069e9a1236eb00551780684b1240" kindref="member">getParity</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>t_variable)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="916"><highlight class="normal">};</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal">Expr<sp/><ref refid="namespacecsl_1a9f96bc23faf2e85278c67d2e77b02430" kindref="member">cosh_s</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;expr);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="932" refid="classcsl_1_1Sinh" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcsl_1_1Sinh" kindref="compound">Sinh</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref><sp/>{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Sinh_1a6a1efb6bbc82e786c0462aa26bc638a2" kindref="member">Sinh</ref>();</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Sinh_1a6a1efb6bbc82e786c0462aa26bc638a2" kindref="member">Sinh</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;t_argument);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Sinh" kindref="compound">~Sinh</ref>()</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__record_data_alloc(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classcsl_1_1Sinh_1a482b3aa41cdfda7b21a08914963e9ea4" kindref="member">getType</ref>()));</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="954" refid="classcsl_1_1Sinh_1a482b3aa41cdfda7b21a08914963e9ea4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312" kindref="member">csl::Type</ref><sp/><ref refid="classcsl_1_1Sinh_1a482b3aa41cdfda7b21a08914963e9ea4" kindref="member">getType</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="955"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312a98ed804abf4edd1f3be3fa894fa8cc3d" kindref="member">csl::Type::Sinh</ref>;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Sinh_1a5888952203e8271368e1aa19681afac4" kindref="member">getRealPart</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/><ref refid="classcsl_1_1Sinh_1aa9674cc4b3452c469d0c1314e3c8bd5b" kindref="member">getImaginaryPart</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Sinh_1a9c8562fa4fa0a8b9bfd299659b2948cf" kindref="member">getComplexModulus</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Sinh_1a596d1ee28a2d06a4e4c0bf55d7f12041" kindref="member">getComplexArgument</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Sinh_1abeeba07acff9c5b5cc8d2b90d4660ae5" kindref="member">print</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream<sp/>&amp;out<sp/><sp/><sp/><sp/><sp/>=<sp/>std::cout,</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LibraryMode<sp/><sp/><sp/>libMode<sp/>=<sp/>LibraryMode::NoLib)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printCode(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0,<sp/>std::ostream<sp/>&amp;out<sp/>=<sp/>std::cout)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classcsl_1_1Sinh_1a1cfab0be84d64aa34ba65ffdc8303937" kindref="member">printLaTeX</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1LibDependency" kindref="compound">LibDependency</ref><sp/>getLibDependency()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Sinh_1ad2e6606fa0e330acc102e4057a627425" kindref="member">evaluateScalar</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Sinh_1aa7b24dd1844a99aa1bf73f59829d6cb0" kindref="member">evaluate</ref>(csl::eval::mode<sp/>user_mode</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>csl::eval::base)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>unique_Expr<sp/>copy_unique()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepCopy()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>refresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepRefresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Sinh_1a8c235daf099d1ff4ebbff9fa846a7e82" kindref="member">derive</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>expr)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Sinh_1a32616979f93899f873439e54c65ab376" kindref="member">getParity</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>t_variable)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="999"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal">Expr<sp/><ref refid="namespacecsl_1a2aab7af831ac14498b23ac3daa80d1d5" kindref="member">sinh_s</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;expr);</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015" refid="classcsl_1_1Tanh" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcsl_1_1Tanh" kindref="compound">Tanh</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref><sp/>{</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Tanh_1a57afe5b06aa954f10909e90da261ed9a" kindref="member">Tanh</ref>();</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Tanh_1a57afe5b06aa954f10909e90da261ed9a" kindref="member">Tanh</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;t_argument);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Tanh" kindref="compound">~Tanh</ref>()</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__record_data_alloc(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classcsl_1_1Tanh_1a4a30d37ea900d3ce7ac37016bf669bd8" kindref="member">getType</ref>()));</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037" refid="classcsl_1_1Tanh_1a4a30d37ea900d3ce7ac37016bf669bd8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312" kindref="member">csl::Type</ref><sp/><ref refid="classcsl_1_1Tanh_1a4a30d37ea900d3ce7ac37016bf669bd8" kindref="member">getType</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="1038"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312acc132a41cab5676334f353a22a0aa5c5" kindref="member">csl::Type::Tanh</ref>;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Tanh_1a64eca21f5e81ff0a85e9d2bbd919edcd" kindref="member">getRealPart</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/><ref refid="classcsl_1_1Tanh_1a6079ee469f697fb680639537590ebd0f" kindref="member">getImaginaryPart</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Tanh_1ae5ecb5e85628afc42d25872291a718ed" kindref="member">getComplexModulus</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Tanh_1a3c66791362233e86cf739e907303d697" kindref="member">getComplexArgument</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Tanh_1a7f8da1a8e95f15ebd43e291dd0e196d0" kindref="member">print</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream<sp/>&amp;out<sp/><sp/><sp/><sp/><sp/>=<sp/>std::cout,</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LibraryMode<sp/><sp/><sp/>libMode<sp/>=<sp/>LibraryMode::NoLib)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printCode(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0,<sp/>std::ostream<sp/>&amp;out<sp/>=<sp/>std::cout)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classcsl_1_1Tanh_1a9ec76b9e7d1c85e6a20f100a3c1e975f" kindref="member">printLaTeX</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1LibDependency" kindref="compound">LibDependency</ref><sp/>getLibDependency()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Tanh_1ae507f59e44931085e7ac8a7d85a28ee5" kindref="member">evaluateScalar</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Tanh_1a094ae3e5b29e66a9d4319fb774b5bfcb" kindref="member">evaluate</ref>(csl::eval::mode<sp/>user_mode</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>csl::eval::base)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/>unique_Expr<sp/>copy_unique()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepCopy()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>refresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepRefresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Tanh_1a4a70018c2b554641a3ab51291ca4a878" kindref="member">derive</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>expr)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Tanh_1a33d8c0c83c0e2c9500448ceba8b61428" kindref="member">getParity</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>t_variable)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal">Expr<sp/><ref refid="namespacecsl_1a8a0975103bcda47f0e7a335677ba8e1f" kindref="member">tanh_s</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;expr);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098" refid="classcsl_1_1ACosh" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcsl_1_1ACosh" kindref="compound">ACosh</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref><sp/>{</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1ACosh_1a7a18938379c18b661c66d3b8d2e0f8a5" kindref="member">ACosh</ref>();</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ACosh_1a7a18938379c18b661c66d3b8d2e0f8a5" kindref="member">ACosh</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;t_argument);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1ACosh" kindref="compound">~ACosh</ref>()</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__record_data_alloc(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classcsl_1_1ACosh_1a1cd22dc7959d90a17fa747c05f1ac70a" kindref="member">getType</ref>()));</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1120" refid="classcsl_1_1ACosh_1a1cd22dc7959d90a17fa747c05f1ac70a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312" kindref="member">csl::Type</ref><sp/><ref refid="classcsl_1_1ACosh_1a1cd22dc7959d90a17fa747c05f1ac70a" kindref="member">getType</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="1121"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312a27cebb75cb5855484f7df7070b4cab73" kindref="member">csl::Type::ACosh</ref>;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ACosh_1a1c9ce73586a90e166932281d29a8090f" kindref="member">print</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream<sp/>&amp;out<sp/><sp/><sp/><sp/><sp/>=<sp/>std::cout,</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LibraryMode<sp/><sp/><sp/>libMode<sp/>=<sp/>LibraryMode::NoLib)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printCode(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0,<sp/>std::ostream<sp/>&amp;out<sp/>=<sp/>std::cout)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classcsl_1_1ACosh_1aca6f5306a978ba8589f2757c0599473a" kindref="member">printLaTeX</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1LibDependency" kindref="compound">LibDependency</ref><sp/>getLibDependency()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ACosh_1a3cece5a5ecb328b31e7f235b43bdab67" kindref="member">evaluateScalar</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1ACosh_1a1b3ac8c059d26ae9142d9f240f7aeb78" kindref="member">evaluate</ref>(csl::eval::mode<sp/>user_mode</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>csl::eval::base)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/>unique_Expr<sp/>copy_unique()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepCopy()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>refresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepRefresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1ACosh_1acb4452efbe7c588945a6f4e78d69d2fc" kindref="member">derive</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>expr)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ACosh_1a2dcbe0e8c6fc07d7d4ca3b02c24ced42" kindref="member">getParity</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>t_variable)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal">Expr<sp/><ref refid="namespacecsl_1a832f3758b9ec7e3f52e554b949c8acf3" kindref="member">acosh_s</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;expr);</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173" refid="classcsl_1_1ASinh" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcsl_1_1ASinh" kindref="compound">ASinh</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref><sp/>{</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1ASinh_1a0eb47846850ba500d6360829c5ef9de5" kindref="member">ASinh</ref>();</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ASinh_1a0eb47846850ba500d6360829c5ef9de5" kindref="member">ASinh</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;t_argument);</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1ASinh" kindref="compound">~ASinh</ref>()</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__record_data_alloc(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classcsl_1_1ASinh_1a8864eabb24d35309797271892591a61f" kindref="member">getType</ref>()));</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195" refid="classcsl_1_1ASinh_1a8864eabb24d35309797271892591a61f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312" kindref="member">csl::Type</ref><sp/><ref refid="classcsl_1_1ASinh_1a8864eabb24d35309797271892591a61f" kindref="member">getType</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="1196"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312a6964cd88a53b2e4c358bcad0d9feac55" kindref="member">csl::Type::ASinh</ref>;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ASinh_1ab6ee807bccbe4394943f169ccc620c1f" kindref="member">print</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream<sp/>&amp;out<sp/><sp/><sp/><sp/><sp/>=<sp/>std::cout,</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LibraryMode<sp/><sp/><sp/>libMode<sp/>=<sp/>LibraryMode::NoLib)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printCode(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0,<sp/>std::ostream<sp/>&amp;out<sp/>=<sp/>std::cout)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classcsl_1_1ASinh_1a470c061e6a77cedcf9f57bd01a53e1dc" kindref="member">printLaTeX</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1LibDependency" kindref="compound">LibDependency</ref><sp/>getLibDependency()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ASinh_1a22b8dc76ae36362de29bb2614925a8b6" kindref="member">evaluateScalar</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1ASinh_1a6489126c02c25e4cfb295db5d85cadd5" kindref="member">evaluate</ref>(csl::eval::mode<sp/>user_mode</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>csl::eval::base)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/>unique_Expr<sp/>copy_unique()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepCopy()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>refresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepRefresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1ASinh_1a4fb38ca160a4e8e770885ecaf2cc62f8" kindref="member">derive</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>expr)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ASinh_1a22a4862646c4cbaffcff45a8876c0648" kindref="member">getParity</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>t_variable)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal">Expr<sp/><ref refid="namespacecsl_1a6f8d17a63615e912a201b11ce163b9dd" kindref="member">asinh_s</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;expr);</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248" refid="classcsl_1_1ATanh" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcsl_1_1ATanh" kindref="compound">ATanh</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref><sp/>{</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1ATanh_1ab5d6f7f7f4c2c19c5fec4a1ba9bab7e6" kindref="member">ATanh</ref>();</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ATanh_1ab5d6f7f7f4c2c19c5fec4a1ba9bab7e6" kindref="member">ATanh</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;t_argument);</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1ATanh" kindref="compound">~ATanh</ref>()</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__record_data_alloc(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classcsl_1_1ATanh_1adb3c6afec3dde358d4afc272fe3e6177" kindref="member">getType</ref>()));</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270" refid="classcsl_1_1ATanh_1adb3c6afec3dde358d4afc272fe3e6177" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312" kindref="member">csl::Type</ref><sp/><ref refid="classcsl_1_1ATanh_1adb3c6afec3dde358d4afc272fe3e6177" kindref="member">getType</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="1271"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312a2286f4e717c6213c895da49a51aa5de7" kindref="member">csl::Type::ATanh</ref>;</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ATanh_1a16e9431afda48a0838e0f036501da476" kindref="member">print</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream<sp/>&amp;out<sp/><sp/><sp/><sp/><sp/>=<sp/>std::cout,</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LibraryMode<sp/><sp/><sp/>libMode<sp/>=<sp/>LibraryMode::NoLib)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printCode(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0,<sp/>std::ostream<sp/>&amp;out<sp/>=<sp/>std::cout)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classcsl_1_1ATanh_1adb8ee7249faa4bf5c723e0f8c998ea02" kindref="member">printLaTeX</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1LibDependency" kindref="compound">LibDependency</ref><sp/>getLibDependency()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ATanh_1a7a486ca2937c53a6d5940c2245da87b5" kindref="member">evaluateScalar</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1ATanh_1ad9ee39eda573051de9b45699ed886f83" kindref="member">evaluate</ref>(csl::eval::mode<sp/>user_mode</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>csl::eval::base)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/>unique_Expr<sp/>copy_unique()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepCopy()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>refresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepRefresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1ATanh_1a96c5e0b223b93c2a4469a73dfe3924f6" kindref="member">derive</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>expr)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ATanh_1afb2c14500cc281ef0a642294bda73e99" kindref="member">getParity</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>t_variable)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal">Expr<sp/><ref refid="namespacecsl_1ac7d65507d0aa73726a4f0969ba1134be" kindref="member">atanh_s</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;expr);</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323" refid="classcsl_1_1Factorial" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcsl_1_1Factorial" kindref="compound">Factorial</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref><sp/>{</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Factorial_1adce06238daf6aca42580f331463674f1" kindref="member">Factorial</ref>();</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Factorial_1adce06238daf6aca42580f331463674f1" kindref="member">Factorial</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;t_argument);</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Factorial" kindref="compound">~Factorial</ref>()</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__record_data_alloc(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classcsl_1_1Factorial_1ac31a3e15b4bf0d7604bbdadd2080cc7f" kindref="member">getType</ref>()));</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
<codeline lineno="1345" refid="classcsl_1_1Factorial_1ac31a3e15b4bf0d7604bbdadd2080cc7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312" kindref="member">csl::Type</ref><sp/><ref refid="classcsl_1_1Factorial_1ac31a3e15b4bf0d7604bbdadd2080cc7f" kindref="member">getType</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="1346"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312a012b11265b94945f7a1390a07776e625" kindref="member">csl::Type::Factorial</ref>;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Factorial_1ae5625935a6d612978db8b77d6b7a324e" kindref="member">print</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream<sp/>&amp;out<sp/><sp/><sp/><sp/><sp/>=<sp/>std::cout,</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LibraryMode<sp/><sp/><sp/>libMode<sp/>=<sp/>LibraryMode::NoLib)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printCode(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0,<sp/>std::ostream<sp/>&amp;out<sp/>=<sp/>std::cout)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classcsl_1_1Factorial_1a0f94e896bd5032efea33a4faae931980" kindref="member">printLaTeX</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1LibDependency" kindref="compound">LibDependency</ref><sp/>getLibDependency()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Factorial_1ab104048896f3aafb93bf35a73d8fa783" kindref="member">evaluate</ref>(csl::eval::mode<sp/>user_mode</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>csl::eval::base)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Factorial_1a59bdb12cae8d39b453b2f345f4a388ad" kindref="member">evaluateScalar</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/>unique_Expr<sp/>copy_unique()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepCopy()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>refresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepRefresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1Factorial_1aff04d4330b43f2a0c54d1f2089d09e97" kindref="member">derive</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>expr)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Factorial_1a687d7064e35ad99d4981e940c509440d" kindref="member">getParity</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>t_variable)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1389"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal">Expr<sp/>factorial_s(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;expr);</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight></codeline>
<codeline lineno="1393" refid="classcsl_1_1DiracDelta" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcsl_1_1DiracDelta" kindref="compound">DiracDelta</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref><sp/>{</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1DiracDelta_1ab2b01b60ad7a45c8b9c94a5b30f43316" kindref="member">DiracDelta</ref>();</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1DiracDelta_1ab2b01b60ad7a45c8b9c94a5b30f43316" kindref="member">DiracDelta</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;t_argument);</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1DiracDelta" kindref="compound">~DiracDelta</ref>()</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__record_data_alloc(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classcsl_1_1DiracDelta_1afde4d766b81d980647c55bda65ed519a" kindref="member">getType</ref>()));</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight></codeline>
<codeline lineno="1415" refid="classcsl_1_1DiracDelta_1afde4d766b81d980647c55bda65ed519a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312" kindref="member">csl::Type</ref><sp/><ref refid="classcsl_1_1DiracDelta_1afde4d766b81d980647c55bda65ed519a" kindref="member">getType</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="1416"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecsl_1ace591865c69b6315c533a1a325777312a29524358ad4c2579d7b08a21c990ce5e" kindref="member">csl::Type::DiracDelta</ref>;</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/>unique_Expr<sp/>copy_unique()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepCopy()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>refresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>deepRefresh()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1DiracDelta_1af86344bc4071f901591cc1b50b915257" kindref="member">getRealPart</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/><ref refid="classcsl_1_1DiracDelta_1aea8385f39d0ddccf6b45caa1942ec3cd" kindref="member">getImaginaryPart</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1DiracDelta_1acb4f35b6aef57ce0426f581f65ad7d68" kindref="member">getComplexModulus</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1DiracDelta_1a3dd7b9fb46af05be5d43baa83412ebac" kindref="member">getComplexArgument</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1DiracDelta_1ac5117381383dfaeb706b5d19b9971014" kindref="member">print</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream<sp/>&amp;out<sp/><sp/><sp/><sp/><sp/>=<sp/>std::cout,</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LibraryMode<sp/><sp/><sp/>libMode<sp/>=<sp/>LibraryMode::NoLib)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printCode(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0,<sp/>std::ostream<sp/>&amp;out<sp/>=<sp/>std::cout)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classcsl_1_1DiracDelta_1aa3b109eb3dc25e8084df99b1f77fada4" kindref="member">printLaTeX</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Expr&gt;<sp/><ref refid="classcsl_1_1DiracDelta_1aa5b3c23a06e1de1af366eac1470784d6" kindref="member">derive</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>expr)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1DiracDelta_1a7a0264b21f4abad295c61e89ead32b88" kindref="member">getParity</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>t_variable)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>applyDiracDelta(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;expr,</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;variable)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1DiracDelta_1aa66032c002b1c5d95bb4499093fa19cc" kindref="member">operator==</ref>(<ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref><sp/>other)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1455"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal">Expr<sp/>diracdelta_s(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Expr<sp/>&amp;argument);</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="comment">//<sp/>Inline<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1461" refid="classcsl_1_1Abs_1ab0569268981dbf81400dbee0852616b3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abs_1ab0569268981dbf81400dbee0852616b3" kindref="member">Abs::Abs</ref>()<sp/>:<sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref>()</highlight></codeline>
<codeline lineno="1462"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1464" refid="classcsl_1_1Abs_1a8884fd283b0e572e2386b8dde280aa6c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Abs_1ab0569268981dbf81400dbee0852616b3" kindref="member">Abs::Abs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;t_argument)<sp/>:<sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref>()</highlight></codeline>
<codeline lineno="1465"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1AbstractFunc_1a9ffcf8afbee0a103421280b82cfffe05" kindref="member">argument</ref><sp/>=<sp/>t_argument;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight></codeline>
<codeline lineno="1469" refid="classcsl_1_1Exp_1a35a8d2caa991252f7e5f342cdf1d0e44" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Exp_1a35a8d2caa991252f7e5f342cdf1d0e44" kindref="member">Exp::Exp</ref>()<sp/>:<sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref>()</highlight></codeline>
<codeline lineno="1470"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1472" refid="classcsl_1_1Exp_1ab27539fbf2392ef9682b695cd507022d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Exp_1a35a8d2caa991252f7e5f342cdf1d0e44" kindref="member">Exp::Exp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;t_argument)<sp/>:<sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref>()</highlight></codeline>
<codeline lineno="1473"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1AbstractFunc_1a9ffcf8afbee0a103421280b82cfffe05" kindref="member">argument</ref><sp/>=<sp/>t_argument;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight></codeline>
<codeline lineno="1477" refid="classcsl_1_1Log_1addd0fbc4294eec0b61a6d7b56a45c352" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Log_1addd0fbc4294eec0b61a6d7b56a45c352" kindref="member">Log::Log</ref>()<sp/>:<sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref>()</highlight></codeline>
<codeline lineno="1478"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1AbstractFunc_1a9ffcf8afbee0a103421280b82cfffe05" kindref="member">argument</ref><sp/>=<sp/>CSL_1;</highlight></codeline>
<codeline lineno="1480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1481" refid="classcsl_1_1Log_1a37b1fa435e73b66abb0e51b7da5e943a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Log_1addd0fbc4294eec0b61a6d7b56a45c352" kindref="member">Log::Log</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;t_argument)<sp/>:<sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref>()</highlight></codeline>
<codeline lineno="1482"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1AbstractFunc_1a9ffcf8afbee0a103421280b82cfffe05" kindref="member">argument</ref><sp/>=<sp/>t_argument;</highlight></codeline>
<codeline lineno="1484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1486" refid="classcsl_1_1Angle_1af641fb8201339c8f0322370210ada690" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Angle_1af641fb8201339c8f0322370210ada690" kindref="member">Angle::Angle</ref>()<sp/>:<sp/><ref refid="classcsl_1_1AbstractDuoFunc" kindref="compound">AbstractDuoFunc</ref>()</highlight></codeline>
<codeline lineno="1487"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1489" refid="classcsl_1_1Angle_1ab624f7b3f5961b0435ee187a20aea816" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Angle_1af641fb8201339c8f0322370210ada690" kindref="member">Angle::Angle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;leftOperand,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;rightOperand)</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcsl_1_1AbstractDuoFunc" kindref="compound">AbstractDuoFunc</ref>()</highlight></codeline>
<codeline lineno="1491"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1AbstractDuoFunc_1aa3958b228b6f0ba7b0761abf42a4608e" kindref="member">argument</ref>[0]<sp/>=<sp/>leftOperand;</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1AbstractDuoFunc_1aa3958b228b6f0ba7b0761abf42a4608e" kindref="member">argument</ref>[1]<sp/>=<sp/>rightOperand;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"></highlight></codeline>
<codeline lineno="1496" refid="classcsl_1_1Cos_1a9d1c44e33f37025e9541d5f9df6e2f24" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Cos_1a9d1c44e33f37025e9541d5f9df6e2f24" kindref="member">Cos::Cos</ref>()<sp/>:<sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref>()</highlight></codeline>
<codeline lineno="1497"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1499" refid="classcsl_1_1Cos_1a652a02ad7665e479d2ff28e97ceade26" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Cos_1a9d1c44e33f37025e9541d5f9df6e2f24" kindref="member">Cos::Cos</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;t_argument)<sp/>:<sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref>()</highlight></codeline>
<codeline lineno="1500"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1AbstractFunc_1a9ffcf8afbee0a103421280b82cfffe05" kindref="member">argument</ref><sp/>=<sp/>t_argument;</highlight></codeline>
<codeline lineno="1502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight></codeline>
<codeline lineno="1504" refid="classcsl_1_1Sin_1a55a7bf021a80e54b301e1b3fcc96d4b2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Sin_1a55a7bf021a80e54b301e1b3fcc96d4b2" kindref="member">Sin::Sin</ref>()<sp/>:<sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref>()</highlight></codeline>
<codeline lineno="1505"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1507" refid="classcsl_1_1Sin_1a1bfadc977fa061df1733a82f23954422" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Sin_1a55a7bf021a80e54b301e1b3fcc96d4b2" kindref="member">Sin::Sin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;t_argument)<sp/>:<sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref>()</highlight></codeline>
<codeline lineno="1508"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1AbstractFunc_1a9ffcf8afbee0a103421280b82cfffe05" kindref="member">argument</ref><sp/>=<sp/>t_argument;</highlight></codeline>
<codeline lineno="1510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight></codeline>
<codeline lineno="1512" refid="classcsl_1_1Tan_1a8e10967b6d14a4a568115176d6fe6c53" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Tan_1a8e10967b6d14a4a568115176d6fe6c53" kindref="member">Tan::Tan</ref>()<sp/>:<sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref>()</highlight></codeline>
<codeline lineno="1513"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1515" refid="classcsl_1_1Tan_1a55dbab6ad35ec5bf90706fbd7dcf293c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Tan_1a8e10967b6d14a4a568115176d6fe6c53" kindref="member">Tan::Tan</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;t_argument)<sp/>:<sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref>()</highlight></codeline>
<codeline lineno="1516"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1AbstractFunc_1a9ffcf8afbee0a103421280b82cfffe05" kindref="member">argument</ref><sp/>=<sp/>t_argument;</highlight></codeline>
<codeline lineno="1518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight></codeline>
<codeline lineno="1520" refid="classcsl_1_1Cosh_1a7bed0807549cc4ed37f89d17b75bd79b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Cosh_1a7bed0807549cc4ed37f89d17b75bd79b" kindref="member">Cosh::Cosh</ref>()<sp/>:<sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref>()</highlight></codeline>
<codeline lineno="1521"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1522"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1523" refid="classcsl_1_1Cosh_1a53d1a15add0bfcd03b16e12fba2917e7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Cosh_1a7bed0807549cc4ed37f89d17b75bd79b" kindref="member">Cosh::Cosh</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;t_argument)<sp/>:<sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref>()</highlight></codeline>
<codeline lineno="1524"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1AbstractFunc_1a9ffcf8afbee0a103421280b82cfffe05" kindref="member">argument</ref><sp/>=<sp/>t_argument;</highlight></codeline>
<codeline lineno="1526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight></codeline>
<codeline lineno="1528" refid="classcsl_1_1Sinh_1a6a1efb6bbc82e786c0462aa26bc638a2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Sinh_1a6a1efb6bbc82e786c0462aa26bc638a2" kindref="member">Sinh::Sinh</ref>()<sp/>:<sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref>()</highlight></codeline>
<codeline lineno="1529"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1531" refid="classcsl_1_1Sinh_1a3ca5746ee86d3559ac80309e42d036a2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Sinh_1a6a1efb6bbc82e786c0462aa26bc638a2" kindref="member">Sinh::Sinh</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;t_argument)<sp/>:<sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref>()</highlight></codeline>
<codeline lineno="1532"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1AbstractFunc_1a9ffcf8afbee0a103421280b82cfffe05" kindref="member">argument</ref><sp/>=<sp/>t_argument;</highlight></codeline>
<codeline lineno="1534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight></codeline>
<codeline lineno="1536" refid="classcsl_1_1Tanh_1a57afe5b06aa954f10909e90da261ed9a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Tanh_1a57afe5b06aa954f10909e90da261ed9a" kindref="member">Tanh::Tanh</ref>()<sp/>:<sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref>()</highlight></codeline>
<codeline lineno="1537"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1539" refid="classcsl_1_1Tanh_1a962ed085fab97805822cdb5c22194606" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Tanh_1a57afe5b06aa954f10909e90da261ed9a" kindref="member">Tanh::Tanh</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;t_argument)<sp/>:<sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref>()</highlight></codeline>
<codeline lineno="1540"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1AbstractFunc_1a9ffcf8afbee0a103421280b82cfffe05" kindref="member">argument</ref><sp/>=<sp/>t_argument;</highlight></codeline>
<codeline lineno="1542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"></highlight></codeline>
<codeline lineno="1544" refid="classcsl_1_1ACos_1a126cdbe28f59fe0fadc5dcd47e188830" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ACos_1a126cdbe28f59fe0fadc5dcd47e188830" kindref="member">ACos::ACos</ref>()<sp/>:<sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref>()</highlight></codeline>
<codeline lineno="1545"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1546"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1547" refid="classcsl_1_1ACos_1af5ca226ff33d462f0ef3fe68f8da3a5b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ACos_1a126cdbe28f59fe0fadc5dcd47e188830" kindref="member">ACos::ACos</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;t_argument)<sp/>:<sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref>()</highlight></codeline>
<codeline lineno="1548"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1AbstractFunc_1a9ffcf8afbee0a103421280b82cfffe05" kindref="member">argument</ref><sp/>=<sp/>t_argument;</highlight></codeline>
<codeline lineno="1550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight></codeline>
<codeline lineno="1552" refid="classcsl_1_1ASin_1af26aa02b8bf894310b9f466efa17fb0b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ASin_1af26aa02b8bf894310b9f466efa17fb0b" kindref="member">ASin::ASin</ref>()<sp/>:<sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref>()</highlight></codeline>
<codeline lineno="1553"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1555" refid="classcsl_1_1ASin_1a72b9eb7d9b1c7e2dd3e9a44a3e8902c6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ASin_1af26aa02b8bf894310b9f466efa17fb0b" kindref="member">ASin::ASin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;t_argument)<sp/>:<sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref>()</highlight></codeline>
<codeline lineno="1556"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1AbstractFunc_1a9ffcf8afbee0a103421280b82cfffe05" kindref="member">argument</ref><sp/>=<sp/>t_argument;</highlight></codeline>
<codeline lineno="1558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight></codeline>
<codeline lineno="1560" refid="classcsl_1_1ATan_1aef16996e7bd408bbc9fc9a1b21f0cccd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ATan_1aef16996e7bd408bbc9fc9a1b21f0cccd" kindref="member">ATan::ATan</ref>()<sp/>:<sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref>()</highlight></codeline>
<codeline lineno="1561"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1563" refid="classcsl_1_1ATan_1a78b0fe91adc4b515fe0f773ee2332a09" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ATan_1aef16996e7bd408bbc9fc9a1b21f0cccd" kindref="member">ATan::ATan</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;t_argument)<sp/>:<sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref>()</highlight></codeline>
<codeline lineno="1564"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1AbstractFunc_1a9ffcf8afbee0a103421280b82cfffe05" kindref="member">argument</ref><sp/>=<sp/>t_argument;</highlight></codeline>
<codeline lineno="1566"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight></codeline>
<codeline lineno="1568" refid="classcsl_1_1ACosh_1a7a18938379c18b661c66d3b8d2e0f8a5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ACosh_1a7a18938379c18b661c66d3b8d2e0f8a5" kindref="member">ACosh::ACosh</ref>()<sp/>:<sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref>()</highlight></codeline>
<codeline lineno="1569"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1571" refid="classcsl_1_1ACosh_1acd0c86668bce981f596a78cda546f0f4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ACosh_1a7a18938379c18b661c66d3b8d2e0f8a5" kindref="member">ACosh::ACosh</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;t_argument)<sp/>:<sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref>()</highlight></codeline>
<codeline lineno="1572"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1AbstractFunc_1a9ffcf8afbee0a103421280b82cfffe05" kindref="member">argument</ref><sp/>=<sp/>t_argument;</highlight></codeline>
<codeline lineno="1574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight></codeline>
<codeline lineno="1576" refid="classcsl_1_1ASinh_1a0eb47846850ba500d6360829c5ef9de5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ASinh_1a0eb47846850ba500d6360829c5ef9de5" kindref="member">ASinh::ASinh</ref>()<sp/>:<sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref>()</highlight></codeline>
<codeline lineno="1577"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1579" refid="classcsl_1_1ASinh_1a5a220630e2d3df0c2b81a5147bc930af" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ASinh_1a0eb47846850ba500d6360829c5ef9de5" kindref="member">ASinh::ASinh</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;t_argument)<sp/>:<sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref>()</highlight></codeline>
<codeline lineno="1580"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1AbstractFunc_1a9ffcf8afbee0a103421280b82cfffe05" kindref="member">argument</ref><sp/>=<sp/>t_argument;</highlight></codeline>
<codeline lineno="1582"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584" refid="classcsl_1_1ATanh_1ab5d6f7f7f4c2c19c5fec4a1ba9bab7e6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ATanh_1ab5d6f7f7f4c2c19c5fec4a1ba9bab7e6" kindref="member">ATanh::ATanh</ref>()<sp/>:<sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref>()</highlight></codeline>
<codeline lineno="1585"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1587" refid="classcsl_1_1ATanh_1a587f2dffcdc174788aff67dc58e77bc6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1ATanh_1ab5d6f7f7f4c2c19c5fec4a1ba9bab7e6" kindref="member">ATanh::ATanh</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;t_argument)<sp/>:<sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref>()</highlight></codeline>
<codeline lineno="1588"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1AbstractFunc_1a9ffcf8afbee0a103421280b82cfffe05" kindref="member">argument</ref><sp/>=<sp/>t_argument;</highlight></codeline>
<codeline lineno="1590"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"></highlight></codeline>
<codeline lineno="1592" refid="classcsl_1_1Factorial_1adce06238daf6aca42580f331463674f1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Factorial_1adce06238daf6aca42580f331463674f1" kindref="member">Factorial::Factorial</ref>()<sp/>:<sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref>()</highlight></codeline>
<codeline lineno="1593"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1594"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1595" refid="classcsl_1_1Factorial_1abc023ba6e9d2f9d45ae7873fa0e4eed0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Factorial_1adce06238daf6aca42580f331463674f1" kindref="member">Factorial::Factorial</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref><sp/>&amp;t_argument)<sp/>:<sp/><ref refid="classcsl_1_1AbstractFunc" kindref="compound">AbstractFunc</ref>()</highlight></codeline>
<codeline lineno="1596"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1AbstractFunc_1a9ffcf8afbee0a103421280b82cfffe05" kindref="member">argument</ref><sp/>=<sp/>t_argument;</highlight></codeline>
<codeline lineno="1598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1600"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>of<sp/>namespace<sp/>csl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/csl/mathFunctions.h"/>
  </compounddef>
</doxygen>
