<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classJSON_1_1List" kind="class" language="C++" prot="public">
    <compoundname>JSON::List</compoundname>
    <basecompoundref refid="classJSON_1_1Node" prot="public" virt="non-virtual">JSON::Node</basecompoundref>
    <basecompoundref refid="classJSON_1_1Node" prot="public" virt="non-virtual">JSON::Node</basecompoundref>
    <includes refid="gui_2jsonObject_8h" local="no">jsonObject.h</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classJSON_1_1List_1a5aeeb43a1a7476eed6dcc3842f052f19" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>JSON::List::List</definition>
        <argsstring>(std::string const &amp;specifier)</argsstring>
        <name>List</name>
        <qualifiedname>JSON::List::List</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>specifier</declname>
        </param>
        <briefdescription>
<para>Construtor with one paramter that initializes <bold>specifier</bold>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_specifier</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the <ref refid="classJSON_1_1List" kindref="compound">List</ref>&apos;s specifier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonObject.h" line="248" column="14" bodyfile="src/grafed/gui/jsonObject.h" bodystart="248" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1List_1af42543b1963dd466da5ca7d9504e509c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void JSON::List::addChild</definition>
        <argsstring>(Child &amp;child) override</argsstring>
        <name>addChild</name>
        <qualifiedname>JSON::List::addChild</qualifiedname>
        <reimplements refid="classJSON_1_1Node_1ab5f3280b41c42efd31dc83dad66e38a0">addChild</reimplements>
        <param>
          <type><ref refid="namespaceJSON_1aa2d900be83ed3ec15cee06b3acc05b96" kindref="member">Child</ref> &amp;</type>
          <declname>child</declname>
        </param>
        <briefdescription>
<para>Adds a child in the <ref refid="classJSON_1_1List" kindref="compound">List</ref>. Checks if the specifier is the same as the one of the <ref refid="classJSON_1_1List" kindref="compound">List</ref> (each element must have the same). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>New child added in <bold>children</bold>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonObject.h" line="262" column="10" bodyfile="src/grafed/gui/jsonObject.h" bodystart="262" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1List_1ab456d70372dd83132c07a56d4ce43e9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void JSON::List::addChild</definition>
        <argsstring>(std::unique_ptr&lt; T &gt; &amp;child)</argsstring>
        <name>addChild</name>
        <qualifiedname>JSON::List::addChild</qualifiedname>
        <param>
          <type>std::unique_ptr&lt; T &gt; &amp;</type>
          <declname>child</declname>
        </param>
        <briefdescription>
<para>Adds a child in the <ref refid="classJSON_1_1List" kindref="compound">List</ref>. Checks if the specifier is the same as the one of the <ref refid="classJSON_1_1List" kindref="compound">List</ref> (each element must have the same). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>New child added in <bold>children</bold>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonObject.h" line="278" column="10" bodyfile="src/grafed/gui/jsonObject.h" bodystart="278" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1List_1a4c40c417fc8b97fb73ccd47e8f67ec53" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void JSON::List::addChild</definition>
        <argsstring>(Child &amp;&amp;child) override</argsstring>
        <name>addChild</name>
        <qualifiedname>JSON::List::addChild</qualifiedname>
        <reimplements refid="classJSON_1_1Node_1ae7acb00e530695d1f3aadf54f23cc35f">addChild</reimplements>
        <param>
          <type><ref refid="namespaceJSON_1aa2d900be83ed3ec15cee06b3acc05b96" kindref="member">Child</ref> &amp;&amp;</type>
          <declname>child</declname>
        </param>
        <briefdescription>
<para>Adds a child in the <ref refid="classJSON_1_1List" kindref="compound">List</ref>. Checks if the specifier is the same as the one of the <ref refid="classJSON_1_1List" kindref="compound">List</ref> (each element must have the same). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>New child added in <bold>children</bold>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonObject.h" line="293" column="10" bodyfile="src/grafed/gui/jsonObject.h" bodystart="293" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1List_1ad2c8a27ae0c406560985c3fcfb3f345b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void JSON::List::addChild</definition>
        <argsstring>(std::unique_ptr&lt; T &gt; &amp;&amp;child)</argsstring>
        <name>addChild</name>
        <qualifiedname>JSON::List::addChild</qualifiedname>
        <param>
          <type>std::unique_ptr&lt; T &gt; &amp;&amp;</type>
          <declname>child</declname>
        </param>
        <briefdescription>
<para>Adds a child in the <ref refid="classJSON_1_1List" kindref="compound">List</ref>. Checks if the specifier is the same as the one of the <ref refid="classJSON_1_1List" kindref="compound">List</ref> (each element must have the same). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>New child added in <bold>children</bold>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonObject.h" line="309" column="10" bodyfile="src/grafed/gui/jsonObject.h" bodystart="309" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1List_1a5aeeb43a1a7476eed6dcc3842f052f19" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>JSON::List::List</definition>
        <argsstring>(std::string const &amp;specifier)</argsstring>
        <name>List</name>
        <qualifiedname>JSON::List::List</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>specifier</declname>
        </param>
        <briefdescription>
<para>Construtor with one paramter that initializes <bold>specifier</bold>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_specifier</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the <ref refid="classJSON_1_1List" kindref="compound">List</ref>&apos;s specifier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/jsonparser/jsonObject.h" line="248" column="14" bodyfile="src/grafed/jsonparser/jsonObject.h" bodystart="248" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1List_1af42543b1963dd466da5ca7d9504e509c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void JSON::List::addChild</definition>
        <argsstring>(Child &amp;child) override</argsstring>
        <name>addChild</name>
        <qualifiedname>JSON::List::addChild</qualifiedname>
        <reimplements refid="classJSON_1_1Node_1ab5f3280b41c42efd31dc83dad66e38a0">addChild</reimplements>
        <param>
          <type><ref refid="namespaceJSON_1aa2d900be83ed3ec15cee06b3acc05b96" kindref="member">Child</ref> &amp;</type>
          <declname>child</declname>
        </param>
        <briefdescription>
<para>Adds a child in the <ref refid="classJSON_1_1List" kindref="compound">List</ref>. Checks if the specifier is the same as the one of the <ref refid="classJSON_1_1List" kindref="compound">List</ref> (each element must have the same). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>New child added in <bold>children</bold>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/jsonparser/jsonObject.h" line="262" column="10" bodyfile="src/grafed/jsonparser/jsonObject.h" bodystart="262" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1List_1ab456d70372dd83132c07a56d4ce43e9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void JSON::List::addChild</definition>
        <argsstring>(std::unique_ptr&lt; T &gt; &amp;child)</argsstring>
        <name>addChild</name>
        <qualifiedname>JSON::List::addChild</qualifiedname>
        <param>
          <type>std::unique_ptr&lt; T &gt; &amp;</type>
          <declname>child</declname>
        </param>
        <briefdescription>
<para>Adds a child in the <ref refid="classJSON_1_1List" kindref="compound">List</ref>. Checks if the specifier is the same as the one of the <ref refid="classJSON_1_1List" kindref="compound">List</ref> (each element must have the same). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>New child added in <bold>children</bold>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/jsonparser/jsonObject.h" line="278" column="10" bodyfile="src/grafed/jsonparser/jsonObject.h" bodystart="278" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1List_1a4c40c417fc8b97fb73ccd47e8f67ec53" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void JSON::List::addChild</definition>
        <argsstring>(Child &amp;&amp;child) override</argsstring>
        <name>addChild</name>
        <qualifiedname>JSON::List::addChild</qualifiedname>
        <reimplements refid="classJSON_1_1Node_1ae7acb00e530695d1f3aadf54f23cc35f">addChild</reimplements>
        <param>
          <type><ref refid="namespaceJSON_1aa2d900be83ed3ec15cee06b3acc05b96" kindref="member">Child</ref> &amp;&amp;</type>
          <declname>child</declname>
        </param>
        <briefdescription>
<para>Adds a child in the <ref refid="classJSON_1_1List" kindref="compound">List</ref>. Checks if the specifier is the same as the one of the <ref refid="classJSON_1_1List" kindref="compound">List</ref> (each element must have the same). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>New child added in <bold>children</bold>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/jsonparser/jsonObject.h" line="293" column="10" bodyfile="src/grafed/jsonparser/jsonObject.h" bodystart="293" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1List_1ad2c8a27ae0c406560985c3fcfb3f345b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void JSON::List::addChild</definition>
        <argsstring>(std::unique_ptr&lt; T &gt; &amp;&amp;child)</argsstring>
        <name>addChild</name>
        <qualifiedname>JSON::List::addChild</qualifiedname>
        <param>
          <type>std::unique_ptr&lt; T &gt; &amp;&amp;</type>
          <declname>child</declname>
        </param>
        <briefdescription>
<para>Adds a child in the <ref refid="classJSON_1_1List" kindref="compound">List</ref>. Checks if the specifier is the same as the one of the <ref refid="classJSON_1_1List" kindref="compound">List</ref> (each element must have the same). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>New child added in <bold>children</bold>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/jsonparser/jsonObject.h" line="309" column="10" bodyfile="src/grafed/jsonparser/jsonObject.h" bodystart="309" bodyend="317"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classJSON_1_1List_1affa831e14ac095a073165fcf016bba1a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classJSON_1_1List" kindref="compound">List</ref> &gt;</type>
        <definition>static std::unique_ptr&lt; List &gt; JSON::List::make</definition>
        <argsstring>(std::string const &amp;specifier)</argsstring>
        <name>make</name>
        <qualifiedname>JSON::List::make</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>specifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonObject.h" line="252" column="28" bodyfile="src/grafed/gui/jsonObject.h" bodystart="252" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1List_1affa831e14ac095a073165fcf016bba1a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classJSON_1_1List" kindref="compound">List</ref> &gt;</type>
        <definition>static std::unique_ptr&lt; List &gt; JSON::List::make</definition>
        <argsstring>(std::string const &amp;specifier)</argsstring>
        <name>make</name>
        <qualifiedname>JSON::List::make</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>specifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/jsonparser/jsonObject.h" line="252" column="28" bodyfile="src/grafed/jsonparser/jsonObject.h" bodystart="252" bodyend="255"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A <ref refid="classJSON_1_1List" kindref="compound">List</ref> is a particular <ref refid="classJSON_1_1Node" kindref="compound">Node</ref> of which all children are of the same type and have the same specifier. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>JSON::List</label>
        <link refid="classJSON_1_1List"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>JSON::Node</label>
        <link refid="classJSON_1_1Node"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>JSON::Object</label>
        <link refid="classJSON_1_1Object"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>JSON::List</label>
        <link refid="classJSON_1_1List"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>JSON::Node</label>
        <link refid="classJSON_1_1Node"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>JSON::Object</label>
        <link refid="classJSON_1_1Object"/>
      </node>
    </collaborationgraph>
    <location file="src/grafed/gui/jsonObject.h" line="241" column="1" bodyfile="src/grafed/jsonparser/jsonObject.h" bodystart="241" bodyend="318"/>
    <listofallmembers>
      <member refid="classJSON_1_1List_1af42543b1963dd466da5ca7d9504e509c" prot="public" virt="virtual"><scope>JSON::List</scope><name>addChild</name></member>
      <member refid="classJSON_1_1List_1ab456d70372dd83132c07a56d4ce43e9a" prot="public" virt="non-virtual"><scope>JSON::List</scope><name>addChild</name></member>
      <member refid="classJSON_1_1List_1a4c40c417fc8b97fb73ccd47e8f67ec53" prot="public" virt="virtual"><scope>JSON::List</scope><name>addChild</name></member>
      <member refid="classJSON_1_1List_1ad2c8a27ae0c406560985c3fcfb3f345b" prot="public" virt="non-virtual"><scope>JSON::List</scope><name>addChild</name></member>
      <member refid="classJSON_1_1List_1af42543b1963dd466da5ca7d9504e509c" prot="public" virt="virtual"><scope>JSON::List</scope><name>addChild</name></member>
      <member refid="classJSON_1_1List_1ab456d70372dd83132c07a56d4ce43e9a" prot="public" virt="non-virtual"><scope>JSON::List</scope><name>addChild</name></member>
      <member refid="classJSON_1_1List_1a4c40c417fc8b97fb73ccd47e8f67ec53" prot="public" virt="virtual"><scope>JSON::List</scope><name>addChild</name></member>
      <member refid="classJSON_1_1List_1ad2c8a27ae0c406560985c3fcfb3f345b" prot="public" virt="non-virtual"><scope>JSON::List</scope><name>addChild</name></member>
      <member refid="classJSON_1_1Node_1a596addb8ef6333d85b8ff88b9f4e6893" prot="public" virt="non-virtual"><scope>JSON::List</scope><name>begin</name></member>
      <member refid="classJSON_1_1Node_1a58c174a26bd29c5cc7633f78496fd248" prot="public" virt="non-virtual"><scope>JSON::List</scope><name>begin</name></member>
      <member refid="classJSON_1_1Node_1a596addb8ef6333d85b8ff88b9f4e6893" prot="public" virt="non-virtual"><scope>JSON::List</scope><name>begin</name></member>
      <member refid="classJSON_1_1Node_1a58c174a26bd29c5cc7633f78496fd248" prot="public" virt="non-virtual"><scope>JSON::List</scope><name>begin</name></member>
      <member refid="classJSON_1_1Node_1ac00c1de7f5728cc044f5a3e306b9840f" prot="public" virt="non-virtual"><scope>JSON::List</scope><name>empty</name></member>
      <member refid="classJSON_1_1Node_1ac00c1de7f5728cc044f5a3e306b9840f" prot="public" virt="non-virtual"><scope>JSON::List</scope><name>empty</name></member>
      <member refid="classJSON_1_1Node_1a3b7f4b52df21d02d578b1acc7903e53f" prot="public" virt="non-virtual"><scope>JSON::List</scope><name>end</name></member>
      <member refid="classJSON_1_1Node_1a0d4404fecc048cec926bd11bc60fc1bf" prot="public" virt="non-virtual"><scope>JSON::List</scope><name>end</name></member>
      <member refid="classJSON_1_1Node_1a3b7f4b52df21d02d578b1acc7903e53f" prot="public" virt="non-virtual"><scope>JSON::List</scope><name>end</name></member>
      <member refid="classJSON_1_1Node_1a0d4404fecc048cec926bd11bc60fc1bf" prot="public" virt="non-virtual"><scope>JSON::List</scope><name>end</name></member>
      <member refid="classJSON_1_1Node_1a9bc88a97885c3276fd4d082f9a66676a" prot="public" virt="non-virtual"><scope>JSON::List</scope><name>getChild</name></member>
      <member refid="classJSON_1_1Node_1a9bc88a97885c3276fd4d082f9a66676a" prot="public" virt="non-virtual"><scope>JSON::List</scope><name>getChild</name></member>
      <member refid="classJSON_1_1Object_1ae3c04b4483cfe3b2879e9b5a1e79a5e3" prot="public" virt="non-virtual"><scope>JSON::List</scope><name>getSpecifier</name></member>
      <member refid="classJSON_1_1Object_1ae3c04b4483cfe3b2879e9b5a1e79a5e3" prot="public" virt="non-virtual"><scope>JSON::List</scope><name>getSpecifier</name></member>
      <member refid="classJSON_1_1Node_1a1882689bb0b9cfd9f87f29bc895bf31f" prot="public" virt="virtual"><scope>JSON::List</scope><name>isNode</name></member>
      <member refid="classJSON_1_1Node_1a1882689bb0b9cfd9f87f29bc895bf31f" prot="public" virt="virtual"><scope>JSON::List</scope><name>isNode</name></member>
      <member refid="classJSON_1_1List_1a5aeeb43a1a7476eed6dcc3842f052f19" prot="public" virt="non-virtual"><scope>JSON::List</scope><name>List</name></member>
      <member refid="classJSON_1_1List_1a5aeeb43a1a7476eed6dcc3842f052f19" prot="public" virt="non-virtual"><scope>JSON::List</scope><name>List</name></member>
      <member refid="classJSON_1_1List_1affa831e14ac095a073165fcf016bba1a" prot="public" virt="non-virtual"><scope>JSON::List</scope><name>make</name></member>
      <member refid="classJSON_1_1List_1affa831e14ac095a073165fcf016bba1a" prot="public" virt="non-virtual"><scope>JSON::List</scope><name>make</name></member>
      <member refid="classJSON_1_1Node_1a73b518e554ea506441eb396a2efe3503" prot="public" virt="non-virtual"><scope>JSON::List</scope><name>Node</name></member>
      <member refid="classJSON_1_1Node_1a73b518e554ea506441eb396a2efe3503" prot="public" virt="non-virtual"><scope>JSON::List</scope><name>Node</name></member>
      <member refid="classJSON_1_1Object_1a534b719c1190ea30c0a9ab9d12f8f619" prot="public" virt="non-virtual"><scope>JSON::List</scope><name>Object</name></member>
      <member refid="classJSON_1_1Object_1a534b719c1190ea30c0a9ab9d12f8f619" prot="public" virt="non-virtual"><scope>JSON::List</scope><name>Object</name></member>
      <member refid="classJSON_1_1Node_1abb9045a0a66dc16cae25eb97abe28e4d" prot="public" virt="non-virtual"><scope>JSON::List</scope><name>size</name></member>
      <member refid="classJSON_1_1Node_1abb9045a0a66dc16cae25eb97abe28e4d" prot="public" virt="non-virtual"><scope>JSON::List</scope><name>size</name></member>
      <member refid="classJSON_1_1Object_1a496b17f83c592bbb92720e5288abd172" prot="protected" virt="non-virtual"><scope>JSON::List</scope><name>specifier</name></member>
      <member refid="classJSON_1_1Object_1a6611414d3cba6dc3028378f88847bb9a" prot="public" virt="virtual"><scope>JSON::List</scope><name>~Object</name></member>
      <member refid="classJSON_1_1Object_1a6611414d3cba6dc3028378f88847bb9a" prot="public" virt="virtual"><scope>JSON::List</scope><name>~Object</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
