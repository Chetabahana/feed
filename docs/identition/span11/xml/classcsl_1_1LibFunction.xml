<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classcsl_1_1LibFunction" kind="class" language="C++" prot="public">
    <compoundname>csl::LibFunction</compoundname>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classcsl_1_1LibFunction_1aa1a2f4ff237407b553c959ed98478119" prot="public" static="yes" mutable="no">
        <type>size_t</type>
        <definition>size_t csl::LibFunction::nParamThresholdStructure</definition>
        <argsstring></argsstring>
        <name>nParamThresholdStructure</name>
        <qualifiedname>csl::LibFunction::nParamThresholdStructure</qualifiedname>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="50" column="30" bodyfile="src/csl/libraryfunction.h" bodystart="50" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcsl_1_1LibFunction_1a7520d229ccda818f22a5104a0e1c9b72" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string csl::LibFunction::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <qualifiedname>csl::LibFunction::name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="135" column="21" bodyfile="src/csl/libraryfunction.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcsl_1_1LibFunction_1a9dae73ea5038b160af40d1344a76aa0d" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string csl::LibFunction::varType</definition>
        <argsstring></argsstring>
        <name>varType</name>
        <qualifiedname>csl::LibFunction::varType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="137" column="21" bodyfile="src/csl/libraryfunction.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcsl_1_1LibFunction_1a15fbc570f83fc764a4236fbd7e3b66e9" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool csl::LibFunction::cppFunc</definition>
        <argsstring></argsstring>
        <name>cppFunc</name>
        <qualifiedname>csl::LibFunction::cppFunc</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="139" column="14" bodyfile="src/csl/libraryfunction.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcsl_1_1LibFunction_1a46ea7d33af9c99ff6cb69ec8d901d144" prot="private" static="no" mutable="no">
        <type><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref></type>
        <definition>Expr csl::LibFunction::expression</definition>
        <argsstring></argsstring>
        <name>expression</name>
        <qualifiedname>csl::LibFunction::expression</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="141" column="21" bodyfile="src/csl/libraryfunction.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcsl_1_1LibFunction_1ab8e12da0f9879a59df96dd7640912020" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool csl::LibFunction::tensorial</definition>
        <argsstring></argsstring>
        <name>tensorial</name>
        <qualifiedname>csl::LibFunction::tensorial</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="143" column="21" bodyfile="src/csl/libraryfunction.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcsl_1_1LibFunction_1afa7aa0bc1e67f9b4f0cc85bc1e026ded" prot="private" static="no" mutable="yes">
        <type><ref refid="classcsl_1_1LibEvalSession" kindref="compound">LibEvalSession</ref></type>
        <definition>LibEvalSession csl::LibFunction::session</definition>
        <argsstring></argsstring>
        <name>session</name>
        <qualifiedname>csl::LibFunction::session</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="146" column="35" bodyfile="src/csl/libraryfunction.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcsl_1_1LibFunction_1a280843c601ef03fa6a79554df0c0557d" prot="private" static="no" mutable="yes">
        <type><ref refid="structcsl_1_1LibEvalSession_1_1Perf" kindref="compound">LibEvalSession::Perf</ref></type>
        <definition>LibEvalSession::Perf csl::LibFunction::perf</definition>
        <argsstring></argsstring>
        <name>perf</name>
        <qualifiedname>csl::LibFunction::perf</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="149" column="35" bodyfile="src/csl/libraryfunction.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcsl_1_1LibFunction_1a21ccd49e77d2961f9086c3f5c7ab1413" prot="private" static="no" mutable="no">
        <type><ref refid="classstd_1_1shared__ptr" kindref="compound">std::shared_ptr</ref>&lt; <ref refid="classcsl_1_1LibraryGroup" kindref="compound">LibraryGroup</ref> &gt;</type>
        <definition>std::shared_ptr&lt;LibraryGroup&gt; csl::LibFunction::group</definition>
        <argsstring></argsstring>
        <name>group</name>
        <qualifiedname>csl::LibFunction::group</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="151" column="25" bodyfile="src/csl/libraryfunction.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcsl_1_1LibFunction_1a4f11e87b7974df0a601f04b81486972c" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classcsl_1_1Tensor" kindref="compound">csl::Tensor</ref> &gt;</type>
        <definition>std::vector&lt;csl::Tensor&gt; csl::LibFunction::tensors</definition>
        <argsstring></argsstring>
        <name>tensors</name>
        <qualifiedname>csl::LibFunction::tensors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="153" column="22" bodyfile="src/csl/libraryfunction.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcsl_1_1LibFunction_1ab86591c13745d358359bc7eb491a6229" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; csl::LibFunction::intermediateSteps</definition>
        <argsstring></argsstring>
        <name>intermediateSteps</name>
        <qualifiedname>csl::LibFunction::intermediateSteps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="155" column="22" bodyfile="src/csl/libraryfunction.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcsl_1_1LibFunction_1a74eb3f746f945f18a972b9b79e12cbed" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; csl::LibFunction::initInstructions</definition>
        <argsstring></argsstring>
        <name>initInstructions</name>
        <qualifiedname>csl::LibFunction::initInstructions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="157" column="22" bodyfile="src/csl/libraryfunction.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcsl_1_1LibFunction_1a20ad18ce68a42f9dd4bbf2b7a4f8887e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structcsl_1_1LibParameter" kindref="compound">LibParameter</ref> &gt;</type>
        <definition>std::vector&lt;LibParameter&gt; csl::LibFunction::parameters</definition>
        <argsstring></argsstring>
        <name>parameters</name>
        <qualifiedname>csl::LibFunction::parameters</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="159" column="21" bodyfile="src/csl/libraryfunction.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcsl_1_1LibFunction_1ac3107a25d0a4ac13debfff2a4663a910" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int csl::LibFunction::tensorParameter</definition>
        <argsstring></argsstring>
        <name>tensorParameter</name>
        <qualifiedname>csl::LibFunction::tensorParameter</qualifiedname>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="161" column="13" bodyfile="src/csl/libraryfunction.h" bodystart="161" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classcsl_1_1LibFunction_1a85b4a5c80455ca0777e8674b934b2c01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>csl::LibFunction::LibFunction</definition>
        <argsstring>(std::string_view t_name, Expr const &amp;t_expression, std::shared_ptr&lt; LibraryGroup &gt; const &amp;t_group, bool forceCppFunc=false)</argsstring>
        <name>LibFunction</name>
        <qualifiedname>csl::LibFunction::LibFunction</qualifiedname>
        <param>
          <type>std::string_view</type>
          <declname>t_name</declname>
        </param>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref> const &amp;</type>
          <declname>t_expression</declname>
        </param>
        <param>
          <type><ref refid="classstd_1_1shared__ptr" kindref="compound">std::shared_ptr</ref>&lt; <ref refid="classcsl_1_1LibraryGroup" kindref="compound">LibraryGroup</ref> &gt; const &amp;</type>
          <declname>t_group</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forceCppFunc</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="54" column="9" bodyfile="src/csl/libraryfunction.cpp" bodystart="32" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1a4be439c5b1ee01343a877df8c30b2801" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>csl::LibFunction::~LibFunction</definition>
        <argsstring>()</argsstring>
        <name>~LibFunction</name>
        <qualifiedname>csl::LibFunction::~LibFunction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="59" column="9" bodyfile="src/csl/libraryfunction.h" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1a904b450b8b5f83bd8cac0023aca48841" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool csl::LibFunction::isTrivial</definition>
        <argsstring>() const</argsstring>
        <name>isTrivial</name>
        <qualifiedname>csl::LibFunction::isTrivial</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="61" column="14" bodyfile="src/csl/libraryfunction.cpp" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1a30590a4bf1901db3aed25a6d6c87be88" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool csl::LibFunction::isCppFunc</definition>
        <argsstring>() const</argsstring>
        <name>isCppFunc</name>
        <qualifiedname>csl::LibFunction::isCppFunc</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="63" column="14" bodyfile="src/csl/libraryfunction.h" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1a094625f2b82af07bbe5eb08264460deb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string const &amp;</type>
        <definition>std::string const  &amp; csl::LibFunction::getName</definition>
        <argsstring>() const</argsstring>
        <name>getName</name>
        <qualifiedname>csl::LibFunction::getName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="67" column="27" bodyfile="src/csl/libraryfunction.cpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1aef4a6059e6a3810ea1a1b902493c42b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string csl::LibFunction::getTensorName</definition>
        <argsstring>(csl::Parent const &amp;tensor) const</argsstring>
        <name>getTensorName</name>
        <qualifiedname>csl::LibFunction::getTensorName</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Parent" kindref="compound">csl::Parent</ref> const &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="68" column="21" bodyfile="src/csl/libraryfunction.cpp" bodystart="51" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1af3121e37a43c648fddfa3fdb3c4df6c2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcsl_1_1LibraryGroup" kindref="compound">LibraryGroup</ref> const &amp;</type>
        <definition>LibraryGroup const  &amp; csl::LibFunction::getGroup</definition>
        <argsstring>() const</argsstring>
        <name>getGroup</name>
        <qualifiedname>csl::LibFunction::getGroup</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="69" column="28" bodyfile="src/csl/libraryfunction.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1a9c0fda4e991907559ce4cda30cb8abf8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcsl_1_1LibraryGroup" kindref="compound">LibraryGroup</ref> &amp;</type>
        <definition>LibraryGroup &amp; csl::LibFunction::getGroup</definition>
        <argsstring>()</argsstring>
        <name>getGroup</name>
        <qualifiedname>csl::LibFunction::getGroup</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="70" column="28" bodyfile="src/csl/libraryfunction.h" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1a8b55da7983e8bd8cb5a59a33f8ccc526" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref> &amp;</type>
        <definition>Expr &amp; csl::LibFunction::getExpression</definition>
        <argsstring>()</argsstring>
        <name>getExpression</name>
        <qualifiedname>csl::LibFunction::getExpression</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="71" column="14" bodyfile="src/csl/libraryfunction.cpp" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1ab6be85b5af9182ef9d6983f444a10d71" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref> const &amp;</type>
        <definition>Expr const  &amp; csl::LibFunction::getExpression</definition>
        <argsstring>() const</argsstring>
        <name>getExpression</name>
        <qualifiedname>csl::LibFunction::getExpression</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="72" column="20" bodyfile="src/csl/libraryfunction.cpp" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1aebf8cb16933d6f5066d00ee5f758bff3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool csl::LibFunction::isTensorial</definition>
        <argsstring>() const</argsstring>
        <name>isTensorial</name>
        <qualifiedname>csl::LibFunction::isTensorial</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="73" column="14" bodyfile="src/csl/libraryfunction.cpp" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1a8d844133e369d632cddef47f467caf15" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int csl::LibFunction::getPosTensorParameter</definition>
        <argsstring>() const</argsstring>
        <name>getPosTensorParameter</name>
        <qualifiedname>csl::LibFunction::getPosTensorParameter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="74" column="13" bodyfile="src/csl/libraryfunction.h" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1a9c73fb2ea3d003c182ba1a649a3f81e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void csl::LibFunction::setPosTensorParameter</definition>
        <argsstring>(int t_pos)</argsstring>
        <name>setPosTensorParameter</name>
        <qualifiedname>csl::LibFunction::setPosTensorParameter</qualifiedname>
        <param>
          <type>int</type>
          <declname>t_pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="75" column="14" bodyfile="src/csl/libraryfunction.h" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1a176a9cd2d930621349a4e0153a69fa83" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classcsl_1_1Tensor" kindref="compound">csl::Tensor</ref> &gt; const &amp;</type>
        <definition>std::vector&lt; csl::Tensor &gt; const  &amp; csl::LibFunction::getTensors</definition>
        <argsstring>() const</argsstring>
        <name>getTensors</name>
        <qualifiedname>csl::LibFunction::getTensors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="76" column="27" bodyfile="src/csl/libraryfunction.cpp" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1a1c122dffa425a3d5a659da71e9e1a185" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classcsl_1_1Tensor" kindref="compound">csl::Tensor</ref> &gt; &amp;</type>
        <definition>std::vector&lt; csl::Tensor &gt; &amp; csl::LibFunction::getTensors</definition>
        <argsstring>()</argsstring>
        <name>getTensors</name>
        <qualifiedname>csl::LibFunction::getTensors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="77" column="21" bodyfile="src/csl/libraryfunction.cpp" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1a7f174f907219943517adc2f84df0b683" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt; const &amp;</type>
        <definition>std::vector&lt; std::string &gt; const  &amp; csl::LibFunction::getIntermediateSteps</definition>
        <argsstring>() const</argsstring>
        <name>getIntermediateSteps</name>
        <qualifiedname>csl::LibFunction::getIntermediateSteps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="78" column="27" bodyfile="src/csl/libraryfunction.cpp" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1a4656d7282ed3e12ba9453942c66c8870" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt; &amp;</type>
        <definition>std::vector&lt; std::string &gt; &amp; csl::LibFunction::getIntermediateSteps</definition>
        <argsstring>()</argsstring>
        <name>getIntermediateSteps</name>
        <qualifiedname>csl::LibFunction::getIntermediateSteps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="79" column="21" bodyfile="src/csl/libraryfunction.cpp" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1af90f5869c8aceef0fab8c0b0342d9f31" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structcsl_1_1LibParameter" kindref="compound">LibParameter</ref> &gt; const &amp;</type>
        <definition>std::vector&lt; LibParameter &gt; const  &amp; csl::LibFunction::getParameters</definition>
        <argsstring>() const</argsstring>
        <name>getParameters</name>
        <qualifiedname>csl::LibFunction::getParameters</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="80" column="27" bodyfile="src/csl/libraryfunction.cpp" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1af122e68f45a528356f483c506e3a456f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void csl::LibFunction::setName</definition>
        <argsstring>(std::string_view t_name)</argsstring>
        <name>setName</name>
        <qualifiedname>csl::LibFunction::setName</qualifiedname>
        <param>
          <type>std::string_view</type>
          <declname>t_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="82" column="14" bodyfile="src/csl/libraryfunction.cpp" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1a6879d31af8fa3b470c636c8340bbc367" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void csl::LibFunction::setExpression</definition>
        <argsstring>(Expr const &amp;t_expression)</argsstring>
        <name>setExpression</name>
        <qualifiedname>csl::LibFunction::setExpression</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref> const &amp;</type>
          <declname>t_expression</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="83" column="14" bodyfile="src/csl/libraryfunction.cpp" bodystart="106" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1a1fa19fe72e45010170cff8dce0d003aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void csl::LibFunction::setTensorial</definition>
        <argsstring>(bool t_tensorial)</argsstring>
        <name>setTensorial</name>
        <qualifiedname>csl::LibFunction::setTensorial</qualifiedname>
        <param>
          <type>bool</type>
          <declname>t_tensorial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="84" column="14" bodyfile="src/csl/libraryfunction.cpp" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1ae60b5501da9ff6b7a04692a97fe47131" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void csl::LibFunction::addTensor</definition>
        <argsstring>(Expr const &amp;tensor)</argsstring>
        <name>addTensor</name>
        <qualifiedname>csl::LibFunction::addTensor</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref> const &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="85" column="14" bodyfile="src/csl/libraryfunction.cpp" bodystart="112" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1a3f2bb0036ca023c6988da372f8704054" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void csl::LibFunction::setTensors</definition>
        <argsstring>(std::vector&lt; csl::Tensor &gt; const &amp;t_tensors)</argsstring>
        <name>setTensors</name>
        <qualifiedname>csl::LibFunction::setTensors</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="classcsl_1_1Tensor" kindref="compound">csl::Tensor</ref> &gt; const &amp;</type>
          <declname>t_tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="86" column="14" bodyfile="src/csl/libraryfunction.cpp" bodystart="132" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1a70667fe3cdad8b662547c2de11abbc07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref></type>
        <definition>Expr csl::LibFunction::addIntermediate</definition>
        <argsstring>(Expr const &amp;intermediate)</argsstring>
        <name>addIntermediate</name>
        <qualifiedname>csl::LibFunction::addIntermediate</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref> const &amp;</type>
          <declname>intermediate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="87" column="14" bodyfile="src/csl/libraryfunction.cpp" bodystart="137" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1ae0ffec7b84dc9566e404a94ddb398863" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void csl::LibFunction::setIntermediateSteps</definition>
        <argsstring>(std::vector&lt; std::string &gt; const &amp;t_interm)</argsstring>
        <name>setIntermediateSteps</name>
        <qualifiedname>csl::LibFunction::setIntermediateSteps</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; const &amp;</type>
          <declname>t_interm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="88" column="14" bodyfile="src/csl/libraryfunction.cpp" bodystart="151" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1a1d61bba0ee9f4a8807c9ac37b2e8316a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void csl::LibFunction::addParameter</definition>
        <argsstring>(std::string const &amp;param)</argsstring>
        <name>addParameter</name>
        <qualifiedname>csl::LibFunction::addParameter</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="89" column="14" bodyfile="src/csl/libraryfunction.cpp" bodystart="157" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1a7a333c4080dd68f1a8f2741ef3da1018" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void csl::LibFunction::setParameters</definition>
        <argsstring>(std::vector&lt; LibParameter &gt; const &amp;t_parameters)</argsstring>
        <name>setParameters</name>
        <qualifiedname>csl::LibFunction::setParameters</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="structcsl_1_1LibParameter" kindref="compound">LibParameter</ref> &gt; const &amp;</type>
          <declname>t_parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="90" column="14" bodyfile="src/csl/libraryfunction.cpp" bodystart="165" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1a32e953cd25a771491b1365a9911abe63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void csl::LibFunction::removeParameter</definition>
        <argsstring>(std::string_view param)</argsstring>
        <name>removeParameter</name>
        <qualifiedname>csl::LibFunction::removeParameter</qualifiedname>
        <param>
          <type>std::string_view</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="91" column="14" bodyfile="src/csl/libraryfunction.cpp" bodystart="170" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1abc059d39aef0edb74b3552b3fab712a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void csl::LibFunction::addInitInstruction</definition>
        <argsstring>(std::string const &amp;t_inst)</argsstring>
        <name>addInitInstruction</name>
        <qualifiedname>csl::LibFunction::addInitInstruction</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>t_inst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="92" column="14" bodyfile="src/csl/libraryfunction.cpp" bodystart="181" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1a136bd78a6ff3dc0ad9981b53c76e5e3c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void csl::LibFunction::printExternC</definition>
        <argsstring>(std::ostream &amp;out, bool header, std::string const &amp;initInstruction=&quot;&quot;) const</argsstring>
        <name>printExternC</name>
        <qualifiedname>csl::LibFunction::printExternC</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>header</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>initInstruction</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="105" column="14" bodyfile="src/csl/libraryfunction.cpp" bodystart="186" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1a9092215657da4ee43e59f530f1da5dcf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void csl::LibFunction::print</definition>
        <argsstring>(std::ostream &amp;out, bool header, std::string const &amp;initInstruction=&quot;&quot;) const</argsstring>
        <name>print</name>
        <qualifiedname>csl::LibFunction::print</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>header</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>initInstruction</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="109" column="14" bodyfile="src/csl/libraryfunction.cpp" bodystart="216" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1a9802d906d085e5cb666af2c4e46a4c15" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void csl::LibFunction::printCppWrapper</definition>
        <argsstring>(std::ostream &amp;out) const</argsstring>
        <name>printCppWrapper</name>
        <qualifiedname>csl::LibFunction::printCppWrapper</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="113" column="14" bodyfile="src/csl/libraryfunction.cpp" bodystart="246" bodyend="284"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classcsl_1_1LibFunction_1a9b0db5b86426fd4dacce248b382ebeb3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void csl::LibFunction::cutParameters</definition>
        <argsstring>(std::vector&lt; LibParameter &gt; &amp;parameters, int &amp;tensorParameter)</argsstring>
        <name>cutParameters</name>
        <qualifiedname>csl::LibFunction::cutParameters</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="structcsl_1_1LibParameter" kindref="compound">LibParameter</ref> &gt; &amp;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>tensorParameter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="95" column="14" bodyfile="src/csl/libraryfunction.cpp" bodystart="348" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1a4704999630bbf1aa50623412110f1783" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void csl::LibFunction::sortParameters</definition>
        <argsstring>(std::vector&lt; LibParameter &gt; &amp;parameters, int tensorParameter)</argsstring>
        <name>sortParameters</name>
        <qualifiedname>csl::LibFunction::sortParameters</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="structcsl_1_1LibParameter" kindref="compound">LibParameter</ref> &gt; &amp;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tensorParameter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="100" column="14" bodyfile="src/csl/libraryfunction.cpp" bodystart="363" bodyend="377"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classcsl_1_1LibFunction_1a4905c36eb03f1594b2a63761d90e40d1" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void csl::LibFunction::printName</definition>
        <argsstring>(std::ostream &amp;out) const</argsstring>
        <name>printName</name>
        <qualifiedname>csl::LibFunction::printName</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="119" column="14" bodyfile="src/csl/libraryfunction.cpp" bodystart="286" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1a905677fecf79cbd4bc92da3f010867c3" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void csl::LibFunction::printCName</definition>
        <argsstring>(std::ostream &amp;out) const</argsstring>
        <name>printCName</name>
        <qualifiedname>csl::LibFunction::printCName</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="120" column="14" bodyfile="src/csl/libraryfunction.cpp" bodystart="293" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1a92dec10467efd827494c0ee8eb902054" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void csl::LibFunction::printBody</definition>
        <argsstring>(std::ostream &amp;out, std::string const &amp;initInstruction, bool isCSource) const</argsstring>
        <name>printBody</name>
        <qualifiedname>csl::LibFunction::printBody</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>initInstruction</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isCSource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="121" column="14" bodyfile="src/csl/libraryfunction.cpp" bodystart="300" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1a642488a6dfa505a5e8232b321a2ead7e" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void csl::LibFunction::printExpression</definition>
        <argsstring>(std::ostream &amp;out, Expr const &amp;expression, int indent, std::string const &amp;beginning=&quot;&quot;) const</argsstring>
        <name>printExpression</name>
        <qualifiedname>csl::LibFunction::printExpression</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref> const &amp;</type>
          <declname>expression</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indent</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>beginning</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="126" column="14" bodyfile="src/csl/libraryfunction.cpp" bodystart="312" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LibFunction_1a46af8e0799cc1b272254bae1c9c34072" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void csl::LibFunction::parse</definition>
        <argsstring>()</argsstring>
        <name>parse</name>
        <qualifiedname>csl::LibFunction::parse</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/libraryfunction.h" line="131" column="14" bodyfile="src/csl/libraryfunction.cpp" bodystart="379" bodyend="414"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/csl/libraryfunction.h" line="46" column="5" bodyfile="src/csl/libraryfunction.h" bodystart="46" bodyend="162"/>
    <listofallmembers>
      <member refid="classcsl_1_1LibFunction_1abc059d39aef0edb74b3552b3fab712a8" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>addInitInstruction</name></member>
      <member refid="classcsl_1_1LibFunction_1a70667fe3cdad8b662547c2de11abbc07" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>addIntermediate</name></member>
      <member refid="classcsl_1_1LibFunction_1a1d61bba0ee9f4a8807c9ac37b2e8316a" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>addParameter</name></member>
      <member refid="classcsl_1_1LibFunction_1ae60b5501da9ff6b7a04692a97fe47131" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>addTensor</name></member>
      <member refid="classcsl_1_1LibFunction_1a15fbc570f83fc764a4236fbd7e3b66e9" prot="private" virt="non-virtual"><scope>csl::LibFunction</scope><name>cppFunc</name></member>
      <member refid="classcsl_1_1LibFunction_1a9b0db5b86426fd4dacce248b382ebeb3" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>cutParameters</name></member>
      <member refid="classcsl_1_1LibFunction_1a46ea7d33af9c99ff6cb69ec8d901d144" prot="private" virt="non-virtual"><scope>csl::LibFunction</scope><name>expression</name></member>
      <member refid="classcsl_1_1LibFunction_1a8b55da7983e8bd8cb5a59a33f8ccc526" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>getExpression</name></member>
      <member refid="classcsl_1_1LibFunction_1ab6be85b5af9182ef9d6983f444a10d71" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>getExpression</name></member>
      <member refid="classcsl_1_1LibFunction_1af3121e37a43c648fddfa3fdb3c4df6c2" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>getGroup</name></member>
      <member refid="classcsl_1_1LibFunction_1a9c0fda4e991907559ce4cda30cb8abf8" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>getGroup</name></member>
      <member refid="classcsl_1_1LibFunction_1a7f174f907219943517adc2f84df0b683" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>getIntermediateSteps</name></member>
      <member refid="classcsl_1_1LibFunction_1a4656d7282ed3e12ba9453942c66c8870" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>getIntermediateSteps</name></member>
      <member refid="classcsl_1_1LibFunction_1a094625f2b82af07bbe5eb08264460deb" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>getName</name></member>
      <member refid="classcsl_1_1LibFunction_1af90f5869c8aceef0fab8c0b0342d9f31" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>getParameters</name></member>
      <member refid="classcsl_1_1LibFunction_1a8d844133e369d632cddef47f467caf15" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>getPosTensorParameter</name></member>
      <member refid="classcsl_1_1LibFunction_1aef4a6059e6a3810ea1a1b902493c42b5" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>getTensorName</name></member>
      <member refid="classcsl_1_1LibFunction_1a176a9cd2d930621349a4e0153a69fa83" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>getTensors</name></member>
      <member refid="classcsl_1_1LibFunction_1a1c122dffa425a3d5a659da71e9e1a185" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>getTensors</name></member>
      <member refid="classcsl_1_1LibFunction_1a21ccd49e77d2961f9086c3f5c7ab1413" prot="private" virt="non-virtual"><scope>csl::LibFunction</scope><name>group</name></member>
      <member refid="classcsl_1_1LibFunction_1a74eb3f746f945f18a972b9b79e12cbed" prot="private" virt="non-virtual"><scope>csl::LibFunction</scope><name>initInstructions</name></member>
      <member refid="classcsl_1_1LibFunction_1ab86591c13745d358359bc7eb491a6229" prot="private" virt="non-virtual"><scope>csl::LibFunction</scope><name>intermediateSteps</name></member>
      <member refid="classcsl_1_1LibFunction_1a30590a4bf1901db3aed25a6d6c87be88" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>isCppFunc</name></member>
      <member refid="classcsl_1_1LibFunction_1aebf8cb16933d6f5066d00ee5f758bff3" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>isTensorial</name></member>
      <member refid="classcsl_1_1LibFunction_1a904b450b8b5f83bd8cac0023aca48841" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>isTrivial</name></member>
      <member refid="classcsl_1_1LibFunction_1a85b4a5c80455ca0777e8674b934b2c01" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>LibFunction</name></member>
      <member refid="classcsl_1_1LibFunction_1a7520d229ccda818f22a5104a0e1c9b72" prot="private" virt="non-virtual"><scope>csl::LibFunction</scope><name>name</name></member>
      <member refid="classcsl_1_1LibFunction_1aa1a2f4ff237407b553c959ed98478119" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>nParamThresholdStructure</name></member>
      <member refid="classcsl_1_1LibFunction_1a20ad18ce68a42f9dd4bbf2b7a4f8887e" prot="private" virt="non-virtual"><scope>csl::LibFunction</scope><name>parameters</name></member>
      <member refid="classcsl_1_1LibFunction_1a46af8e0799cc1b272254bae1c9c34072" prot="private" virt="non-virtual"><scope>csl::LibFunction</scope><name>parse</name></member>
      <member refid="classcsl_1_1LibFunction_1a280843c601ef03fa6a79554df0c0557d" prot="private" virt="non-virtual"><scope>csl::LibFunction</scope><name>perf</name></member>
      <member refid="classcsl_1_1LibFunction_1a9092215657da4ee43e59f530f1da5dcf" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>print</name></member>
      <member refid="classcsl_1_1LibFunction_1a92dec10467efd827494c0ee8eb902054" prot="private" virt="non-virtual"><scope>csl::LibFunction</scope><name>printBody</name></member>
      <member refid="classcsl_1_1LibFunction_1a905677fecf79cbd4bc92da3f010867c3" prot="private" virt="non-virtual"><scope>csl::LibFunction</scope><name>printCName</name></member>
      <member refid="classcsl_1_1LibFunction_1a9802d906d085e5cb666af2c4e46a4c15" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>printCppWrapper</name></member>
      <member refid="classcsl_1_1LibFunction_1a642488a6dfa505a5e8232b321a2ead7e" prot="private" virt="non-virtual"><scope>csl::LibFunction</scope><name>printExpression</name></member>
      <member refid="classcsl_1_1LibFunction_1a136bd78a6ff3dc0ad9981b53c76e5e3c" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>printExternC</name></member>
      <member refid="classcsl_1_1LibFunction_1a4905c36eb03f1594b2a63761d90e40d1" prot="private" virt="non-virtual"><scope>csl::LibFunction</scope><name>printName</name></member>
      <member refid="classcsl_1_1LibFunction_1a32e953cd25a771491b1365a9911abe63" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>removeParameter</name></member>
      <member refid="classcsl_1_1LibFunction_1afa7aa0bc1e67f9b4f0cc85bc1e026ded" prot="private" virt="non-virtual"><scope>csl::LibFunction</scope><name>session</name></member>
      <member refid="classcsl_1_1LibFunction_1a6879d31af8fa3b470c636c8340bbc367" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>setExpression</name></member>
      <member refid="classcsl_1_1LibFunction_1ae0ffec7b84dc9566e404a94ddb398863" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>setIntermediateSteps</name></member>
      <member refid="classcsl_1_1LibFunction_1af122e68f45a528356f483c506e3a456f" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>setName</name></member>
      <member refid="classcsl_1_1LibFunction_1a7a333c4080dd68f1a8f2741ef3da1018" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>setParameters</name></member>
      <member refid="classcsl_1_1LibFunction_1a9c73fb2ea3d003c182ba1a649a3f81e3" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>setPosTensorParameter</name></member>
      <member refid="classcsl_1_1LibFunction_1a1fa19fe72e45010170cff8dce0d003aa" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>setTensorial</name></member>
      <member refid="classcsl_1_1LibFunction_1a3f2bb0036ca023c6988da372f8704054" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>setTensors</name></member>
      <member refid="classcsl_1_1LibFunction_1a4704999630bbf1aa50623412110f1783" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>sortParameters</name></member>
      <member refid="classcsl_1_1LibFunction_1ab8e12da0f9879a59df96dd7640912020" prot="private" virt="non-virtual"><scope>csl::LibFunction</scope><name>tensorial</name></member>
      <member refid="classcsl_1_1LibFunction_1ac3107a25d0a4ac13debfff2a4663a910" prot="private" virt="non-virtual"><scope>csl::LibFunction</scope><name>tensorParameter</name></member>
      <member refid="classcsl_1_1LibFunction_1a4f11e87b7974df0a601f04b81486972c" prot="private" virt="non-virtual"><scope>csl::LibFunction</scope><name>tensors</name></member>
      <member refid="classcsl_1_1LibFunction_1a9dae73ea5038b160af40d1344a76aa0d" prot="private" virt="non-virtual"><scope>csl::LibFunction</scope><name>varType</name></member>
      <member refid="classcsl_1_1LibFunction_1a4be439c5b1ee01343a877df8c30b2801" prot="public" virt="non-virtual"><scope>csl::LibFunction</scope><name>~LibFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
