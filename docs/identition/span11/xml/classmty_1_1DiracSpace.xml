<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classmty_1_1DiracSpace" kind="class" language="C++" prot="public">
    <compoundname>mty::DiracSpace</compoundname>
    <basecompoundref refid="classcsl_1_1Space" prot="public" virt="non-virtual">csl::Space</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmty_1_1DiracSpace_1a942ffb0fe2b1de40780168ffc9c6363e" prot="private" static="no" mutable="no">
        <type><ref refid="classcsl_1_1Space" kindref="compound">csl::Space</ref> const  *</type>
        <definition>csl::Space const* mty::DiracSpace::spaceTime</definition>
        <argsstring></argsstring>
        <name>spaceTime</name>
        <qualifiedname>mty::DiracSpace::spaceTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="43" column="22" bodyfile="src/marty/core/diracology.h" bodystart="43" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classmty_1_1DiracSpace_1a434524e53da16a149a9a5d694d0d64a4" prot="public" static="no" mutable="yes">
        <type><ref refid="classcsl_1_1Tensor" kindref="compound">csl::Tensor</ref></type>
        <definition>csl::Tensor mty::DiracSpace::gamma</definition>
        <argsstring></argsstring>
        <name>gamma</name>
        <qualifiedname>mty::DiracSpace::gamma</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="46" column="25" bodyfile="src/marty/core/diracology.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmty_1_1DiracSpace_1a88decb775428be8ff43a5644303f8fb8" prot="public" static="no" mutable="yes">
        <type><ref refid="classcsl_1_1Tensor" kindref="compound">csl::Tensor</ref></type>
        <definition>csl::Tensor mty::DiracSpace::sigma</definition>
        <argsstring></argsstring>
        <name>sigma</name>
        <qualifiedname>mty::DiracSpace::sigma</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="47" column="25" bodyfile="src/marty/core/diracology.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmty_1_1DiracSpace_1ab4c79dde1d3d91a80c3ed2261b5eea00" prot="public" static="no" mutable="yes">
        <type><ref refid="classcsl_1_1Tensor" kindref="compound">csl::Tensor</ref></type>
        <definition>csl::Tensor mty::DiracSpace::gamma_chir</definition>
        <argsstring></argsstring>
        <name>gamma_chir</name>
        <qualifiedname>mty::DiracSpace::gamma_chir</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="48" column="25" bodyfile="src/marty/core/diracology.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmty_1_1DiracSpace_1a07c3d0194686df0a331acac0e16ae120" prot="public" static="no" mutable="yes">
        <type><ref refid="classcsl_1_1Tensor" kindref="compound">csl::Tensor</ref></type>
        <definition>csl::Tensor mty::DiracSpace::P_L</definition>
        <argsstring></argsstring>
        <name>P_L</name>
        <qualifiedname>mty::DiracSpace::P_L</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="49" column="25" bodyfile="src/marty/core/diracology.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmty_1_1DiracSpace_1abeb95b20d1bbe367ec0637c46c7a1fea" prot="public" static="no" mutable="yes">
        <type><ref refid="classcsl_1_1Tensor" kindref="compound">csl::Tensor</ref></type>
        <definition>csl::Tensor mty::DiracSpace::P_R</definition>
        <argsstring></argsstring>
        <name>P_R</name>
        <qualifiedname>mty::DiracSpace::P_R</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="50" column="25" bodyfile="src/marty/core/diracology.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmty_1_1DiracSpace_1a449af88634319086eff6669e94a48a7d" prot="public" static="no" mutable="yes">
        <type><ref refid="classcsl_1_1Tensor" kindref="compound">csl::Tensor</ref></type>
        <definition>csl::Tensor mty::DiracSpace::C_matrix</definition>
        <argsstring></argsstring>
        <name>C_matrix</name>
        <qualifiedname>mty::DiracSpace::C_matrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="51" column="25" bodyfile="src/marty/core/diracology.h" bodystart="51" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classmty_1_1DiracSpace_1a238c73b096eea8ad37d445fba66c67ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mty::DiracSpace::DiracSpace</definition>
        <argsstring>(csl::Space const *t_spaceTime)</argsstring>
        <name>DiracSpace</name>
        <qualifiedname>mty::DiracSpace::DiracSpace</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Space" kindref="compound">csl::Space</ref> const *</type>
          <declname>t_spaceTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="54" column="5" bodyfile="src/marty/core/diracology.cpp" bodystart="75" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1addfc0ef68286a6de69219630a868de38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mty::DiracSpace::~DiracSpace</definition>
        <argsstring>()</argsstring>
        <name>~DiracSpace</name>
        <qualifiedname>mty::DiracSpace::~DiracSpace</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="56" column="5" bodyfile="src/marty/core/diracology.cpp" bodystart="98" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1aa47b27e501fb391c08927e7ad277c252" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcsl_1_1Space" kindref="compound">csl::Space</ref> const *</type>
        <definition>csl::Space const  * mty::DiracSpace::getSpaceTime</definition>
        <argsstring>() const</argsstring>
        <name>getSpaceTime</name>
        <qualifiedname>mty::DiracSpace::getSpaceTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="58" column="22" bodyfile="src/marty/core/diracology.cpp" bodystart="102" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1a81d0c8186b140e8ab41f7fee91041072" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref></type>
        <definition>csl::Index mty::DiracSpace::index</definition>
        <argsstring>() const</argsstring>
        <name>index</name>
        <qualifiedname>mty::DiracSpace::index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="60" column="16" bodyfile="src/marty/core/diracology.cpp" bodystart="476" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1ac7b2cf6f6d5f70e3fa68bd4c850c8638" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref></type>
        <definition>csl::Index mty::DiracSpace::st_index</definition>
        <argsstring>() const</argsstring>
        <name>st_index</name>
        <qualifiedname>mty::DiracSpace::st_index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="62" column="16" bodyfile="src/marty/core/diracology.cpp" bodystart="481" bodyend="484"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1a62e7c915275d30d31d5fd9a75cf27629" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mty::DiracSpace::initProperties</definition>
        <argsstring>()</argsstring>
        <name>initProperties</name>
        <qualifiedname>mty::DiracSpace::initProperties</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="66" column="10" bodyfile="src/marty/core/diracology.cpp" bodystart="171" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1af81ef8022db0150c9691568e9d8f38ba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacemty_1a1ad7d9911e71ba89b54481af0a475112" kindref="member">Chirality</ref></type>
        <definition>Chirality mty::DiracSpace::getChirality</definition>
        <argsstring>(size_t pos, size_t cut, csl::Index proj) const</argsstring>
        <name>getChirality</name>
        <qualifiedname>mty::DiracSpace::getChirality</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>cut</declname>
        </param>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref></type>
          <declname>proj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="68" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1a7ef26d81c5a0e72e80813587c872208c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>csl::vector_expr</type>
        <definition>csl::vector_expr mty::DiracSpace::simplifyChain</definition>
        <argsstring>(csl::vector_expr const &amp;tensors) const</argsstring>
        <name>simplifyChain</name>
        <qualifiedname>mty::DiracSpace::simplifyChain</qualifiedname>
        <param>
          <type>csl::vector_expr const &amp;</type>
          <declname>tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="70" column="22" bodyfile="src/marty/core/diracology.cpp" bodystart="307" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1a525a8e26c223c710c14be7a7a296c6f8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mty::DiracSpace::isDelta</definition>
        <argsstring>(csl::Expr const &amp;tensor) const</argsstring>
        <name>isDelta</name>
        <qualifiedname>mty::DiracSpace::isDelta</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> const &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="74" column="10" bodyfile="src/marty/core/diracology.cpp" bodystart="339" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1a65c8a309f2cd528518e763c9fb61f49b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mty::DiracSpace::isGammaTensor</definition>
        <argsstring>(csl::Expr const &amp;tensor) const</argsstring>
        <name>isGammaTensor</name>
        <qualifiedname>mty::DiracSpace::isGammaTensor</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> const &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="76" column="10" bodyfile="src/marty/core/diracology.cpp" bodystart="329" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1ac53ca9ff253eca2fe146f25b4ce9938a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mty::DiracSpace::isGammaMu</definition>
        <argsstring>(csl::Expr const &amp;tensor) const</argsstring>
        <name>isGammaMu</name>
        <qualifiedname>mty::DiracSpace::isGammaMu</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> const &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="78" column="10" bodyfile="src/marty/core/diracology.cpp" bodystart="344" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1ad08108455fa7a19ecda2a8840fcba0a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mty::DiracSpace::isSigma</definition>
        <argsstring>(csl::Expr const &amp;tensor) const</argsstring>
        <name>isSigma</name>
        <qualifiedname>mty::DiracSpace::isSigma</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> const &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="80" column="10" bodyfile="src/marty/core/diracology.cpp" bodystart="349" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1a6dab5c17643e8b2691254beb32459115" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mty::DiracSpace::isGammaChir</definition>
        <argsstring>(csl::Expr const &amp;tensor) const</argsstring>
        <name>isGammaChir</name>
        <qualifiedname>mty::DiracSpace::isGammaChir</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> const &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="82" column="10" bodyfile="src/marty/core/diracology.cpp" bodystart="354" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1acab3b8aab4103cbc22a5ac191557830c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mty::DiracSpace::isP_L</definition>
        <argsstring>(csl::Expr const &amp;tensor) const</argsstring>
        <name>isP_L</name>
        <qualifiedname>mty::DiracSpace::isP_L</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> const &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="84" column="10" bodyfile="src/marty/core/diracology.cpp" bodystart="359" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1ac5e5b04ebbd9b34a378bedf197934eb4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mty::DiracSpace::isP_R</definition>
        <argsstring>(csl::Expr const &amp;tensor) const</argsstring>
        <name>isP_R</name>
        <qualifiedname>mty::DiracSpace::isP_R</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> const &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="86" column="10" bodyfile="src/marty/core/diracology.cpp" bodystart="364" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1a704d28876888f83fa84fe837d3a6c5c2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mty::DiracSpace::isProjector</definition>
        <argsstring>(csl::Expr const &amp;tensor) const</argsstring>
        <name>isProjector</name>
        <qualifiedname>mty::DiracSpace::isProjector</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> const &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="88" column="10" bodyfile="src/marty/core/diracology.cpp" bodystart="369" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1a5e46daccf1470b4c0ded81652d581be7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mty::DiracSpace::isCMatrix</definition>
        <argsstring>(csl::Expr const &amp;tensor) const</argsstring>
        <name>isCMatrix</name>
        <qualifiedname>mty::DiracSpace::isCMatrix</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> const &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="90" column="10" bodyfile="src/marty/core/diracology.cpp" bodystart="374" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1a5a4b95e408909760006c8fa9f6ab854d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mty::DiracSpace::isSymmetric</definition>
        <argsstring>(csl::Expr const &amp;tensor) const</argsstring>
        <name>isSymmetric</name>
        <qualifiedname>mty::DiracSpace::isSymmetric</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> const &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="92" column="10" bodyfile="src/marty/core/diracology.cpp" bodystart="379" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1a4651a807032f884b861bdeb8a4b34df1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mty::DiracSpace::isDelta</definition>
        <argsstring>(csl::Expr_info tensor) const</argsstring>
        <name>isDelta</name>
        <qualifiedname>mty::DiracSpace::isDelta</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Abstract" kindref="compound">csl::Expr_info</ref></type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="94" column="10" bodyfile="src/marty/core/diracology.cpp" bodystart="395" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1a74db80fab5a4f1134f541c7c060358c6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mty::DiracSpace::isGammaTensor</definition>
        <argsstring>(csl::Expr_info tensor) const</argsstring>
        <name>isGammaTensor</name>
        <qualifiedname>mty::DiracSpace::isGammaTensor</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Abstract" kindref="compound">csl::Expr_info</ref></type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="96" column="10" bodyfile="src/marty/core/diracology.cpp" bodystart="385" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1a0b68e299dd80c75b5f6f59801c82ab02" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mty::DiracSpace::isGammaMu</definition>
        <argsstring>(csl::Expr_info tensor) const</argsstring>
        <name>isGammaMu</name>
        <qualifiedname>mty::DiracSpace::isGammaMu</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Abstract" kindref="compound">csl::Expr_info</ref></type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="98" column="10" bodyfile="src/marty/core/diracology.cpp" bodystart="400" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1ac24baf70c4af1d44d319c40c0dec9e5c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mty::DiracSpace::isSigma</definition>
        <argsstring>(csl::Expr_info tensor) const</argsstring>
        <name>isSigma</name>
        <qualifiedname>mty::DiracSpace::isSigma</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Abstract" kindref="compound">csl::Expr_info</ref></type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="100" column="10" bodyfile="src/marty/core/diracology.cpp" bodystart="405" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1a4e2ebd1235d6837bcac89bd597f5468d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mty::DiracSpace::isGammaChir</definition>
        <argsstring>(csl::Expr_info tensor) const</argsstring>
        <name>isGammaChir</name>
        <qualifiedname>mty::DiracSpace::isGammaChir</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Abstract" kindref="compound">csl::Expr_info</ref></type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="102" column="10" bodyfile="src/marty/core/diracology.cpp" bodystart="410" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1ac5b9795872347fea4a3bc405eceae00f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mty::DiracSpace::isP_L</definition>
        <argsstring>(csl::Expr_info tensor) const</argsstring>
        <name>isP_L</name>
        <qualifiedname>mty::DiracSpace::isP_L</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Abstract" kindref="compound">csl::Expr_info</ref></type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="104" column="10" bodyfile="src/marty/core/diracology.cpp" bodystart="415" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1a5f0dad65f384765f1a2857eb4a193c94" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mty::DiracSpace::isP_R</definition>
        <argsstring>(csl::Expr_info tensor) const</argsstring>
        <name>isP_R</name>
        <qualifiedname>mty::DiracSpace::isP_R</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Abstract" kindref="compound">csl::Expr_info</ref></type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="106" column="10" bodyfile="src/marty/core/diracology.cpp" bodystart="420" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1aafe1fb0191a723a997c1cc5597865ecd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mty::DiracSpace::isProjector</definition>
        <argsstring>(csl::Expr_info tensor) const</argsstring>
        <name>isProjector</name>
        <qualifiedname>mty::DiracSpace::isProjector</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Abstract" kindref="compound">csl::Expr_info</ref></type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="108" column="10" bodyfile="src/marty/core/diracology.cpp" bodystart="425" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1a16bff8da97b36c0173449bfa034e4706" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mty::DiracSpace::isCMatrix</definition>
        <argsstring>(csl::Expr_info tensor) const</argsstring>
        <name>isCMatrix</name>
        <qualifiedname>mty::DiracSpace::isCMatrix</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Abstract" kindref="compound">csl::Expr_info</ref></type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="110" column="10" bodyfile="src/marty/core/diracology.cpp" bodystart="430" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1a5a0b6cf6b2203332b294a9fe6fc8a7ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mty::DiracSpace::isSymmetric</definition>
        <argsstring>(csl::Expr_info tensor) const</argsstring>
        <name>isSymmetric</name>
        <qualifiedname>mty::DiracSpace::isSymmetric</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Abstract" kindref="compound">csl::Expr_info</ref></type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="112" column="10" bodyfile="src/marty/core/diracology.cpp" bodystart="435" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1acde96913b7234ed286599f9311ec695f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mty::DiracSpace::isDelta</definition>
        <argsstring>(csl::Index const &amp;tensor) const</argsstring>
        <name>isDelta</name>
        <qualifiedname>mty::DiracSpace::isDelta</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="114" column="10" bodyfile="src/marty/core/diracology.cpp" bodystart="441" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1aaeb8227474ebed53d8af5249c873dccc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mty::DiracSpace::isGammaMu</definition>
        <argsstring>(csl::Index const &amp;tensor) const</argsstring>
        <name>isGammaMu</name>
        <qualifiedname>mty::DiracSpace::isGammaMu</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="116" column="10" bodyfile="src/marty/core/diracology.cpp" bodystart="446" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1aaa2710a0eda51ffb186d6bef22979a75" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mty::DiracSpace::isGammaChir</definition>
        <argsstring>(csl::Index const &amp;tensor) const</argsstring>
        <name>isGammaChir</name>
        <qualifiedname>mty::DiracSpace::isGammaChir</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="118" column="10" bodyfile="src/marty/core/diracology.cpp" bodystart="451" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1adada1b7e3ef70c02011f779b5a8de222" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mty::DiracSpace::isP_L</definition>
        <argsstring>(csl::Index const &amp;tensor) const</argsstring>
        <name>isP_L</name>
        <qualifiedname>mty::DiracSpace::isP_L</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="120" column="10" bodyfile="src/marty/core/diracology.cpp" bodystart="456" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1aa44c0f71efe1d2bf8dfe9febf6faa36b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mty::DiracSpace::isP_R</definition>
        <argsstring>(csl::Index const &amp;tensor) const</argsstring>
        <name>isP_R</name>
        <qualifiedname>mty::DiracSpace::isP_R</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="122" column="10" bodyfile="src/marty/core/diracology.cpp" bodystart="461" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1a93f2e121eb62b147502f695110a3ac7e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mty::DiracSpace::isProjector</definition>
        <argsstring>(csl::Index const &amp;tensor) const</argsstring>
        <name>isProjector</name>
        <qualifiedname>mty::DiracSpace::isProjector</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="124" column="10" bodyfile="src/marty/core/diracology.cpp" bodystart="466" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1a9217c492bde2d4af69680f72237933d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mty::DiracSpace::isCMatrix</definition>
        <argsstring>(csl::Index const &amp;tensor) const</argsstring>
        <name>isCMatrix</name>
        <qualifiedname>mty::DiracSpace::isCMatrix</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="126" column="10" bodyfile="src/marty/core/diracology.cpp" bodystart="471" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1aeefa4023cd8c2c68c0b6f04f1db5fd9f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref></type>
        <definition>csl::Index mty::DiracSpace::getSpaceTimeIndex</definition>
        <argsstring>(csl::Expr const &amp;tensor) const</argsstring>
        <name>getSpaceTimeIndex</name>
        <qualifiedname>mty::DiracSpace::getSpaceTimeIndex</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> const &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="128" column="16" bodyfile="src/marty/core/diracology.cpp" bodystart="486" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1a7a9c4a78979c471b4475b7b89b239199" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref></type>
        <definition>csl::Index mty::DiracSpace::getFirstIndex</definition>
        <argsstring>(csl::Expr const &amp;tensor) const</argsstring>
        <name>getFirstIndex</name>
        <qualifiedname>mty::DiracSpace::getFirstIndex</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> const &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="130" column="16" bodyfile="src/marty/core/diracology.cpp" bodystart="506" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1DiracSpace_1ac35b6238d8e36c14f4f6439d18c4a77d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref></type>
        <definition>csl::Index mty::DiracSpace::getSecondIndex</definition>
        <argsstring>(csl::Expr const &amp;tensor) const</argsstring>
        <name>getSecondIndex</name>
        <qualifiedname>mty::DiracSpace::getSecondIndex</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> const &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="132" column="16" bodyfile="src/marty/core/diracology.cpp" bodystart="515" bodyend="522"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classmty_1_1DiracSpace_1ab76263f4e77c4a99996b68c9865c42ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setDiracTensor4</definition>
        <argsstring>(const DiracSpace *self)</argsstring>
        <name>setDiracTensor4</name>
        <qualifiedname>mty::DiracSpace::setDiracTensor4</qualifiedname>
        <param>
          <type>const <ref refid="classmty_1_1DiracSpace" kindref="compound">DiracSpace</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="64" column="17" bodyfile="src/marty/core/diracology.cpp" bodystart="107" bodyend="169"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmty_1_1DiracSpace_1a88748913b079fbfb66c5f06898406f1d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t mty::DiracSpace::getSpinorDimension</definition>
        <argsstring>(size_t spaceTimeDim)</argsstring>
        <name>getSpinorDimension</name>
        <qualifiedname>mty::DiracSpace::getSpinorDimension</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>spaceTimeDim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/diracology.h" line="72" column="19" bodyfile="src/marty/core/diracology.cpp" bodystart="324" bodyend="327"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>csl::Space</label>
        <link refid="classcsl_1_1Space"/>
      </node>
      <node id="1">
        <label>mty::DiracSpace</label>
        <link refid="classmty_1_1DiracSpace"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>csl::Expr</label>
        <link refid="classcsl_1_1Expr"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>csl::Space</label>
        <link refid="classcsl_1_1Space"/>
        <childnode refid="3" relation="usage">
          <edgelabel>symbolicDim</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>delta</edgelabel>
          <edgelabel>epsilon</edgelabel>
          <edgelabel>inverseMetric</edgelabel>
          <edgelabel>metric</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>csl::Tensor</label>
        <link refid="classcsl_1_1Tensor"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>mty::DiracSpace</label>
        <link refid="classmty_1_1DiracSpace"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>C_matrix</edgelabel>
          <edgelabel>P_L</edgelabel>
          <edgelabel>P_R</edgelabel>
          <edgelabel>gamma</edgelabel>
          <edgelabel>gamma_chir</edgelabel>
          <edgelabel>sigma</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>std::shared_ptr&lt; TensorParent &gt;</label>
        <link refid="classstd_1_1shared__ptr"/>
      </node>
      <node id="4">
        <label>std::shared_ptr&lt; csl::Abstract &gt;</label>
        <link refid="classstd_1_1shared__ptr"/>
      </node>
    </collaborationgraph>
    <location file="src/marty/core/diracology.h" line="40" column="1" bodyfile="src/marty/core/diracology.h" bodystart="40" bodyend="133"/>
    <listofallmembers>
      <member refid="classcsl_1_1Space_1aeb8ce5559b38c8666a940f4197169a86" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>addIndexNames</name></member>
      <member refid="classcsl_1_1Space_1adadeb704e8cf9399c71db5a4827891de" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>addIndexNames</name></member>
      <member refid="classcsl_1_1Space_1a38fd8931aadb3be1c6f09f38c87ceb09" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>addVectorNames</name></member>
      <member refid="classcsl_1_1Space_1a5a803d0b429bc88545cd645c8c7eb95a" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>addVectorNames</name></member>
      <member refid="classcsl_1_1Space_1a09f62985fe3db824893d375783f6e552" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>applyMetric</name></member>
      <member refid="classcsl_1_1Space_1ad645509baf26605ae86ff7ffdd3233aa" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>applyMetricOnTensor</name></member>
      <member refid="classcsl_1_1Space_1a474dca7629f4655ad29e4b3ee6430f3a" prot="protected" virt="non-virtual"><scope>mty::DiracSpace</scope><name>availableIndices</name></member>
      <member refid="classcsl_1_1Space_1a368024ae81726c26c7af95f7837fab23" prot="protected" virt="non-virtual"><scope>mty::DiracSpace</scope><name>availableVectors</name></member>
      <member refid="classmty_1_1DiracSpace_1a449af88634319086eff6669e94a48a7d" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>C_matrix</name></member>
      <member refid="classcsl_1_1Space_1a35cf0a3479e3d5efdb3d7000fecbf56b" prot="public" virt="virtual"><scope>mty::DiracSpace</scope><name>calculateTrace</name></member>
      <member refid="classcsl_1_1Space_1ad3e1d183de6994aae95c633205bca51a" prot="protected" virt="non-virtual"><scope>mty::DiracSpace</scope><name>defaultIndexNames</name></member>
      <member refid="classcsl_1_1Space_1a3b7ea855db886563c8d6e2bef902682d" prot="protected" virt="non-virtual"><scope>mty::DiracSpace</scope><name>defaultName</name></member>
      <member refid="classcsl_1_1Space_1a98c96a51dd8656972534f1890cdc7f88" prot="protected" virt="non-virtual"><scope>mty::DiracSpace</scope><name>delta</name></member>
      <member refid="classcsl_1_1Space_1a0bb4f39fe932f6028ba31f7072e94caa" prot="protected" virt="non-virtual"><scope>mty::DiracSpace</scope><name>dim</name></member>
      <member refid="classmty_1_1DiracSpace_1a238c73b096eea8ad37d445fba66c67ba" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>DiracSpace</name></member>
      <member refid="classcsl_1_1Space_1a27f9b2bfce0a21ddbde0581e7b861daa" prot="protected" virt="non-virtual"><scope>mty::DiracSpace</scope><name>epsilon</name></member>
      <member refid="classmty_1_1DiracSpace_1a434524e53da16a149a9a5d694d0d64a4" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>gamma</name></member>
      <member refid="classmty_1_1DiracSpace_1ab4c79dde1d3d91a80c3ed2261b5eea00" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>gamma_chir</name></member>
      <member refid="classcsl_1_1Space_1a3e22f45ad75d9f625ef0637cd777190f" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>generateIndex</name></member>
      <member refid="classcsl_1_1Space_1a57e35dce20e198e9eabab3224061ab07" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>generateIndex</name></member>
      <member refid="classcsl_1_1Space_1a2119016c4b1a6d231b97e3c20781b49a" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>generateIndices</name></member>
      <member refid="classcsl_1_1Space_1a6961dd8b230baa432699ddcb5b85a875" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>generateIndices</name></member>
      <member refid="classcsl_1_1Space_1a23ec526397be2dc363118a9efa8c6094" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>generateSimilar</name></member>
      <member refid="classcsl_1_1Space_1a3a5473e7e5075c398bdd98c2029dfaac" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>generateVector</name></member>
      <member refid="classcsl_1_1Space_1ad27b0e9a5e2b2c1c6639f0479f57c690" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>generateVectorName</name></member>
      <member refid="classmty_1_1DiracSpace_1af81ef8022db0150c9691568e9d8f38ba" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>getChirality</name></member>
      <member refid="classcsl_1_1Space_1ae3995c3ed2af1656446ba77cee6dfe32" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>getDelta</name></member>
      <member refid="classcsl_1_1Space_1ad5f5d81d0a1b9491809fc90f8b6a5545" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>getDim</name></member>
      <member refid="classcsl_1_1Space_1a048579060d6e892777e53a2dabf928c8" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>getEpsilon</name></member>
      <member refid="classmty_1_1DiracSpace_1a7a9c4a78979c471b4475b7b89b239199" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>getFirstIndex</name></member>
      <member refid="classcsl_1_1Space_1ad88a09611615307c2706d41412f81ef2" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>getIndexName</name></member>
      <member refid="classcsl_1_1Space_1a27f0c6e4fe30a5bd712c3f21511cc173" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>getIndexNameView</name></member>
      <member refid="classcsl_1_1Space_1a07ba9b8414cbcd39afe2a632208f7294" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>getInverseMetric</name></member>
      <member refid="classcsl_1_1Space_1a6d857ec120dc5dd45a1830f89a885f05" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>getMetric</name></member>
      <member refid="classcsl_1_1Space_1a968b828ad5aa203d744a28eb742d957f" prot="public" virt="virtual"><scope>mty::DiracSpace</scope><name>getName</name></member>
      <member refid="classcsl_1_1Space_1a43ea5e810ae5b49ee6a2b92e3aab45b7" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>getNextIndexName</name></member>
      <member refid="classmty_1_1DiracSpace_1ac35b6238d8e36c14f4f6439d18c4a77d" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>getSecondIndex</name></member>
      <member refid="classcsl_1_1Space_1acc2dc003fec546913809f7ef3e9e03c9" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>getSignature</name></member>
      <member refid="classcsl_1_1Space_1a6cec2c26132ef1bae61f2c6b012c16f3" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>getSignedIndex</name></member>
      <member refid="classmty_1_1DiracSpace_1aa47b27e501fb391c08927e7ad277c252" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>getSpaceTime</name></member>
      <member refid="classmty_1_1DiracSpace_1aeefa4023cd8c2c68c0b6f04f1db5fd9f" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>getSpaceTimeIndex</name></member>
      <member refid="classcsl_1_1Space_1ac113a6cf91e0cb3d399970afc62c7999" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>getSpecFromIndexName</name></member>
      <member refid="classmty_1_1DiracSpace_1a88748913b079fbfb66c5f06898406f1d" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>getSpinorDimension</name></member>
      <member refid="classcsl_1_1Space_1ac0c47dede17d3902cf375f38950de656" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>getSymbolicDim</name></member>
      <member refid="classcsl_1_1Space_1a1541a2a6235389129d368b13272853f8" prot="public" virt="virtual"><scope>mty::DiracSpace</scope><name>hasSpecialTraceProperty</name></member>
      <member refid="classmty_1_1DiracSpace_1a81d0c8186b140e8ab41f7fee91041072" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>index</name></member>
      <member refid="classmty_1_1DiracSpace_1a62e7c915275d30d31d5fd9a75cf27629" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>initProperties</name></member>
      <member refid="classcsl_1_1Space_1ad74accb2e9c4c109246436a3afef2b6e" prot="protected" virt="non-virtual"><scope>mty::DiracSpace</scope><name>inverseMetric</name></member>
      <member refid="classmty_1_1DiracSpace_1a5e46daccf1470b4c0ded81652d581be7" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>isCMatrix</name></member>
      <member refid="classmty_1_1DiracSpace_1a16bff8da97b36c0173449bfa034e4706" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>isCMatrix</name></member>
      <member refid="classmty_1_1DiracSpace_1a9217c492bde2d4af69680f72237933d5" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>isCMatrix</name></member>
      <member refid="classmty_1_1DiracSpace_1a525a8e26c223c710c14be7a7a296c6f8" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>isDelta</name></member>
      <member refid="classmty_1_1DiracSpace_1a4651a807032f884b861bdeb8a4b34df1" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>isDelta</name></member>
      <member refid="classmty_1_1DiracSpace_1acde96913b7234ed286599f9311ec695f" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>isDelta</name></member>
      <member refid="classmty_1_1DiracSpace_1a6dab5c17643e8b2691254beb32459115" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>isGammaChir</name></member>
      <member refid="classmty_1_1DiracSpace_1a4e2ebd1235d6837bcac89bd597f5468d" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>isGammaChir</name></member>
      <member refid="classmty_1_1DiracSpace_1aaa2710a0eda51ffb186d6bef22979a75" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>isGammaChir</name></member>
      <member refid="classmty_1_1DiracSpace_1ac53ca9ff253eca2fe146f25b4ce9938a" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>isGammaMu</name></member>
      <member refid="classmty_1_1DiracSpace_1a0b68e299dd80c75b5f6f59801c82ab02" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>isGammaMu</name></member>
      <member refid="classmty_1_1DiracSpace_1aaeb8227474ebed53d8af5249c873dccc" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>isGammaMu</name></member>
      <member refid="classmty_1_1DiracSpace_1a65c8a309f2cd528518e763c9fb61f49b" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>isGammaTensor</name></member>
      <member refid="classmty_1_1DiracSpace_1a74db80fab5a4f1134f541c7c060358c6" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>isGammaTensor</name></member>
      <member refid="classmty_1_1DiracSpace_1acab3b8aab4103cbc22a5ac191557830c" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>isP_L</name></member>
      <member refid="classmty_1_1DiracSpace_1ac5b9795872347fea4a3bc405eceae00f" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>isP_L</name></member>
      <member refid="classmty_1_1DiracSpace_1adada1b7e3ef70c02011f779b5a8de222" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>isP_L</name></member>
      <member refid="classmty_1_1DiracSpace_1ac5e5b04ebbd9b34a378bedf197934eb4" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>isP_R</name></member>
      <member refid="classmty_1_1DiracSpace_1a5f0dad65f384765f1a2857eb4a193c94" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>isP_R</name></member>
      <member refid="classmty_1_1DiracSpace_1aa44c0f71efe1d2bf8dfe9febf6faa36b" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>isP_R</name></member>
      <member refid="classmty_1_1DiracSpace_1a704d28876888f83fa84fe837d3a6c5c2" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>isProjector</name></member>
      <member refid="classmty_1_1DiracSpace_1aafe1fb0191a723a997c1cc5597865ecd" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>isProjector</name></member>
      <member refid="classmty_1_1DiracSpace_1a93f2e121eb62b147502f695110a3ac7e" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>isProjector</name></member>
      <member refid="classmty_1_1DiracSpace_1ad08108455fa7a19ecda2a8840fcba0a8" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>isSigma</name></member>
      <member refid="classmty_1_1DiracSpace_1ac24baf70c4af1d44d319c40c0dec9e5c" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>isSigma</name></member>
      <member refid="classmty_1_1DiracSpace_1a5a4b95e408909760006c8fa9f6ab854d" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>isSymmetric</name></member>
      <member refid="classmty_1_1DiracSpace_1a5a0b6cf6b2203332b294a9fe6fc8a7ad" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>isSymmetric</name></member>
      <member refid="classcsl_1_1Space_1a1133f351866aca2c4ccaf5440ae70457" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>keepCycles</name></member>
      <member refid="classcsl_1_1Space_1adb37e6c8c611b83ce476a165b65bf978" prot="protected" virt="non-virtual"><scope>mty::DiracSpace</scope><name>metric</name></member>
      <member refid="classcsl_1_1Space_1a5492e168d367d61c45c685835a623244" prot="protected" virt="non-virtual"><scope>mty::DiracSpace</scope><name>name</name></member>
      <member refid="classcsl_1_1Space_1a770b7f272ce58a442a6d7eaa7583af78" prot="protected" virt="non-virtual"><scope>mty::DiracSpace</scope><name>nameIndices</name></member>
      <member refid="classmty_1_1DiracSpace_1a07c3d0194686df0a331acac0e16ae120" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>P_L</name></member>
      <member refid="classmty_1_1DiracSpace_1abeb95b20d1bbe367ec0637c46c7a1fea" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>P_R</name></member>
      <member refid="classcsl_1_1Space_1a5b6d85a6ad9c156459a8f9a387e883fa" prot="public" virt="virtual"><scope>mty::DiracSpace</scope><name>printCode</name></member>
      <member refid="classcsl_1_1Space_1aaf8d904aef388f27895262bbc38ea87e" prot="public" virt="virtual"><scope>mty::DiracSpace</scope><name>printDefinition</name></member>
      <member refid="classcsl_1_1Space_1a191f9429fe6f855f8397c4e83d9f0f11" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>refreshIndexName</name></member>
      <member refid="classcsl_1_1Space_1af2328a57416440f652efeed38b2c87e0" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>resetIndexNumber</name></member>
      <member refid="classmty_1_1DiracSpace_1ab76263f4e77c4a99996b68c9865c42ac" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>setDiracTensor4</name></member>
      <member refid="classmty_1_1DiracSpace_1a88decb775428be8ff43a5644303f8fb8" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>sigma</name></member>
      <member refid="classcsl_1_1Space_1ad73c369af3d12acd80df17f4143b9551" prot="protected" virt="non-virtual"><scope>mty::DiracSpace</scope><name>signedIndex</name></member>
      <member refid="classmty_1_1DiracSpace_1a7ef26d81c5a0e72e80813587c872208c" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>simplifyChain</name></member>
      <member refid="classcsl_1_1Space_1ae2c19f01c2f4178429c9308204fc46c3" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>Space</name></member>
      <member refid="classcsl_1_1Space_1ae9a8a760bba6985fd84bc3223056be36" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>Space</name></member>
      <member refid="classcsl_1_1Space_1a76e7e8294faef61ec0257b9915b5c8d8" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>Space</name></member>
      <member refid="classmty_1_1DiracSpace_1a942ffb0fe2b1de40780168ffc9c6363e" prot="private" virt="non-virtual"><scope>mty::DiracSpace</scope><name>spaceTime</name></member>
      <member refid="classcsl_1_1Space_1a08d0b51a8c3a61963e12b442d49ef5dd" prot="protected" virt="non-virtual"><scope>mty::DiracSpace</scope><name>specIndices</name></member>
      <member refid="classmty_1_1DiracSpace_1ac7b2cf6f6d5f70e3fa68bd4c850c8638" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>st_index</name></member>
      <member refid="classcsl_1_1Space_1a66de99da8500ab5931ad5ae7366826b6" prot="protected" virt="non-virtual"><scope>mty::DiracSpace</scope><name>symbolicDim</name></member>
      <member refid="classmty_1_1DiracSpace_1addfc0ef68286a6de69219630a868de38" prot="public" virt="non-virtual"><scope>mty::DiracSpace</scope><name>~DiracSpace</name></member>
      <member refid="classcsl_1_1Space_1a8f77196927553767c6ebf2e17afd0a69" prot="public" virt="virtual"><scope>mty::DiracSpace</scope><name>~Space</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
