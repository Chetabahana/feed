<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classmty_1_1algebra_1_1R" kind="class" language="C++" prot="public">
    <compoundname>mty::algebra::R</compoundname>
    <basecompoundref refid="classmty_1_1SemiSimpleAlgebra" prot="public" virt="non-virtual">mty::SemiSimpleAlgebra</basecompoundref>
    <includes refid="semiSimpleAlgebra_8h" local="no">semiSimpleAlgebra.h</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classmty_1_1algebra_1_1R_1a917504abbbf6342e2a7acad38ff6e686" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>R::R</definition>
        <argsstring>()</argsstring>
        <name>R</name>
        <qualifiedname>mty::algebra::R::R</qualifiedname>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/semiSimpleAlgebra.h" line="608" column="5" bodyfile="src/marty/core/semiSimpleAlgebra.cpp" bodystart="837" bodyend="839"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1algebra_1_1R_1ac35b9d208dc444226e358977dcc22820" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mty::algebra::R::~R</definition>
        <argsstring>()</argsstring>
        <name>~R</name>
        <qualifiedname>mty::algebra::R::~R</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/semiSimpleAlgebra.h" line="613" column="5" bodyfile="src/marty/core/semiSimpleAlgebra.h" bodystart="613" bodyend="613"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1algebra_1_1R_1ac427eaa24ff0852402b68f2dae79a8ab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacemty_1_1algebra_1a6a408a40adf4bdcbb2de53ae0917062a" kindref="member">algebra::Type</ref></type>
        <definition>mty::algebra::Type R::getType</definition>
        <argsstring>() const override</argsstring>
        <name>getType</name>
        <qualifiedname>mty::algebra::R::getType</qualifiedname>
        <reimplements refid="classmty_1_1SemiSimpleAlgebra_1a576f5c44114980964d3688ec710e54f1">getType</reimplements>
        <briefdescription>
<para>Pure virtual function overriden in derived classes. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The type of the algebra, see the enum <ref refid="namespacemty_1_1algebra_1a6a408a40adf4bdcbb2de53ae0917062a" kindref="member">algebra::Type</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/semiSimpleAlgebra.h" line="615" column="19" bodyfile="src/marty/core/semiSimpleAlgebra.cpp" bodystart="841" bodyend="844"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1algebra_1_1R_1a554434ba4bcb60bc72ca2efb0204541e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void R::setCartanMatrix</definition>
        <argsstring>() override</argsstring>
        <name>setCartanMatrix</name>
        <qualifiedname>mty::algebra::R::setCartanMatrix</qualifiedname>
        <reimplements refid="classmty_1_1SemiSimpleAlgebra_1a5ca87a7cb7f2dc2b7d534cad69d42774">setCartanMatrix</reimplements>
        <briefdescription>
<para>Overrides the function of <ref refid="classmty_1_1SemiSimpleAlgebra" kindref="compound">mty::SemiSimpleAlgebra</ref> and does nothing (no Cartan matrix). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/semiSimpleAlgebra.h" line="621" column="10" bodyfile="src/marty/core/semiSimpleAlgebra.cpp" bodystart="846" bodyend="848"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1algebra_1_1R_1a45fe98fc5cc006d3349d91c651daa9fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void R::setSquaredNorm</definition>
        <argsstring>() override</argsstring>
        <name>setSquaredNorm</name>
        <qualifiedname>mty::algebra::R::setSquaredNorm</qualifiedname>
        <reimplements refid="classmty_1_1SemiSimpleAlgebra_1a1e65a608faddab538f9ec73a69692cfc">setSquaredNorm</reimplements>
        <briefdescription>
<para>Overrides the function of <ref refid="classmty_1_1SemiSimpleAlgebra" kindref="compound">mty::SemiSimpleAlgebra</ref> and does nothing (no root). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/semiSimpleAlgebra.h" line="627" column="10" bodyfile="src/marty/core/semiSimpleAlgebra.cpp" bodystart="850" bodyend="852"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1algebra_1_1R_1ab2195fccaa79ebf1988a4a7be7050d15" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classmty_1_1Irrep" kindref="compound">mty::Irrep</ref></type>
        <definition>mty::Irrep R::highestWeightRep</definition>
        <argsstring>(const mty::AlgebraState &amp;highestWeight, bool mult=true) const override</argsstring>
        <name>highestWeightRep</name>
        <qualifiedname>mty::algebra::R::highestWeightRep</qualifiedname>
        <reimplements refid="classmty_1_1SemiSimpleAlgebra_1a88a9a01df2e34c751d96a8d7ed448606">highestWeightRep</reimplements>
        <param>
          <type>const <ref refid="classmty_1_1AlgebraState" kindref="compound">mty::AlgebraState</ref> &amp;</type>
          <declname>highestWeight</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>mult</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Creates a representation from an <ref refid="classmty_1_1AlgebraState" kindref="compound">AlgebraState</ref> containing only the numerator and the denominator of the U(1) charge. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The U(1) <ref refid="classmty_1_1Irrep" kindref="compound">Irrep</ref> with the right charge. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/semiSimpleAlgebra.h" line="634" column="16" bodyfile="src/marty/core/semiSimpleAlgebra.cpp" bodystart="854" bodyend="863"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1algebra_1_1R_1aa163053f165fb067e31fadc33360152a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classmty_1_1Irrep" kindref="compound">mty::Irrep</ref></type>
        <definition>mty::Irrep R::highestWeightRep</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;highestWeight, bool mult=true) const override</argsstring>
        <name>highestWeightRep</name>
        <qualifiedname>mty::algebra::R::highestWeightRep</qualifiedname>
        <reimplements refid="classmty_1_1SemiSimpleAlgebra_1ae2c838647f859770f69d7a1ebc3f4b25">highestWeightRep</reimplements>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>highestWeight</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>mult</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Creates a representation from a std::vector of int containing only the numerator and the denominator of the U(1) charge. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The U(1) <ref refid="classmty_1_1Irrep" kindref="compound">Irrep</ref> with the right charge. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/semiSimpleAlgebra.h" line="642" column="16" bodyfile="src/marty/core/semiSimpleAlgebra.cpp" bodystart="865" bodyend="875"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1algebra_1_1R_1a2d1733767a6bc7549161a2941d42e8e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classmty_1_1Irrep" kindref="compound">mty::Irrep</ref></type>
        <definition>mty::Irrep R::getTrivialRep</definition>
        <argsstring>() const override</argsstring>
        <name>getTrivialRep</name>
        <qualifiedname>mty::algebra::R::getTrivialRep</qualifiedname>
        <reimplements refid="classmty_1_1SemiSimpleAlgebra_1a49fd976502d861fc07ea61739c154e99">getTrivialRep</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The trivial rep: charge 0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/semiSimpleAlgebra.h" line="648" column="16" bodyfile="src/marty/core/semiSimpleAlgebra.cpp" bodystart="877" bodyend="883"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1algebra_1_1R_1a7c5e4dae32aa1f93d750f979085e8151" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classmty_1_1SumIrrep" kindref="compound">mty::SumIrrep</ref></type>
        <definition>mty::SumIrrep R::tensorProduct</definition>
        <argsstring>(const mty::Irrep &amp;A, const mty::Irrep &amp;B, bool mult=true) const override</argsstring>
        <name>tensorProduct</name>
        <qualifiedname>mty::algebra::R::tensorProduct</qualifiedname>
        <reimplements refid="classmty_1_1SemiSimpleAlgebra_1a6b115c5f8711fd19ec740f3b72cc2535">tensorProduct</reimplements>
        <param>
          <type>const <ref refid="classmty_1_1Irrep" kindref="compound">mty::Irrep</ref> &amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type>const <ref refid="classmty_1_1Irrep" kindref="compound">mty::Irrep</ref> &amp;</type>
          <declname>B</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>mult</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="classmty_1_1algebra_1_1A" kindref="compound">A</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>First <ref refid="classmty_1_1Irrep" kindref="compound">Irrep</ref> in the product. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classmty_1_1algebra_1_1B" kindref="compound">B</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Second <ref refid="classmty_1_1Irrep" kindref="compound">Irrep</ref> in the procut. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The tensor procuct of the two <ref refid="classmty_1_1Irrep" kindref="compound">Irrep</ref>, i.e. another U(1) rep whose charge is the sum of those of <bold><ref refid="classmty_1_1algebra_1_1A" kindref="compound">A</ref></bold> and <bold><ref refid="classmty_1_1algebra_1_1B" kindref="compound">B</ref></bold>, embedded in a <ref refid="classmty_1_1SumIrrep" kindref="compound">SumIrrep</ref> of one term. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/semiSimpleAlgebra.h" line="657" column="19" bodyfile="src/marty/core/semiSimpleAlgebra.cpp" bodystart="886" bodyend="908"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1algebra_1_1R_1a5818785411f48f0c4ba102f6622d3080" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void R::sortRep</definition>
        <argsstring>(std::vector&lt; mty::AlgebraState &gt; &amp;rep, std::vector&lt; int &gt; &amp;mult) const override</argsstring>
        <name>sortRep</name>
        <qualifiedname>mty::algebra::R::sortRep</qualifiedname>
        <reimplements refid="classmty_1_1SemiSimpleAlgebra_1a4f57c0b5a49af2a8474fdef58da9538c">sortRep</reimplements>
        <param>
          <type>std::vector&lt; <ref refid="classmty_1_1AlgebraState" kindref="compound">mty::AlgebraState</ref> &gt; &amp;</type>
          <declname>rep</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>mult</declname>
        </param>
        <briefdescription>
<para>Sorts the different states of the rep. </para>
        </briefdescription>
        <detaileddescription>
<para>Sorts the different states by increasing value of charge. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rep</parametername>
</parameternamelist>
<parameterdescription>
<para>std::vector of <ref refid="classmty_1_1AlgebraState" kindref="compound">AlgebraState</ref> to sort (modified). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mult</parametername>
</parameternamelist>
<parameterdescription>
<para>multiplicities of the states sorted the same way (modified). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/semiSimpleAlgebra.h" line="667" column="10" bodyfile="src/marty/core/semiSimpleAlgebra.cpp" bodystart="910" bodyend="918"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1algebra_1_1R_1a63342990e7490a59c1dde67e633cb125" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref></type>
        <definition>csl::Expr mty::algebra::R::getEta</definition>
        <argsstring>() const override</argsstring>
        <name>getEta</name>
        <qualifiedname>mty::algebra::R::getEta</qualifiedname>
        <reimplements refid="classmty_1_1SemiSimpleAlgebra_1a0ed5474daa7b7292c97499a2a276b0dc">getEta</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/semiSimpleAlgebra.h" line="670" column="15" bodyfile="src/marty/core/semiSimpleAlgebra.h" bodystart="670" bodyend="673"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Algebra (<ref refid="classmty_1_1algebra_1_1R" kindref="compound">R</ref>, +) of the U(1) group. </para>
    </briefdescription>
    <detaileddescription>
<para>This particular algebra has a different treatment as the other semi-simple algebras and reimplements some of the main functions. <ref refid="classmty_1_1algebra_1_1R" kindref="compound">R</ref> needs only one charge (possibly fractionnal) to fully describe a representation. No need then for the cartan formalism. <ref refid="classmty_1_1algebra_1_1A" kindref="compound">A</ref> representation is then represented by a two-labels <ref refid="classmty_1_1AlgebraState" kindref="compound">AlgebraState</ref>. The first label corresponds to the charge&apos;s numerator, and the second corresponds to the denominator. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>mty::SemiSimpleAlgebra</label>
        <link refid="classmty_1_1SemiSimpleAlgebra"/>
      </node>
      <node id="1">
        <label>mty::algebra::R</label>
        <link refid="classmty_1_1algebra_1_1R"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>csl::Expr</label>
        <link refid="classcsl_1_1Expr"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>mty::SemiSimpleAlgebra</label>
        <link refid="classmty_1_1SemiSimpleAlgebra"/>
        <childnode refid="3" relation="usage">
          <edgelabel>inverseCartan</edgelabel>
          <edgelabel>symbolicCartan</edgelabel>
          <edgelabel>symbolicMetric</edgelabel>
          <edgelabel>symbolicRho</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>mty::algebra::R</label>
        <link refid="classmty_1_1algebra_1_1R"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>std::shared_ptr&lt; csl::Abstract &gt;</label>
        <link refid="classstd_1_1shared__ptr"/>
      </node>
    </collaborationgraph>
    <location file="src/marty/core/semiSimpleAlgebra.h" line="602" column="1" bodyfile="src/marty/core/semiSimpleAlgebra.h" bodystart="602" bodyend="674"/>
    <listofallmembers>
      <member refid="classmty_1_1SemiSimpleAlgebra_1a1613618ad6be9ea31643922f1cedff6c" prot="protected" virt="non-virtual"><scope>mty::algebra::R</scope><name>absoluteNorms</name></member>
      <member refid="classmty_1_1SemiSimpleAlgebra_1aacb7df0522ee6aea21d3e540d25e457a" prot="protected" virt="non-virtual"><scope>mty::algebra::R</scope><name>cartanMatrix</name></member>
      <member refid="classmty_1_1SemiSimpleAlgebra_1a24200a3ce37c7de85685afe1d8f43f6a" prot="public" virt="virtual"><scope>mty::algebra::R</scope><name>getDefiningRep</name></member>
      <member refid="classmty_1_1algebra_1_1R_1a63342990e7490a59c1dde67e633cb125" prot="public" virt="virtual"><scope>mty::algebra::R</scope><name>getEta</name></member>
      <member refid="classmty_1_1SemiSimpleAlgebra_1a6e39ef348b8e127f4021efb0c9ab1fd5" prot="public" virt="virtual"><scope>mty::algebra::R</scope><name>getIndex</name></member>
      <member refid="classmty_1_1SemiSimpleAlgebra_1a5c9236993d9c52d7d8814401436d9d02" prot="public" virt="non-virtual"><scope>mty::algebra::R</scope><name>getOrderL</name></member>
      <member refid="classmty_1_1SemiSimpleAlgebra_1a08445d84837a3ee0818e999a8e3afa84" prot="public" virt="non-virtual"><scope>mty::algebra::R</scope><name>getQuadraticCasimir</name></member>
      <member refid="classmty_1_1algebra_1_1R_1a2d1733767a6bc7549161a2941d42e8e4" prot="public" virt="virtual"><scope>mty::algebra::R</scope><name>getTrivialRep</name></member>
      <member refid="classmty_1_1algebra_1_1R_1ac427eaa24ff0852402b68f2dae79a8ab" prot="public" virt="virtual"><scope>mty::algebra::R</scope><name>getType</name></member>
      <member refid="classmty_1_1algebra_1_1R_1ab2195fccaa79ebf1988a4a7be7050d15" prot="public" virt="virtual"><scope>mty::algebra::R</scope><name>highestWeightRep</name></member>
      <member refid="classmty_1_1algebra_1_1R_1aa163053f165fb067e31fadc33360152a" prot="public" virt="virtual"><scope>mty::algebra::R</scope><name>highestWeightRep</name></member>
      <member refid="classmty_1_1SemiSimpleAlgebra_1a67899733c277cad4a381f9e77a64cf05" prot="protected" virt="non-virtual"><scope>mty::algebra::R</scope><name>indices</name></member>
      <member refid="classmty_1_1SemiSimpleAlgebra_1a6ca6c984a49944b59b0b949ca245551c" prot="protected" virt="non-virtual"><scope>mty::algebra::R</scope><name>init</name></member>
      <member refid="classmty_1_1SemiSimpleAlgebra_1af98c68e1832512d74e3f67c5199c6312" prot="protected" virt="non-virtual"><scope>mty::algebra::R</scope><name>inverseCartan</name></member>
      <member refid="classmty_1_1SemiSimpleAlgebra_1a49c92eb6d42fdfd7fb14a202aa9d50e1" prot="protected" virt="non-virtual"><scope>mty::algebra::R</scope><name>irreps</name></member>
      <member refid="classmty_1_1SemiSimpleAlgebra_1a05112dc753491ad590f22e6aec5a1612" prot="protected" virt="non-virtual"><scope>mty::algebra::R</scope><name>l</name></member>
      <member refid="classmty_1_1SemiSimpleAlgebra_1a9ca8e06e270dbb72139e494cde8a5dbe" prot="protected" virt="non-virtual"><scope>mty::algebra::R</scope><name>positiveRoots</name></member>
      <member refid="classmty_1_1algebra_1_1R_1a917504abbbf6342e2a7acad38ff6e686" prot="public" virt="non-virtual"><scope>mty::algebra::R</scope><name>R</name></member>
      <member refid="classmty_1_1SemiSimpleAlgebra_1a8f7ba151cd190383663b1ab77b2d445b" prot="protected" virt="non-virtual"><scope>mty::algebra::R</scope><name>rho</name></member>
      <member refid="classmty_1_1SemiSimpleAlgebra_1a41f221731862eaae617f45cb219c8530" prot="protected" virt="non-virtual"><scope>mty::algebra::R</scope><name>rootMetric</name></member>
      <member refid="classmty_1_1SemiSimpleAlgebra_1a08429df3b2869d35ef2f5399a679c520" prot="public" virt="non-virtual"><scope>mty::algebra::R</scope><name>SemiSimpleAlgebra</name></member>
      <member refid="classmty_1_1algebra_1_1R_1a554434ba4bcb60bc72ca2efb0204541e" prot="public" virt="virtual"><scope>mty::algebra::R</scope><name>setCartanMatrix</name></member>
      <member refid="classmty_1_1algebra_1_1R_1a45fe98fc5cc006d3349d91c651daa9fe" prot="public" virt="virtual"><scope>mty::algebra::R</scope><name>setSquaredNorm</name></member>
      <member refid="classmty_1_1algebra_1_1R_1a5818785411f48f0c4ba102f6622d3080" prot="public" virt="virtual"><scope>mty::algebra::R</scope><name>sortRep</name></member>
      <member refid="classmty_1_1SemiSimpleAlgebra_1a4fd98963d6d3c5a536267529a4a2c60c" prot="protected" virt="non-virtual"><scope>mty::algebra::R</scope><name>squaredNorm</name></member>
      <member refid="classmty_1_1SemiSimpleAlgebra_1a3fb05c4a72c9d16ed16994057e7b7983" prot="protected" virt="non-virtual"><scope>mty::algebra::R</scope><name>symbolicCartan</name></member>
      <member refid="classmty_1_1SemiSimpleAlgebra_1ac165b358e852e5adfacba2be3b7d468d" prot="protected" virt="non-virtual"><scope>mty::algebra::R</scope><name>symbolicMetric</name></member>
      <member refid="classmty_1_1SemiSimpleAlgebra_1a3cf01c47b378082944e6d98b166d870c" prot="protected" virt="non-virtual"><scope>mty::algebra::R</scope><name>symbolicRho</name></member>
      <member refid="classmty_1_1SemiSimpleAlgebra_1a57b9e8d3082b2ea00601ae26c59e4d4b" prot="protected" virt="non-virtual"><scope>mty::algebra::R</scope><name>symbolicRoots</name></member>
      <member refid="classmty_1_1SemiSimpleAlgebra_1a47413b0fc354145adf28b42753899a08" prot="protected" virt="non-virtual"><scope>mty::algebra::R</scope><name>symbolicSquaredNorms</name></member>
      <member refid="classmty_1_1algebra_1_1R_1a7c5e4dae32aa1f93d750f979085e8151" prot="public" virt="virtual"><scope>mty::algebra::R</scope><name>tensorProduct</name></member>
      <member refid="classmty_1_1SemiSimpleAlgebra_1ac020594ec47ad8ec26a4ab7d639f1202" prot="public" virt="virtual" ambiguityscope="mty::SemiSimpleAlgebra::"><scope>mty::algebra::R</scope><name>tensorProduct</name></member>
      <member refid="classmty_1_1SemiSimpleAlgebra_1a41b26f9216bb204ba7858546e049ea88" prot="public" virt="virtual" ambiguityscope="mty::SemiSimpleAlgebra::"><scope>mty::algebra::R</scope><name>tensorProduct</name></member>
      <member refid="classmty_1_1SemiSimpleAlgebra_1a6fbd8240dfad0eb04aff4cc288db2dc1" prot="public" virt="non-virtual" ambiguityscope="mty::SemiSimpleAlgebra::"><scope>mty::algebra::R</scope><name>tensorProduct</name></member>
      <member refid="classmty_1_1algebra_1_1R_1ac35b9d208dc444226e358977dcc22820" prot="public" virt="non-virtual"><scope>mty::algebra::R</scope><name>~R</name></member>
      <member refid="classmty_1_1SemiSimpleAlgebra_1a528476431b2a6c2db45667be258d4de4" prot="public" virt="virtual"><scope>mty::algebra::R</scope><name>~SemiSimpleAlgebra</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
