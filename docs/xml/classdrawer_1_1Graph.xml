<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classdrawer_1_1Graph" kind="class" language="C++" prot="public">
    <compoundname>drawer::Graph</compoundname>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classdrawer_1_1Graph_1aed99f3bea65c997384feeff2a176f72b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>LatexLinker</definition>
        <argsstring></argsstring>
        <name>LatexLinker</name>
        <qualifiedname>drawer::Graph::LatexLinker</qualifiedname>
        <param>
          <type><ref refid="classdrawer_1_1LatexLinker" kindref="compound">LatexLinker</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="168" column="18" bodyfile="src/grafed/core/planargraph.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classdrawer_1_1Graph_1aa8e64fc2eed72c0ff86a678164eb3957" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, Graph const &amp;graph)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>drawer::Graph::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="classdrawer_1_1Graph" kindref="compound">Graph</ref> const &amp;</type>
          <declname>graph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="310" column="12" bodyfile="src/grafed/core/planargraph.cpp" bodystart="874" bodyend="886"/>
      </memberdef>
      <memberdef kind="friend" id="classdrawer_1_1Graph_1aa8e64fc2eed72c0ff86a678164eb3957" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, Graph const &amp;graph)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>drawer::Graph::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="classdrawer_1_1Graph" kindref="compound">Graph</ref> const &amp;</type>
          <declname>graph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="310" column="12" bodyfile="src/grafed/core/planargraph.cpp" bodystart="874" bodyend="886"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classdrawer_1_1Graph_1acb832508fde9d7a32b530165477b572a" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>static bool drawer::Graph::writeResToFile</definition>
        <argsstring></argsstring>
        <name>writeResToFile</name>
        <qualifiedname>drawer::Graph::writeResToFile</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="171" column="31" bodyfile="src/grafed/core/planargraph.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1ac96c85a4a8faaaaa67575b55abe8a76f" prot="public" static="yes" mutable="no">
        <type>std::string</type>
        <definition>static std::string drawer::Graph::fileNameBegin</definition>
        <argsstring></argsstring>
        <name>fileNameBegin</name>
        <qualifiedname>drawer::Graph::fileNameBegin</qualifiedname>
        <initializer>= &quot;graph/begin&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="172" column="31" bodyfile="src/grafed/core/planargraph.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1ae1042a41545b28f9d26a88790f4fab47" prot="public" static="yes" mutable="no">
        <type>std::string</type>
        <definition>static std::string drawer::Graph::fileName3DRes</definition>
        <argsstring></argsstring>
        <name>fileName3DRes</name>
        <qualifiedname>drawer::Graph::fileName3DRes</qualifiedname>
        <initializer>= &quot;graph/3D&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="173" column="31" bodyfile="src/grafed/core/planargraph.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1a7958a5a436f2de53f64f503c73fafce3" prot="public" static="yes" mutable="no">
        <type>std::string</type>
        <definition>static std::string drawer::Graph::fileNameProject</definition>
        <argsstring></argsstring>
        <name>fileNameProject</name>
        <qualifiedname>drawer::Graph::fileNameProject</qualifiedname>
        <initializer>= &quot;graph/project&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="174" column="31" bodyfile="src/grafed/core/planargraph.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1af6e93123e9095bc8be1d77b087603f22" prot="public" static="yes" mutable="no">
        <type>std::string</type>
        <definition>static std::string drawer::Graph::fileName2DRes</definition>
        <argsstring></argsstring>
        <name>fileName2DRes</name>
        <qualifiedname>drawer::Graph::fileName2DRes</qualifiedname>
        <initializer>= &quot;graph/2D&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="175" column="31" bodyfile="src/grafed/core/planargraph.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1ad99dbc5b46f0ef78f09f061122bb4183" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>double</type>
        <definition>static constexpr double drawer::Graph::externalLegSizeRation</definition>
        <argsstring></argsstring>
        <name>externalLegSizeRation</name>
        <qualifiedname>drawer::Graph::externalLegSizeRation</qualifiedname>
        <initializer>= 0.70</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="177" column="36" bodyfile="src/grafed/core/planargraph.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1aa88d447837a74d610fc753a6b546c9f7" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>double</type>
        <definition>static constexpr double drawer::Graph::absAngleMultiple</definition>
        <argsstring></argsstring>
        <name>absAngleMultiple</name>
        <qualifiedname>drawer::Graph::absAngleMultiple</qualifiedname>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="178" column="36" bodyfile="src/grafed/core/planargraph.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1ae6b835e2876c518a5a16538aee6f75d8" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>double</type>
        <definition>static constexpr double drawer::Graph::decouplingDistance</definition>
        <argsstring></argsstring>
        <name>decouplingDistance</name>
        <qualifiedname>drawer::Graph::decouplingDistance</qualifiedname>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="179" column="36" bodyfile="src/grafed/core/planargraph.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1aef47750069612f8cc87a39ebc341b459" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>double</type>
        <definition>static constexpr double drawer::Graph::defaultNodeSizeFactor</definition>
        <argsstring></argsstring>
        <name>defaultNodeSizeFactor</name>
        <qualifiedname>drawer::Graph::defaultNodeSizeFactor</qualifiedname>
        <initializer>= 16.50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="181" column="36" bodyfile="src/grafed/core/planargraph.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1ac0a8441ab9a6c08f6e201fcb3abd117d" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>double</type>
        <definition>static constexpr double drawer::Graph::defaultAngleFactor</definition>
        <argsstring></argsstring>
        <name>defaultAngleFactor</name>
        <qualifiedname>drawer::Graph::defaultAngleFactor</qualifiedname>
        <initializer>= 6.50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="182" column="36" bodyfile="src/grafed/core/planargraph.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1abee956b7dcb78218880fd6bc3e8df3be" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>double</type>
        <definition>static constexpr double drawer::Graph::defaultExternalLayout</definition>
        <argsstring></argsstring>
        <name>defaultExternalLayout</name>
        <qualifiedname>drawer::Graph::defaultExternalLayout</qualifiedname>
        <initializer>= 0.95</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="183" column="36" bodyfile="src/grafed/core/planargraph.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1aeed07af86db8f4e543cd8891abe2fdfb" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>double</type>
        <definition>static constexpr double drawer::Graph::defaultExternalRepulsion</definition>
        <argsstring></argsstring>
        <name>defaultExternalRepulsion</name>
        <qualifiedname>drawer::Graph::defaultExternalRepulsion</qualifiedname>
        <initializer>= 2.00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="184" column="36" bodyfile="src/grafed/core/planargraph.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1aaa79ad0053827dde5f740a2984baf708" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>double</type>
        <definition>static constexpr double drawer::Graph::defaultLegsRepulsion</definition>
        <argsstring></argsstring>
        <name>defaultLegsRepulsion</name>
        <qualifiedname>drawer::Graph::defaultLegsRepulsion</qualifiedname>
        <initializer>= 4.00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="185" column="36" bodyfile="src/grafed/core/planargraph.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1ad49586cae85cdcdd0d0f567a8d04e11b" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>double</type>
        <definition>static constexpr double drawer::Graph::defaultNodeLegsRepulsion</definition>
        <argsstring></argsstring>
        <name>defaultNodeLegsRepulsion</name>
        <qualifiedname>drawer::Graph::defaultNodeLegsRepulsion</qualifiedname>
        <initializer>= 3.00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="186" column="36" bodyfile="src/grafed/core/planargraph.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1a27c0459e3d9c720083e16a9c37972f19" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>double</type>
        <definition>static constexpr double drawer::Graph::defaultExtensionFactor</definition>
        <argsstring></argsstring>
        <name>defaultExtensionFactor</name>
        <qualifiedname>drawer::Graph::defaultExtensionFactor</qualifiedname>
        <initializer>= 1.00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="187" column="36" bodyfile="src/grafed/core/planargraph.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1a9e2da6ecfca49c29599f052f11e65846" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>double</type>
        <definition>static constexpr double drawer::Graph::defaultAbsAngleFactor</definition>
        <argsstring></argsstring>
        <name>defaultAbsAngleFactor</name>
        <qualifiedname>drawer::Graph::defaultAbsAngleFactor</qualifiedname>
        <initializer>= 0.00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="188" column="36" bodyfile="src/grafed/core/planargraph.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1aa05f5c086ae1ff8a428ae0ffed872285" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>double</type>
        <definition>static constexpr double drawer::Graph::default_3DFactor</definition>
        <argsstring></argsstring>
        <name>default_3DFactor</name>
        <qualifiedname>drawer::Graph::default_3DFactor</qualifiedname>
        <initializer>= 0.10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="189" column="36" bodyfile="src/grafed/core/planargraph.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1a7d181194c399ba9471b35dd3147333ad" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>double</type>
        <definition>static constexpr double drawer::Graph::defaultCrossEnergyValue</definition>
        <argsstring></argsstring>
        <name>defaultCrossEnergyValue</name>
        <qualifiedname>drawer::Graph::defaultCrossEnergyValue</qualifiedname>
        <initializer>= 1.00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="190" column="36" bodyfile="src/grafed/core/planargraph.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1acdba62f0157ee32860d5726e99e35a94" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>double</type>
        <definition>static constexpr double drawer::Graph::defaultSpecialAnglesValue</definition>
        <argsstring></argsstring>
        <name>defaultSpecialAnglesValue</name>
        <qualifiedname>drawer::Graph::defaultSpecialAnglesValue</qualifiedname>
        <initializer>= 6.50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="191" column="36" bodyfile="src/grafed/core/planargraph.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1a98f233430aadc50115068630dd4b0c2b" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>static bool drawer::Graph::enable3D</definition>
        <argsstring></argsstring>
        <name>enable3D</name>
        <qualifiedname>drawer::Graph::enable3D</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="193" column="26" bodyfile="src/grafed/core/planargraph.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1aad54be2c93a112898067d0a24dd27169" prot="public" static="yes" mutable="no">
        <type>double</type>
        <definition>static double drawer::Graph::nodeSizeFactor</definition>
        <argsstring></argsstring>
        <name>nodeSizeFactor</name>
        <qualifiedname>drawer::Graph::nodeSizeFactor</qualifiedname>
        <initializer>= defaultNodeSizeFactor</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="194" column="26" bodyfile="src/grafed/core/planargraph.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1af7c3418c4a87de1f5264f3c4817f3ea3" prot="public" static="yes" mutable="no">
        <type>double</type>
        <definition>static double drawer::Graph::angleFactor</definition>
        <argsstring></argsstring>
        <name>angleFactor</name>
        <qualifiedname>drawer::Graph::angleFactor</qualifiedname>
        <initializer>= defaultAngleFactor</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="195" column="26" bodyfile="src/grafed/core/planargraph.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1a3e0d1cd5bbd0fe5bf1a0bb4bbaf6c16e" prot="public" static="yes" mutable="no">
        <type>double</type>
        <definition>static double drawer::Graph::externalRepulsion</definition>
        <argsstring></argsstring>
        <name>externalRepulsion</name>
        <qualifiedname>drawer::Graph::externalRepulsion</qualifiedname>
        <initializer>= defaultExternalRepulsion</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="196" column="26" bodyfile="src/grafed/core/planargraph.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1a64a79a33a62c90da985ab8003360c82e" prot="public" static="yes" mutable="no">
        <type>double</type>
        <definition>static double drawer::Graph::externalLayout</definition>
        <argsstring></argsstring>
        <name>externalLayout</name>
        <qualifiedname>drawer::Graph::externalLayout</qualifiedname>
        <initializer>= defaultExternalLayout</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="197" column="26" bodyfile="src/grafed/core/planargraph.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1aa0b0e6221709121a805faa5d08833a85" prot="public" static="yes" mutable="no">
        <type>double</type>
        <definition>static double drawer::Graph::legsRepulsion</definition>
        <argsstring></argsstring>
        <name>legsRepulsion</name>
        <qualifiedname>drawer::Graph::legsRepulsion</qualifiedname>
        <initializer>= defaultLegsRepulsion</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="198" column="26" bodyfile="src/grafed/core/planargraph.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1a0766a320fc2c7f8d54a1f7295a6c40a2" prot="public" static="yes" mutable="no">
        <type>double</type>
        <definition>static double drawer::Graph::nodeLegsRepulsion</definition>
        <argsstring></argsstring>
        <name>nodeLegsRepulsion</name>
        <qualifiedname>drawer::Graph::nodeLegsRepulsion</qualifiedname>
        <initializer>= defaultNodeLegsRepulsion</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="199" column="26" bodyfile="src/grafed/core/planargraph.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1a753b736259beebb85c382cd1779e18da" prot="public" static="yes" mutable="no">
        <type>double</type>
        <definition>static double drawer::Graph::extensionFactor</definition>
        <argsstring></argsstring>
        <name>extensionFactor</name>
        <qualifiedname>drawer::Graph::extensionFactor</qualifiedname>
        <initializer>= defaultExtensionFactor</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="200" column="26" bodyfile="src/grafed/core/planargraph.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1a139802a805a8ef146d1f0e9ffc010612" prot="public" static="yes" mutable="no">
        <type>double</type>
        <definition>static double drawer::Graph::absAngleFactor</definition>
        <argsstring></argsstring>
        <name>absAngleFactor</name>
        <qualifiedname>drawer::Graph::absAngleFactor</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="201" column="26" bodyfile="src/grafed/core/planargraph.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1af440f3dcb9530ea8848235f20fdd3b41" prot="public" static="yes" mutable="no">
        <type>double</type>
        <definition>static double drawer::Graph::_3DFactor</definition>
        <argsstring></argsstring>
        <name>_3DFactor</name>
        <qualifiedname>drawer::Graph::_3DFactor</qualifiedname>
        <initializer>= default_3DFactor</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="202" column="26" bodyfile="src/grafed/core/planargraph.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1ac76a7d7c137806dcb3c1bf66d6382171" prot="public" static="yes" mutable="no">
        <type>double</type>
        <definition>static double drawer::Graph::specialAnglesValue</definition>
        <argsstring></argsstring>
        <name>specialAnglesValue</name>
        <qualifiedname>drawer::Graph::specialAnglesValue</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="203" column="26" bodyfile="src/grafed/core/planargraph.h" bodystart="203" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdrawer_1_1Graph_1adac8b92bc7baa8dc8bd825a883f91b3f" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t drawer::Graph::nInsertions</definition>
        <argsstring></argsstring>
        <name>nInsertions</name>
        <qualifiedname>drawer::Graph::nInsertions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="332" column="12" bodyfile="src/grafed/core/planargraph.h" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1ae9f8e97e01d874c0bd5bef0cd4308e23" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structdrawer_1_1Point" kindref="compound">Point</ref> &gt;</type>
        <definition>std::vector&lt; Point &gt; drawer::Graph::nodes</definition>
        <argsstring></argsstring>
        <name>nodes</name>
        <qualifiedname>drawer::Graph::nodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="334" column="17" bodyfile="src/grafed/core/planargraph.h" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1a20b4c766dc89f0551fbf64016ac7d9dd" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt; int &gt; drawer::Graph::loop</definition>
        <argsstring></argsstring>
        <name>loop</name>
        <qualifiedname>drawer::Graph::loop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="336" column="17" bodyfile="src/grafed/core/planargraph.h" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1abae14ae424a668ba605a9796728854b9" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt; int &gt; drawer::Graph::external</definition>
        <argsstring></argsstring>
        <name>external</name>
        <qualifiedname>drawer::Graph::external</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="338" column="17" bodyfile="src/grafed/core/planargraph.h" bodystart="338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1a7c624cc3deba51602cf9764c4e4cf95d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt; int &gt; drawer::Graph::side</definition>
        <argsstring></argsstring>
        <name>side</name>
        <qualifiedname>drawer::Graph::side</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="340" column="17" bodyfile="src/grafed/core/planargraph.h" bodystart="340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1ab211cc326bec89a341988c74350c6665" prot="private" static="no" mutable="no">
        <type><ref refid="classdrawer_1_1Matrix" kindref="compound">Matrix</ref>&lt; int &gt;</type>
        <definition>Matrix&lt; int &gt; drawer::Graph::adjacency</definition>
        <argsstring></argsstring>
        <name>adjacency</name>
        <qualifiedname>drawer::Graph::adjacency</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="342" column="12" bodyfile="src/grafed/core/planargraph.h" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdrawer_1_1Graph_1ae5921875989b032ce4a9042b5a65f2ca" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classdrawer_1_1Energy" kindref="compound">Energy</ref> &gt;</type>
        <definition>std::vector&lt; Energy &gt; drawer::Graph::energies</definition>
        <argsstring></argsstring>
        <name>energies</name>
        <qualifiedname>drawer::Graph::energies</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="344" column="17" bodyfile="src/grafed/core/planargraph.h" bodystart="344" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classdrawer_1_1Graph_1a0ebe19295755facfa9126742a53d8f09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>drawer::Graph::Graph</definition>
        <argsstring>()</argsstring>
        <name>Graph</name>
        <qualifiedname>drawer::Graph::Graph</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="205" column="5" bodyfile="src/grafed/core/planargraph.cpp" bodystart="27" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a1c01a9f2016c8262eb2d6719912d8b6a" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>drawer::Graph::Graph</definition>
        <argsstring>(size_t N)</argsstring>
        <name>Graph</name>
        <qualifiedname>drawer::Graph::Graph</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="207" column="14" bodyfile="src/grafed/core/planargraph.cpp" bodystart="31" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a76c8f9c8789a176f0976d9d13d36811d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>drawer::Graph::Graph</definition>
        <argsstring>(size_t N, std::vector&lt; std::pair&lt; int, int &gt; &gt; const &amp;init)</argsstring>
        <name>Graph</name>
        <qualifiedname>drawer::Graph::Graph</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>N</declname>
        </param>
        <param>
          <type>std::vector&lt; std::pair&lt; int, int &gt; &gt; const &amp;</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="209" column="5" bodyfile="src/grafed/core/planargraph.cpp" bodystart="45" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a79a643863c7d636d4029dc03a4317881" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>drawer::Graph::Graph</definition>
        <argsstring>(Graph const &amp;other)=default</argsstring>
        <name>Graph</name>
        <qualifiedname>drawer::Graph::Graph</qualifiedname>
        <param>
          <type><ref refid="classdrawer_1_1Graph" kindref="compound">Graph</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="211" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1af732843e605e649dcbca17eb18df39dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>drawer::Graph::Graph</definition>
        <argsstring>(Graph &amp;&amp;other)=default</argsstring>
        <name>Graph</name>
        <qualifiedname>drawer::Graph::Graph</qualifiedname>
        <param>
          <type><ref refid="classdrawer_1_1Graph" kindref="compound">Graph</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="212" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1aa53e47cea7d1cb1834a2d6e547d062d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdrawer_1_1Graph" kindref="compound">Graph</ref> &amp;</type>
        <definition>Graph &amp; drawer::Graph::operator=</definition>
        <argsstring>(Graph const &amp;other)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>drawer::Graph::operator=</qualifiedname>
        <param>
          <type><ref refid="classdrawer_1_1Graph" kindref="compound">Graph</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="213" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a731b42401eb5197000417b318d362f6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdrawer_1_1Graph" kindref="compound">Graph</ref> &amp;</type>
        <definition>Graph &amp; drawer::Graph::operator=</definition>
        <argsstring>(Graph &amp;&amp;other)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>drawer::Graph::operator=</qualifiedname>
        <param>
          <type><ref refid="classdrawer_1_1Graph" kindref="compound">Graph</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="214" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a3a087e6d2ec9881d5b09e7e192146765" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>drawer::Graph::~Graph</definition>
        <argsstring>()</argsstring>
        <name>~Graph</name>
        <qualifiedname>drawer::Graph::~Graph</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="216" column="5" bodyfile="src/grafed/core/planargraph.h" bodystart="216" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1aa2fe1ad3771ccfccba9ad61cf4871562" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::reinit</definition>
        <argsstring>()</argsstring>
        <name>reinit</name>
        <qualifiedname>drawer::Graph::reinit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="220" column="10" bodyfile="src/grafed/core/planargraph.cpp" bodystart="51" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a793e49c623bf5ed4ce3e6aa0e7be823d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>drawer::Graph::clear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="222" column="10" bodyfile="src/grafed/core/planargraph.cpp" bodystart="57" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a4ce07adcd1641d494ef2049ccd85553b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t drawer::Graph::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>drawer::Graph::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="224" column="12" bodyfile="src/grafed/core/planargraph.h" bodystart="224" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a98b078a2f101623dccea748856869474" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double &amp; drawer::Graph::getPosition</definition>
        <argsstring>(size_t pos)</argsstring>
        <name>getPosition</name>
        <qualifiedname>drawer::Graph::getPosition</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="229" column="12" bodyfile="src/grafed/core/planargraph.h" bodystart="229" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a21239850a03d8c4aab785a12dbc7fcd7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double drawer::Graph::getPosition</definition>
        <argsstring>(size_t pos) const</argsstring>
        <name>getPosition</name>
        <qualifiedname>drawer::Graph::getPosition</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="239" column="12" bodyfile="src/grafed/core/planargraph.h" bodystart="239" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a55a8944a7ec8f2983c4f131b5962bd9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structdrawer_1_1Point" kindref="compound">Point</ref> &gt; &amp;</type>
        <definition>std::vector&lt; Point &gt; &amp; drawer::Graph::getNodes</definition>
        <argsstring>()</argsstring>
        <name>getNodes</name>
        <qualifiedname>drawer::Graph::getNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="249" column="17" bodyfile="src/grafed/core/planargraph.cpp" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1af07bf5a275749cd369e3647729247caf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structdrawer_1_1Point" kindref="compound">Point</ref> &gt; const &amp;</type>
        <definition>std::vector&lt; Point &gt; const  &amp; drawer::Graph::getNodes</definition>
        <argsstring>() const</argsstring>
        <name>getNodes</name>
        <qualifiedname>drawer::Graph::getNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="251" column="23" bodyfile="src/grafed/core/planargraph.cpp" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a82e6c32f4ef0bb2e8d1f53abc899c3d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdrawer_1_1Matrix" kindref="compound">Matrix</ref>&lt; int &gt; &amp;</type>
        <definition>Matrix&lt; int &gt; &amp; drawer::Graph::getAdjacency</definition>
        <argsstring>()</argsstring>
        <name>getAdjacency</name>
        <qualifiedname>drawer::Graph::getAdjacency</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="253" column="12" bodyfile="src/grafed/core/planargraph.cpp" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1ad0f49a3093770867b85682270834c499" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdrawer_1_1Matrix" kindref="compound">Matrix</ref>&lt; int &gt; const &amp;</type>
        <definition>Matrix&lt; int &gt; const  &amp; drawer::Graph::getAdjacency</definition>
        <argsstring>() const</argsstring>
        <name>getAdjacency</name>
        <qualifiedname>drawer::Graph::getAdjacency</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="255" column="18" bodyfile="src/grafed/core/planargraph.cpp" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1aaeb575918fd7ff68661f82884aa7993b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool drawer::Graph::isSame</definition>
        <argsstring>(drawer::Graph const &amp;other) const</argsstring>
        <name>isSame</name>
        <qualifiedname>drawer::Graph::isSame</qualifiedname>
        <param>
          <type><ref refid="classdrawer_1_1Graph" kindref="compound">drawer::Graph</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="257" column="10" bodyfile="src/grafed/core/planargraph.cpp" bodystart="237" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1ac221b0f0475c133c9dbd9017e200735b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool drawer::Graph::isSame</definition>
        <argsstring>(drawer::Graph const &amp;other, std::map&lt; size_t, size_t &gt; &amp;mapping) const</argsstring>
        <name>isSame</name>
        <qualifiedname>drawer::Graph::isSame</qualifiedname>
        <param>
          <type><ref refid="classdrawer_1_1Graph" kindref="compound">drawer::Graph</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>std::map&lt; size_t, size_t &gt; &amp;</type>
          <declname>mapping</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="259" column="10" bodyfile="src/grafed/core/planargraph.cpp" bodystart="243" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a30b1c73451a56a5d2632f1bc1e7428b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::addEdge</definition>
        <argsstring>(int left, int right)</argsstring>
        <name>addEdge</name>
        <qualifiedname>drawer::Graph::addEdge</qualifiedname>
        <param>
          <type>int</type>
          <declname>left</declname>
        </param>
        <param>
          <type>int</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="262" column="10" bodyfile="src/grafed/core/planargraph.cpp" bodystart="273" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1af340d3890fb24450a5023f3f6ca5c1cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::setSide</definition>
        <argsstring>(int pos, int t_side)</argsstring>
        <name>setSide</name>
        <qualifiedname>drawer::Graph::setSide</qualifiedname>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t_side</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="264" column="10" bodyfile="src/grafed/core/planargraph.cpp" bodystart="301" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1ac72125d14c287d249cdcf16c07e084e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double drawer::Graph::xMin</definition>
        <argsstring>() const</argsstring>
        <name>xMin</name>
        <qualifiedname>drawer::Graph::xMin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="266" column="12" bodyfile="src/grafed/core/planargraph.cpp" bodystart="314" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a2ef9702d2b31731ffa53c29195cda817" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double drawer::Graph::xMax</definition>
        <argsstring>() const</argsstring>
        <name>xMax</name>
        <qualifiedname>drawer::Graph::xMax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="268" column="12" bodyfile="src/grafed/core/planargraph.cpp" bodystart="325" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a2c30a89bcd9051461fdd4ce6ce078327" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double drawer::Graph::yMin</definition>
        <argsstring>() const</argsstring>
        <name>yMin</name>
        <qualifiedname>drawer::Graph::yMin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="270" column="12" bodyfile="src/grafed/core/planargraph.cpp" bodystart="336" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a6a38f5d3a52ca762595846c6906f963b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double drawer::Graph::yMax</definition>
        <argsstring>() const</argsstring>
        <name>yMax</name>
        <qualifiedname>drawer::Graph::yMax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="272" column="12" bodyfile="src/grafed/core/planargraph.cpp" bodystart="347" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1affa838f718a8503b98114225562099e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double drawer::Graph::zMin</definition>
        <argsstring>() const</argsstring>
        <name>zMin</name>
        <qualifiedname>drawer::Graph::zMin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="274" column="12" bodyfile="src/grafed/core/planargraph.cpp" bodystart="358" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a69b36b162e2e574b2af2316ba5b81adf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double drawer::Graph::zMax</definition>
        <argsstring>() const</argsstring>
        <name>zMax</name>
        <qualifiedname>drawer::Graph::zMax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="276" column="12" bodyfile="src/grafed/core/planargraph.cpp" bodystart="369" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1ae407102f59962425677b60aa0df6c0da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double drawer::Graph::computeEnergy</definition>
        <argsstring>(bool verbose=false)</argsstring>
        <name>computeEnergy</name>
        <qualifiedname>drawer::Graph::computeEnergy</qualifiedname>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="278" column="12" bodyfile="src/grafed/core/planargraph.cpp" bodystart="380" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a16c05db6c178917b62696167b16c0be6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int drawer::Graph::minimize</definition>
        <argsstring>(int mode=0)</argsstring>
        <name>minimize</name>
        <qualifiedname>drawer::Graph::minimize</qualifiedname>
        <param>
          <type>int</type>
          <declname>mode</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="280" column="9" bodyfile="src/grafed/core/planargraph.cpp" bodystart="389" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a6427d2b4e75a01cc9b138c3504b293d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int drawer::Graph::minimize2D</definition>
        <argsstring>()</argsstring>
        <name>minimize2D</name>
        <qualifiedname>drawer::Graph::minimize2D</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="282" column="9" bodyfile="src/grafed/core/planargraph.cpp" bodystart="476" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a0e5cbd7bd9e5f9cbcc0b4804d7766751" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::project</definition>
        <argsstring>(bool only2DRotation=false, bool keepExternal=false)</argsstring>
        <name>project</name>
        <qualifiedname>drawer::Graph::project</qualifiedname>
        <param>
          <type>bool</type>
          <declname>only2DRotation</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>keepExternal</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="284" column="10" bodyfile="src/grafed/core/planargraph.cpp" bodystart="532" bodyend="612"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1ae9cd83e16eaf1955968ac2c9866b36e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::center</definition>
        <argsstring>()</argsstring>
        <name>center</name>
        <qualifiedname>drawer::Graph::center</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="286" column="10" bodyfile="src/grafed/core/planargraph.cpp" bodystart="614" bodyend="618"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a4d70ab6bc8f8a02c9fa8bc385cfa923c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::centerMargin</definition>
        <argsstring>()</argsstring>
        <name>centerMargin</name>
        <qualifiedname>drawer::Graph::centerMargin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="288" column="10" bodyfile="src/grafed/core/planargraph.cpp" bodystart="620" bodyend="623"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a1bb1e6cb03724941f7c45ed5e8fbb96e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::flip</definition>
        <argsstring>(int axis=-1)</argsstring>
        <name>flip</name>
        <qualifiedname>drawer::Graph::flip</qualifiedname>
        <param>
          <type>int</type>
          <declname>axis</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="290" column="10" bodyfile="src/grafed/core/planargraph.cpp" bodystart="625" bodyend="646"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1ad7a5cea52cf9c62091c111c119169a87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::tryFlip</definition>
        <argsstring>()</argsstring>
        <name>tryFlip</name>
        <qualifiedname>drawer::Graph::tryFlip</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="292" column="10" bodyfile="src/grafed/core/planargraph.cpp" bodystart="648" bodyend="672"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a9187a7715717a52cdbaff83c62ef3137" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::scale</definition>
        <argsstring>(double s)</argsstring>
        <name>scale</name>
        <qualifiedname>drawer::Graph::scale</qualifiedname>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="294" column="10" bodyfile="src/grafed/core/planargraph.cpp" bodystart="674" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a37df2c31177034749aee1e2d54d63ae5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::rotate</definition>
        <argsstring>(double theta)</argsstring>
        <name>rotate</name>
        <qualifiedname>drawer::Graph::rotate</qualifiedname>
        <param>
          <type>double</type>
          <declname>theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="296" column="10" bodyfile="src/grafed/core/planargraph.cpp" bodystart="682" bodyend="686"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a863be6dba6db25b1830c8c494bf9a76b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::move</definition>
        <argsstring>(double x, double y)</argsstring>
        <name>move</name>
        <qualifiedname>drawer::Graph::move</qualifiedname>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="298" column="10" bodyfile="src/grafed/core/planargraph.cpp" bodystart="688" bodyend="694"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a426ca0a428b08761680ca075479b1605" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdrawer_1_1Point" kindref="compound">Point</ref></type>
        <definition>Point drawer::Graph::getCenter</definition>
        <argsstring>() const</argsstring>
        <name>getCenter</name>
        <qualifiedname>drawer::Graph::getCenter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="300" column="11" bodyfile="src/grafed/core/planargraph.cpp" bodystart="696" bodyend="704"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1af0e8e31da6fed359fa80c70ce8d785f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::placeTopLeft</definition>
        <argsstring>()</argsstring>
        <name>placeTopLeft</name>
        <qualifiedname>drawer::Graph::placeTopLeft</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="302" column="10" bodyfile="src/grafed/core/planargraph.cpp" bodystart="706" bodyend="711"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a651d62114380ac2d9f268b67011c25c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::write</definition>
        <argsstring>(std::string const &amp;fileName) const</argsstring>
        <name>write</name>
        <qualifiedname>drawer::Graph::write</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="304" column="10" bodyfile="src/grafed/core/planargraph.cpp" bodystart="824" bodyend="845"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a807d0a554d0512d976acc2aa8de97750" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::addNode</definition>
        <argsstring>(double x, double y)</argsstring>
        <name>addNode</name>
        <qualifiedname>drawer::Graph::addNode</qualifiedname>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="306" column="10" bodyfile="src/grafed/core/planargraph.cpp" bodystart="847" bodyend="858"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a2224798e5d8f8ae189afe0b2a4a70ce3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::deleteNode</definition>
        <argsstring>(size_t i)</argsstring>
        <name>deleteNode</name>
        <qualifiedname>drawer::Graph::deleteNode</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="308" column="10" bodyfile="src/grafed/core/planargraph.cpp" bodystart="860" bodyend="872"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a0ebe19295755facfa9126742a53d8f09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>drawer::Graph::Graph</definition>
        <argsstring>()</argsstring>
        <name>Graph</name>
        <qualifiedname>drawer::Graph::Graph</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="205" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a1c01a9f2016c8262eb2d6719912d8b6a" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>drawer::Graph::Graph</definition>
        <argsstring>(size_t N)</argsstring>
        <name>Graph</name>
        <qualifiedname>drawer::Graph::Graph</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="207" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a76c8f9c8789a176f0976d9d13d36811d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>drawer::Graph::Graph</definition>
        <argsstring>(size_t N, std::vector&lt; std::pair&lt; int, int &gt; &gt; const &amp;init)</argsstring>
        <name>Graph</name>
        <qualifiedname>drawer::Graph::Graph</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>N</declname>
        </param>
        <param>
          <type>std::vector&lt; std::pair&lt; int, int &gt; &gt; const &amp;</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="209" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a79a643863c7d636d4029dc03a4317881" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>drawer::Graph::Graph</definition>
        <argsstring>(Graph const &amp;other)=default</argsstring>
        <name>Graph</name>
        <qualifiedname>drawer::Graph::Graph</qualifiedname>
        <param>
          <type><ref refid="classdrawer_1_1Graph" kindref="compound">Graph</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="211" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1af732843e605e649dcbca17eb18df39dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>drawer::Graph::Graph</definition>
        <argsstring>(Graph &amp;&amp;other)=default</argsstring>
        <name>Graph</name>
        <qualifiedname>drawer::Graph::Graph</qualifiedname>
        <param>
          <type><ref refid="classdrawer_1_1Graph" kindref="compound">Graph</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="212" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1aa53e47cea7d1cb1834a2d6e547d062d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdrawer_1_1Graph" kindref="compound">Graph</ref> &amp;</type>
        <definition>Graph &amp; drawer::Graph::operator=</definition>
        <argsstring>(Graph const &amp;other)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>drawer::Graph::operator=</qualifiedname>
        <param>
          <type><ref refid="classdrawer_1_1Graph" kindref="compound">Graph</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="213" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a731b42401eb5197000417b318d362f6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdrawer_1_1Graph" kindref="compound">Graph</ref> &amp;</type>
        <definition>Graph &amp; drawer::Graph::operator=</definition>
        <argsstring>(Graph &amp;&amp;other)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>drawer::Graph::operator=</qualifiedname>
        <param>
          <type><ref refid="classdrawer_1_1Graph" kindref="compound">Graph</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="214" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a3a087e6d2ec9881d5b09e7e192146765" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>drawer::Graph::~Graph</definition>
        <argsstring>()</argsstring>
        <name>~Graph</name>
        <qualifiedname>drawer::Graph::~Graph</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="216" column="5" bodyfile="src/grafed/gui/planargraph.h" bodystart="216" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1aa2fe1ad3771ccfccba9ad61cf4871562" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::reinit</definition>
        <argsstring>()</argsstring>
        <name>reinit</name>
        <qualifiedname>drawer::Graph::reinit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="220" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a793e49c623bf5ed4ce3e6aa0e7be823d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>drawer::Graph::clear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="222" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a4ce07adcd1641d494ef2049ccd85553b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t drawer::Graph::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>drawer::Graph::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="224" column="12" bodyfile="src/grafed/gui/planargraph.h" bodystart="224" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a98b078a2f101623dccea748856869474" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double &amp; drawer::Graph::getPosition</definition>
        <argsstring>(size_t pos)</argsstring>
        <name>getPosition</name>
        <qualifiedname>drawer::Graph::getPosition</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="229" column="12" bodyfile="src/grafed/gui/planargraph.h" bodystart="229" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a21239850a03d8c4aab785a12dbc7fcd7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double drawer::Graph::getPosition</definition>
        <argsstring>(size_t pos) const</argsstring>
        <name>getPosition</name>
        <qualifiedname>drawer::Graph::getPosition</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="239" column="12" bodyfile="src/grafed/gui/planargraph.h" bodystart="239" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a55a8944a7ec8f2983c4f131b5962bd9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structdrawer_1_1Point" kindref="compound">Point</ref> &gt; &amp;</type>
        <definition>std::vector&lt; Point &gt; &amp; drawer::Graph::getNodes</definition>
        <argsstring>()</argsstring>
        <name>getNodes</name>
        <qualifiedname>drawer::Graph::getNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="249" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1af07bf5a275749cd369e3647729247caf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structdrawer_1_1Point" kindref="compound">Point</ref> &gt; const &amp;</type>
        <definition>std::vector&lt; Point &gt; const  &amp; drawer::Graph::getNodes</definition>
        <argsstring>() const</argsstring>
        <name>getNodes</name>
        <qualifiedname>drawer::Graph::getNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="251" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a82e6c32f4ef0bb2e8d1f53abc899c3d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdrawer_1_1Matrix" kindref="compound">Matrix</ref>&lt; int &gt; &amp;</type>
        <definition>Matrix&lt; int &gt; &amp; drawer::Graph::getAdjacency</definition>
        <argsstring>()</argsstring>
        <name>getAdjacency</name>
        <qualifiedname>drawer::Graph::getAdjacency</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="253" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1ad0f49a3093770867b85682270834c499" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdrawer_1_1Matrix" kindref="compound">Matrix</ref>&lt; int &gt; const &amp;</type>
        <definition>Matrix&lt; int &gt; const  &amp; drawer::Graph::getAdjacency</definition>
        <argsstring>() const</argsstring>
        <name>getAdjacency</name>
        <qualifiedname>drawer::Graph::getAdjacency</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="255" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1aaeb575918fd7ff68661f82884aa7993b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool drawer::Graph::isSame</definition>
        <argsstring>(drawer::Graph const &amp;other) const</argsstring>
        <name>isSame</name>
        <qualifiedname>drawer::Graph::isSame</qualifiedname>
        <param>
          <type><ref refid="classdrawer_1_1Graph" kindref="compound">drawer::Graph</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="257" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1ac221b0f0475c133c9dbd9017e200735b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool drawer::Graph::isSame</definition>
        <argsstring>(drawer::Graph const &amp;other, std::map&lt; size_t, size_t &gt; &amp;mapping) const</argsstring>
        <name>isSame</name>
        <qualifiedname>drawer::Graph::isSame</qualifiedname>
        <param>
          <type><ref refid="classdrawer_1_1Graph" kindref="compound">drawer::Graph</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>std::map&lt; size_t, size_t &gt; &amp;</type>
          <declname>mapping</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="259" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a30b1c73451a56a5d2632f1bc1e7428b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::addEdge</definition>
        <argsstring>(int left, int right)</argsstring>
        <name>addEdge</name>
        <qualifiedname>drawer::Graph::addEdge</qualifiedname>
        <param>
          <type>int</type>
          <declname>left</declname>
        </param>
        <param>
          <type>int</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="262" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1af340d3890fb24450a5023f3f6ca5c1cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::setSide</definition>
        <argsstring>(int pos, int t_side)</argsstring>
        <name>setSide</name>
        <qualifiedname>drawer::Graph::setSide</qualifiedname>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t_side</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="264" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1ac72125d14c287d249cdcf16c07e084e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double drawer::Graph::xMin</definition>
        <argsstring>() const</argsstring>
        <name>xMin</name>
        <qualifiedname>drawer::Graph::xMin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="266" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a2ef9702d2b31731ffa53c29195cda817" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double drawer::Graph::xMax</definition>
        <argsstring>() const</argsstring>
        <name>xMax</name>
        <qualifiedname>drawer::Graph::xMax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="268" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a2c30a89bcd9051461fdd4ce6ce078327" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double drawer::Graph::yMin</definition>
        <argsstring>() const</argsstring>
        <name>yMin</name>
        <qualifiedname>drawer::Graph::yMin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="270" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a6a38f5d3a52ca762595846c6906f963b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double drawer::Graph::yMax</definition>
        <argsstring>() const</argsstring>
        <name>yMax</name>
        <qualifiedname>drawer::Graph::yMax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="272" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1affa838f718a8503b98114225562099e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double drawer::Graph::zMin</definition>
        <argsstring>() const</argsstring>
        <name>zMin</name>
        <qualifiedname>drawer::Graph::zMin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="274" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a69b36b162e2e574b2af2316ba5b81adf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double drawer::Graph::zMax</definition>
        <argsstring>() const</argsstring>
        <name>zMax</name>
        <qualifiedname>drawer::Graph::zMax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="276" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1ae407102f59962425677b60aa0df6c0da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double drawer::Graph::computeEnergy</definition>
        <argsstring>(bool verbose=false)</argsstring>
        <name>computeEnergy</name>
        <qualifiedname>drawer::Graph::computeEnergy</qualifiedname>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="278" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a16c05db6c178917b62696167b16c0be6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int drawer::Graph::minimize</definition>
        <argsstring>(int mode=0)</argsstring>
        <name>minimize</name>
        <qualifiedname>drawer::Graph::minimize</qualifiedname>
        <param>
          <type>int</type>
          <declname>mode</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="280" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a6427d2b4e75a01cc9b138c3504b293d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int drawer::Graph::minimize2D</definition>
        <argsstring>()</argsstring>
        <name>minimize2D</name>
        <qualifiedname>drawer::Graph::minimize2D</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="282" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a0e5cbd7bd9e5f9cbcc0b4804d7766751" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::project</definition>
        <argsstring>(bool only2DRotation=false, bool keepExternal=false)</argsstring>
        <name>project</name>
        <qualifiedname>drawer::Graph::project</qualifiedname>
        <param>
          <type>bool</type>
          <declname>only2DRotation</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>keepExternal</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="284" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1ae9cd83e16eaf1955968ac2c9866b36e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::center</definition>
        <argsstring>()</argsstring>
        <name>center</name>
        <qualifiedname>drawer::Graph::center</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="286" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a4d70ab6bc8f8a02c9fa8bc385cfa923c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::centerMargin</definition>
        <argsstring>()</argsstring>
        <name>centerMargin</name>
        <qualifiedname>drawer::Graph::centerMargin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="288" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a1bb1e6cb03724941f7c45ed5e8fbb96e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::flip</definition>
        <argsstring>(int axis=-1)</argsstring>
        <name>flip</name>
        <qualifiedname>drawer::Graph::flip</qualifiedname>
        <param>
          <type>int</type>
          <declname>axis</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="290" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1ad7a5cea52cf9c62091c111c119169a87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::tryFlip</definition>
        <argsstring>()</argsstring>
        <name>tryFlip</name>
        <qualifiedname>drawer::Graph::tryFlip</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="292" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a9187a7715717a52cdbaff83c62ef3137" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::scale</definition>
        <argsstring>(double s)</argsstring>
        <name>scale</name>
        <qualifiedname>drawer::Graph::scale</qualifiedname>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="294" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a37df2c31177034749aee1e2d54d63ae5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::rotate</definition>
        <argsstring>(double theta)</argsstring>
        <name>rotate</name>
        <qualifiedname>drawer::Graph::rotate</qualifiedname>
        <param>
          <type>double</type>
          <declname>theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="296" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a863be6dba6db25b1830c8c494bf9a76b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::move</definition>
        <argsstring>(double x, double y)</argsstring>
        <name>move</name>
        <qualifiedname>drawer::Graph::move</qualifiedname>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="298" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a426ca0a428b08761680ca075479b1605" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdrawer_1_1Point" kindref="compound">Point</ref></type>
        <definition>Point drawer::Graph::getCenter</definition>
        <argsstring>() const</argsstring>
        <name>getCenter</name>
        <qualifiedname>drawer::Graph::getCenter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="300" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1af0e8e31da6fed359fa80c70ce8d785f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::placeTopLeft</definition>
        <argsstring>()</argsstring>
        <name>placeTopLeft</name>
        <qualifiedname>drawer::Graph::placeTopLeft</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="302" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a651d62114380ac2d9f268b67011c25c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::write</definition>
        <argsstring>(std::string const &amp;fileName) const</argsstring>
        <name>write</name>
        <qualifiedname>drawer::Graph::write</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="304" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a807d0a554d0512d976acc2aa8de97750" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::addNode</definition>
        <argsstring>(double x, double y)</argsstring>
        <name>addNode</name>
        <qualifiedname>drawer::Graph::addNode</qualifiedname>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="306" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a2224798e5d8f8ae189afe0b2a4a70ce3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::deleteNode</definition>
        <argsstring>(size_t i)</argsstring>
        <name>deleteNode</name>
        <qualifiedname>drawer::Graph::deleteNode</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="308" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="classdrawer_1_1Graph_1ab15dd4c29fd1565968fad672bc47b0f1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>gsl_vector *</type>
        <definition>gsl_vector * drawer::Graph::allocGslVector</definition>
        <argsstring>()</argsstring>
        <name>allocGslVector</name>
        <qualifiedname>drawer::Graph::allocGslVector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="313" column="16" bodyfile="src/grafed/core/planargraph.cpp" bodystart="721" bodyend="727"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1ae07375cda079f3d9f7dd15b97ecb450c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t drawer::Graph::getNVar</definition>
        <argsstring>()</argsstring>
        <name>getNVar</name>
        <qualifiedname>drawer::Graph::getNVar</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="315" column="12" bodyfile="src/grafed/core/planargraph.cpp" bodystart="713" bodyend="719"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a4928f1d61b17d814507e411009b199e2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::fillGslVector</definition>
        <argsstring>(gsl_vector *x)</argsstring>
        <name>fillGslVector</name>
        <qualifiedname>drawer::Graph::fillGslVector</qualifiedname>
        <param>
          <type>gsl_vector *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="317" column="10" bodyfile="src/grafed/core/planargraph.cpp" bodystart="729" bodyend="738"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a1ac3126b7651c3a7bb0850d5c7d13d00" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::readGslVector</definition>
        <argsstring>(gsl_vector const *x)</argsstring>
        <name>readGslVector</name>
        <qualifiedname>drawer::Graph::readGslVector</qualifiedname>
        <param>
          <type>gsl_vector const *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="319" column="10" bodyfile="src/grafed/core/planargraph.cpp" bodystart="740" bodyend="749"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1abaeaec7ebdac56bef98800696654cc26" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::initExternalDistance</definition>
        <argsstring>()</argsstring>
        <name>initExternalDistance</name>
        <qualifiedname>drawer::Graph::initExternalDistance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="321" column="10" bodyfile="src/grafed/core/planargraph.cpp" bodystart="751" bodyend="772"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1af86cc4e97b4944aa4a1bc405f1036686" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::gatherExternalNodes</definition>
        <argsstring>()</argsstring>
        <name>gatherExternalNodes</name>
        <qualifiedname>drawer::Graph::gatherExternalNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="325" column="10" bodyfile="src/grafed/core/planargraph.cpp" bodystart="784" bodyend="799"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a44cf57eabe774265eb7848aac95ed4e3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool drawer::Graph::tryPermutation</definition>
        <argsstring>(int order=1, double energy=-1)</argsstring>
        <name>tryPermutation</name>
        <qualifiedname>drawer::Graph::tryPermutation</qualifiedname>
        <param>
          <type>int</type>
          <declname>order</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>double</type>
          <declname>energy</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="327" column="10" bodyfile="src/grafed/core/planargraph.cpp" bodystart="801" bodyend="822"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a37cec4c9c918b284c5cb01e5d07b0869" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::initEnergies</definition>
        <argsstring>()</argsstring>
        <name>initEnergies</name>
        <qualifiedname>drawer::Graph::initEnergies</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="329" column="10" bodyfile="src/grafed/core/planargraph.cpp" bodystart="888" bodyend="1157"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1ab15dd4c29fd1565968fad672bc47b0f1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>gsl_vector *</type>
        <definition>gsl_vector * drawer::Graph::allocGslVector</definition>
        <argsstring>()</argsstring>
        <name>allocGslVector</name>
        <qualifiedname>drawer::Graph::allocGslVector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="313" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1ae07375cda079f3d9f7dd15b97ecb450c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t drawer::Graph::getNVar</definition>
        <argsstring>()</argsstring>
        <name>getNVar</name>
        <qualifiedname>drawer::Graph::getNVar</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="315" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a4928f1d61b17d814507e411009b199e2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::fillGslVector</definition>
        <argsstring>(gsl_vector *x)</argsstring>
        <name>fillGslVector</name>
        <qualifiedname>drawer::Graph::fillGslVector</qualifiedname>
        <param>
          <type>gsl_vector *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="317" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a1ac3126b7651c3a7bb0850d5c7d13d00" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::readGslVector</definition>
        <argsstring>(gsl_vector const *x)</argsstring>
        <name>readGslVector</name>
        <qualifiedname>drawer::Graph::readGslVector</qualifiedname>
        <param>
          <type>gsl_vector const *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="319" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1abaeaec7ebdac56bef98800696654cc26" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::initExternalDistance</definition>
        <argsstring>()</argsstring>
        <name>initExternalDistance</name>
        <qualifiedname>drawer::Graph::initExternalDistance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="321" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1af86cc4e97b4944aa4a1bc405f1036686" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::gatherExternalNodes</definition>
        <argsstring>()</argsstring>
        <name>gatherExternalNodes</name>
        <qualifiedname>drawer::Graph::gatherExternalNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="325" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a44cf57eabe774265eb7848aac95ed4e3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool drawer::Graph::tryPermutation</definition>
        <argsstring>(int order=1, double energy=-1)</argsstring>
        <name>tryPermutation</name>
        <qualifiedname>drawer::Graph::tryPermutation</qualifiedname>
        <param>
          <type>int</type>
          <declname>order</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>double</type>
          <declname>energy</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="327" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a37cec4c9c918b284c5cb01e5d07b0869" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::initEnergies</definition>
        <argsstring>()</argsstring>
        <name>initEnergies</name>
        <qualifiedname>drawer::Graph::initEnergies</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="329" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classdrawer_1_1Graph_1a6d5cf5115734658b76330d818378560b" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawer::Graph::initPoint</definition>
        <argsstring>(Point &amp;p, size_t N)</argsstring>
        <name>initPoint</name>
        <qualifiedname>drawer::Graph::initPoint</qualifiedname>
        <param>
          <type><ref refid="structdrawer_1_1Point" kindref="compound">Point</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/core/planargraph.h" line="323" column="17" bodyfile="src/grafed/core/planargraph.cpp" bodystart="774" bodyend="782"/>
      </memberdef>
      <memberdef kind="function" id="classdrawer_1_1Graph_1a6773529ac25022b64d236fc94fcbcfaf" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void drawer::Graph::initPoint</definition>
        <argsstring>(Point &amp;p, size_t N)</argsstring>
        <name>initPoint</name>
        <qualifiedname>drawer::Graph::initPoint</qualifiedname>
        <param>
          <type><ref refid="structdrawer_1_1Point" kindref="compound">Point</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/planargraph.h" line="323" column="17"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/grafed/core/planargraph.h" line="166" column="1" bodyfile="src/grafed/gui/planargraph.h" bodystart="166" bodyend="345"/>
    <listofallmembers>
      <member refid="classdrawer_1_1Graph_1af440f3dcb9530ea8848235f20fdd3b41" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>_3DFactor</name></member>
      <member refid="classdrawer_1_1Graph_1a139802a805a8ef146d1f0e9ffc010612" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>absAngleFactor</name></member>
      <member refid="classdrawer_1_1Graph_1aa88d447837a74d610fc753a6b546c9f7" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>absAngleMultiple</name></member>
      <member refid="classdrawer_1_1Graph_1a30b1c73451a56a5d2632f1bc1e7428b4" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>addEdge</name></member>
      <member refid="classdrawer_1_1Graph_1a30b1c73451a56a5d2632f1bc1e7428b4" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>addEdge</name></member>
      <member refid="classdrawer_1_1Graph_1a807d0a554d0512d976acc2aa8de97750" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>addNode</name></member>
      <member refid="classdrawer_1_1Graph_1a807d0a554d0512d976acc2aa8de97750" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>addNode</name></member>
      <member refid="classdrawer_1_1Graph_1ab211cc326bec89a341988c74350c6665" prot="private" virt="non-virtual"><scope>drawer::Graph</scope><name>adjacency</name></member>
      <member refid="classdrawer_1_1Graph_1ab15dd4c29fd1565968fad672bc47b0f1" prot="protected" virt="non-virtual"><scope>drawer::Graph</scope><name>allocGslVector</name></member>
      <member refid="classdrawer_1_1Graph_1ab15dd4c29fd1565968fad672bc47b0f1" prot="protected" virt="non-virtual"><scope>drawer::Graph</scope><name>allocGslVector</name></member>
      <member refid="classdrawer_1_1Graph_1af7c3418c4a87de1f5264f3c4817f3ea3" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>angleFactor</name></member>
      <member refid="classdrawer_1_1Graph_1ae9cd83e16eaf1955968ac2c9866b36e4" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>center</name></member>
      <member refid="classdrawer_1_1Graph_1ae9cd83e16eaf1955968ac2c9866b36e4" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>center</name></member>
      <member refid="classdrawer_1_1Graph_1a4d70ab6bc8f8a02c9fa8bc385cfa923c" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>centerMargin</name></member>
      <member refid="classdrawer_1_1Graph_1a4d70ab6bc8f8a02c9fa8bc385cfa923c" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>centerMargin</name></member>
      <member refid="classdrawer_1_1Graph_1a793e49c623bf5ed4ce3e6aa0e7be823d" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>clear</name></member>
      <member refid="classdrawer_1_1Graph_1a793e49c623bf5ed4ce3e6aa0e7be823d" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>clear</name></member>
      <member refid="classdrawer_1_1Graph_1ae407102f59962425677b60aa0df6c0da" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>computeEnergy</name></member>
      <member refid="classdrawer_1_1Graph_1ae407102f59962425677b60aa0df6c0da" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>computeEnergy</name></member>
      <member refid="classdrawer_1_1Graph_1ae6b835e2876c518a5a16538aee6f75d8" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>decouplingDistance</name></member>
      <member refid="classdrawer_1_1Graph_1aa05f5c086ae1ff8a428ae0ffed872285" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>default_3DFactor</name></member>
      <member refid="classdrawer_1_1Graph_1a9e2da6ecfca49c29599f052f11e65846" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>defaultAbsAngleFactor</name></member>
      <member refid="classdrawer_1_1Graph_1ac0a8441ab9a6c08f6e201fcb3abd117d" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>defaultAngleFactor</name></member>
      <member refid="classdrawer_1_1Graph_1a7d181194c399ba9471b35dd3147333ad" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>defaultCrossEnergyValue</name></member>
      <member refid="classdrawer_1_1Graph_1a27c0459e3d9c720083e16a9c37972f19" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>defaultExtensionFactor</name></member>
      <member refid="classdrawer_1_1Graph_1abee956b7dcb78218880fd6bc3e8df3be" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>defaultExternalLayout</name></member>
      <member refid="classdrawer_1_1Graph_1aeed07af86db8f4e543cd8891abe2fdfb" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>defaultExternalRepulsion</name></member>
      <member refid="classdrawer_1_1Graph_1aaa79ad0053827dde5f740a2984baf708" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>defaultLegsRepulsion</name></member>
      <member refid="classdrawer_1_1Graph_1ad49586cae85cdcdd0d0f567a8d04e11b" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>defaultNodeLegsRepulsion</name></member>
      <member refid="classdrawer_1_1Graph_1aef47750069612f8cc87a39ebc341b459" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>defaultNodeSizeFactor</name></member>
      <member refid="classdrawer_1_1Graph_1acdba62f0157ee32860d5726e99e35a94" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>defaultSpecialAnglesValue</name></member>
      <member refid="classdrawer_1_1Graph_1a2224798e5d8f8ae189afe0b2a4a70ce3" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>deleteNode</name></member>
      <member refid="classdrawer_1_1Graph_1a2224798e5d8f8ae189afe0b2a4a70ce3" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>deleteNode</name></member>
      <member refid="classdrawer_1_1Graph_1a98f233430aadc50115068630dd4b0c2b" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>enable3D</name></member>
      <member refid="classdrawer_1_1Graph_1ae5921875989b032ce4a9042b5a65f2ca" prot="private" virt="non-virtual"><scope>drawer::Graph</scope><name>energies</name></member>
      <member refid="classdrawer_1_1Graph_1a753b736259beebb85c382cd1779e18da" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>extensionFactor</name></member>
      <member refid="classdrawer_1_1Graph_1abae14ae424a668ba605a9796728854b9" prot="private" virt="non-virtual"><scope>drawer::Graph</scope><name>external</name></member>
      <member refid="classdrawer_1_1Graph_1a64a79a33a62c90da985ab8003360c82e" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>externalLayout</name></member>
      <member refid="classdrawer_1_1Graph_1ad99dbc5b46f0ef78f09f061122bb4183" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>externalLegSizeRation</name></member>
      <member refid="classdrawer_1_1Graph_1a3e0d1cd5bbd0fe5bf1a0bb4bbaf6c16e" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>externalRepulsion</name></member>
      <member refid="classdrawer_1_1Graph_1af6e93123e9095bc8be1d77b087603f22" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>fileName2DRes</name></member>
      <member refid="classdrawer_1_1Graph_1ae1042a41545b28f9d26a88790f4fab47" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>fileName3DRes</name></member>
      <member refid="classdrawer_1_1Graph_1ac96c85a4a8faaaaa67575b55abe8a76f" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>fileNameBegin</name></member>
      <member refid="classdrawer_1_1Graph_1a7958a5a436f2de53f64f503c73fafce3" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>fileNameProject</name></member>
      <member refid="classdrawer_1_1Graph_1a4928f1d61b17d814507e411009b199e2" prot="protected" virt="non-virtual"><scope>drawer::Graph</scope><name>fillGslVector</name></member>
      <member refid="classdrawer_1_1Graph_1a4928f1d61b17d814507e411009b199e2" prot="protected" virt="non-virtual"><scope>drawer::Graph</scope><name>fillGslVector</name></member>
      <member refid="classdrawer_1_1Graph_1a1bb1e6cb03724941f7c45ed5e8fbb96e" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>flip</name></member>
      <member refid="classdrawer_1_1Graph_1a1bb1e6cb03724941f7c45ed5e8fbb96e" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>flip</name></member>
      <member refid="classdrawer_1_1Graph_1af86cc4e97b4944aa4a1bc405f1036686" prot="protected" virt="non-virtual"><scope>drawer::Graph</scope><name>gatherExternalNodes</name></member>
      <member refid="classdrawer_1_1Graph_1af86cc4e97b4944aa4a1bc405f1036686" prot="protected" virt="non-virtual"><scope>drawer::Graph</scope><name>gatherExternalNodes</name></member>
      <member refid="classdrawer_1_1Graph_1a82e6c32f4ef0bb2e8d1f53abc899c3d1" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>getAdjacency</name></member>
      <member refid="classdrawer_1_1Graph_1ad0f49a3093770867b85682270834c499" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>getAdjacency</name></member>
      <member refid="classdrawer_1_1Graph_1a82e6c32f4ef0bb2e8d1f53abc899c3d1" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>getAdjacency</name></member>
      <member refid="classdrawer_1_1Graph_1ad0f49a3093770867b85682270834c499" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>getAdjacency</name></member>
      <member refid="classdrawer_1_1Graph_1a426ca0a428b08761680ca075479b1605" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>getCenter</name></member>
      <member refid="classdrawer_1_1Graph_1a426ca0a428b08761680ca075479b1605" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>getCenter</name></member>
      <member refid="classdrawer_1_1Graph_1a55a8944a7ec8f2983c4f131b5962bd9a" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>getNodes</name></member>
      <member refid="classdrawer_1_1Graph_1af07bf5a275749cd369e3647729247caf" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>getNodes</name></member>
      <member refid="classdrawer_1_1Graph_1a55a8944a7ec8f2983c4f131b5962bd9a" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>getNodes</name></member>
      <member refid="classdrawer_1_1Graph_1af07bf5a275749cd369e3647729247caf" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>getNodes</name></member>
      <member refid="classdrawer_1_1Graph_1ae07375cda079f3d9f7dd15b97ecb450c" prot="protected" virt="non-virtual"><scope>drawer::Graph</scope><name>getNVar</name></member>
      <member refid="classdrawer_1_1Graph_1ae07375cda079f3d9f7dd15b97ecb450c" prot="protected" virt="non-virtual"><scope>drawer::Graph</scope><name>getNVar</name></member>
      <member refid="classdrawer_1_1Graph_1a98b078a2f101623dccea748856869474" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>getPosition</name></member>
      <member refid="classdrawer_1_1Graph_1a21239850a03d8c4aab785a12dbc7fcd7" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>getPosition</name></member>
      <member refid="classdrawer_1_1Graph_1a98b078a2f101623dccea748856869474" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>getPosition</name></member>
      <member refid="classdrawer_1_1Graph_1a21239850a03d8c4aab785a12dbc7fcd7" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>getPosition</name></member>
      <member refid="classdrawer_1_1Graph_1a0ebe19295755facfa9126742a53d8f09" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>Graph</name></member>
      <member refid="classdrawer_1_1Graph_1a1c01a9f2016c8262eb2d6719912d8b6a" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>Graph</name></member>
      <member refid="classdrawer_1_1Graph_1a76c8f9c8789a176f0976d9d13d36811d" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>Graph</name></member>
      <member refid="classdrawer_1_1Graph_1a79a643863c7d636d4029dc03a4317881" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>Graph</name></member>
      <member refid="classdrawer_1_1Graph_1af732843e605e649dcbca17eb18df39dc" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>Graph</name></member>
      <member refid="classdrawer_1_1Graph_1a0ebe19295755facfa9126742a53d8f09" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>Graph</name></member>
      <member refid="classdrawer_1_1Graph_1a1c01a9f2016c8262eb2d6719912d8b6a" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>Graph</name></member>
      <member refid="classdrawer_1_1Graph_1a76c8f9c8789a176f0976d9d13d36811d" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>Graph</name></member>
      <member refid="classdrawer_1_1Graph_1a79a643863c7d636d4029dc03a4317881" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>Graph</name></member>
      <member refid="classdrawer_1_1Graph_1af732843e605e649dcbca17eb18df39dc" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>Graph</name></member>
      <member refid="classdrawer_1_1Graph_1a37cec4c9c918b284c5cb01e5d07b0869" prot="protected" virt="non-virtual"><scope>drawer::Graph</scope><name>initEnergies</name></member>
      <member refid="classdrawer_1_1Graph_1a37cec4c9c918b284c5cb01e5d07b0869" prot="protected" virt="non-virtual"><scope>drawer::Graph</scope><name>initEnergies</name></member>
      <member refid="classdrawer_1_1Graph_1abaeaec7ebdac56bef98800696654cc26" prot="protected" virt="non-virtual"><scope>drawer::Graph</scope><name>initExternalDistance</name></member>
      <member refid="classdrawer_1_1Graph_1abaeaec7ebdac56bef98800696654cc26" prot="protected" virt="non-virtual"><scope>drawer::Graph</scope><name>initExternalDistance</name></member>
      <member refid="classdrawer_1_1Graph_1a6d5cf5115734658b76330d818378560b" prot="protected" virt="non-virtual"><scope>drawer::Graph</scope><name>initPoint</name></member>
      <member refid="classdrawer_1_1Graph_1a6773529ac25022b64d236fc94fcbcfaf" prot="protected" virt="non-virtual"><scope>drawer::Graph</scope><name>initPoint</name></member>
      <member refid="classdrawer_1_1Graph_1aaeb575918fd7ff68661f82884aa7993b" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>isSame</name></member>
      <member refid="classdrawer_1_1Graph_1ac221b0f0475c133c9dbd9017e200735b" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>isSame</name></member>
      <member refid="classdrawer_1_1Graph_1aaeb575918fd7ff68661f82884aa7993b" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>isSame</name></member>
      <member refid="classdrawer_1_1Graph_1ac221b0f0475c133c9dbd9017e200735b" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>isSame</name></member>
      <member refid="classdrawer_1_1Graph_1aed99f3bea65c997384feeff2a176f72b" prot="private" virt="non-virtual"><scope>drawer::Graph</scope><name>LatexLinker</name></member>
      <member refid="classdrawer_1_1Graph_1aa0b0e6221709121a805faa5d08833a85" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>legsRepulsion</name></member>
      <member refid="classdrawer_1_1Graph_1a20b4c766dc89f0551fbf64016ac7d9dd" prot="private" virt="non-virtual"><scope>drawer::Graph</scope><name>loop</name></member>
      <member refid="classdrawer_1_1Graph_1a16c05db6c178917b62696167b16c0be6" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>minimize</name></member>
      <member refid="classdrawer_1_1Graph_1a16c05db6c178917b62696167b16c0be6" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>minimize</name></member>
      <member refid="classdrawer_1_1Graph_1a6427d2b4e75a01cc9b138c3504b293d9" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>minimize2D</name></member>
      <member refid="classdrawer_1_1Graph_1a6427d2b4e75a01cc9b138c3504b293d9" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>minimize2D</name></member>
      <member refid="classdrawer_1_1Graph_1a863be6dba6db25b1830c8c494bf9a76b" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>move</name></member>
      <member refid="classdrawer_1_1Graph_1a863be6dba6db25b1830c8c494bf9a76b" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>move</name></member>
      <member refid="classdrawer_1_1Graph_1adac8b92bc7baa8dc8bd825a883f91b3f" prot="private" virt="non-virtual"><scope>drawer::Graph</scope><name>nInsertions</name></member>
      <member refid="classdrawer_1_1Graph_1a0766a320fc2c7f8d54a1f7295a6c40a2" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>nodeLegsRepulsion</name></member>
      <member refid="classdrawer_1_1Graph_1ae9f8e97e01d874c0bd5bef0cd4308e23" prot="private" virt="non-virtual"><scope>drawer::Graph</scope><name>nodes</name></member>
      <member refid="classdrawer_1_1Graph_1aad54be2c93a112898067d0a24dd27169" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>nodeSizeFactor</name></member>
      <member refid="classdrawer_1_1Graph_1aa8e64fc2eed72c0ff86a678164eb3957" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>operator&lt;&lt;</name></member>
      <member refid="classdrawer_1_1Graph_1aa8e64fc2eed72c0ff86a678164eb3957" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>operator&lt;&lt;</name></member>
      <member refid="classdrawer_1_1Graph_1aa53e47cea7d1cb1834a2d6e547d062d9" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>operator=</name></member>
      <member refid="classdrawer_1_1Graph_1a731b42401eb5197000417b318d362f6a" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>operator=</name></member>
      <member refid="classdrawer_1_1Graph_1aa53e47cea7d1cb1834a2d6e547d062d9" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>operator=</name></member>
      <member refid="classdrawer_1_1Graph_1a731b42401eb5197000417b318d362f6a" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>operator=</name></member>
      <member refid="classdrawer_1_1Graph_1af0e8e31da6fed359fa80c70ce8d785f5" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>placeTopLeft</name></member>
      <member refid="classdrawer_1_1Graph_1af0e8e31da6fed359fa80c70ce8d785f5" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>placeTopLeft</name></member>
      <member refid="classdrawer_1_1Graph_1a0e5cbd7bd9e5f9cbcc0b4804d7766751" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>project</name></member>
      <member refid="classdrawer_1_1Graph_1a0e5cbd7bd9e5f9cbcc0b4804d7766751" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>project</name></member>
      <member refid="classdrawer_1_1Graph_1a1ac3126b7651c3a7bb0850d5c7d13d00" prot="protected" virt="non-virtual"><scope>drawer::Graph</scope><name>readGslVector</name></member>
      <member refid="classdrawer_1_1Graph_1a1ac3126b7651c3a7bb0850d5c7d13d00" prot="protected" virt="non-virtual"><scope>drawer::Graph</scope><name>readGslVector</name></member>
      <member refid="classdrawer_1_1Graph_1aa2fe1ad3771ccfccba9ad61cf4871562" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>reinit</name></member>
      <member refid="classdrawer_1_1Graph_1aa2fe1ad3771ccfccba9ad61cf4871562" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>reinit</name></member>
      <member refid="classdrawer_1_1Graph_1a37df2c31177034749aee1e2d54d63ae5" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>rotate</name></member>
      <member refid="classdrawer_1_1Graph_1a37df2c31177034749aee1e2d54d63ae5" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>rotate</name></member>
      <member refid="classdrawer_1_1Graph_1a9187a7715717a52cdbaff83c62ef3137" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>scale</name></member>
      <member refid="classdrawer_1_1Graph_1a9187a7715717a52cdbaff83c62ef3137" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>scale</name></member>
      <member refid="classdrawer_1_1Graph_1af340d3890fb24450a5023f3f6ca5c1cc" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>setSide</name></member>
      <member refid="classdrawer_1_1Graph_1af340d3890fb24450a5023f3f6ca5c1cc" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>setSide</name></member>
      <member refid="classdrawer_1_1Graph_1a7c624cc3deba51602cf9764c4e4cf95d" prot="private" virt="non-virtual"><scope>drawer::Graph</scope><name>side</name></member>
      <member refid="classdrawer_1_1Graph_1a4ce07adcd1641d494ef2049ccd85553b" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>size</name></member>
      <member refid="classdrawer_1_1Graph_1a4ce07adcd1641d494ef2049ccd85553b" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>size</name></member>
      <member refid="classdrawer_1_1Graph_1ac76a7d7c137806dcb3c1bf66d6382171" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>specialAnglesValue</name></member>
      <member refid="classdrawer_1_1Graph_1ad7a5cea52cf9c62091c111c119169a87" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>tryFlip</name></member>
      <member refid="classdrawer_1_1Graph_1ad7a5cea52cf9c62091c111c119169a87" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>tryFlip</name></member>
      <member refid="classdrawer_1_1Graph_1a44cf57eabe774265eb7848aac95ed4e3" prot="protected" virt="non-virtual"><scope>drawer::Graph</scope><name>tryPermutation</name></member>
      <member refid="classdrawer_1_1Graph_1a44cf57eabe774265eb7848aac95ed4e3" prot="protected" virt="non-virtual"><scope>drawer::Graph</scope><name>tryPermutation</name></member>
      <member refid="classdrawer_1_1Graph_1a651d62114380ac2d9f268b67011c25c4" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>write</name></member>
      <member refid="classdrawer_1_1Graph_1a651d62114380ac2d9f268b67011c25c4" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>write</name></member>
      <member refid="classdrawer_1_1Graph_1acb832508fde9d7a32b530165477b572a" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>writeResToFile</name></member>
      <member refid="classdrawer_1_1Graph_1a2ef9702d2b31731ffa53c29195cda817" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>xMax</name></member>
      <member refid="classdrawer_1_1Graph_1a2ef9702d2b31731ffa53c29195cda817" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>xMax</name></member>
      <member refid="classdrawer_1_1Graph_1ac72125d14c287d249cdcf16c07e084e4" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>xMin</name></member>
      <member refid="classdrawer_1_1Graph_1ac72125d14c287d249cdcf16c07e084e4" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>xMin</name></member>
      <member refid="classdrawer_1_1Graph_1a6a38f5d3a52ca762595846c6906f963b" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>yMax</name></member>
      <member refid="classdrawer_1_1Graph_1a6a38f5d3a52ca762595846c6906f963b" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>yMax</name></member>
      <member refid="classdrawer_1_1Graph_1a2c30a89bcd9051461fdd4ce6ce078327" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>yMin</name></member>
      <member refid="classdrawer_1_1Graph_1a2c30a89bcd9051461fdd4ce6ce078327" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>yMin</name></member>
      <member refid="classdrawer_1_1Graph_1a69b36b162e2e574b2af2316ba5b81adf" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>zMax</name></member>
      <member refid="classdrawer_1_1Graph_1a69b36b162e2e574b2af2316ba5b81adf" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>zMax</name></member>
      <member refid="classdrawer_1_1Graph_1affa838f718a8503b98114225562099e0" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>zMin</name></member>
      <member refid="classdrawer_1_1Graph_1affa838f718a8503b98114225562099e0" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>zMin</name></member>
      <member refid="classdrawer_1_1Graph_1a3a087e6d2ec9881d5b09e7e192146765" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>~Graph</name></member>
      <member refid="classdrawer_1_1Graph_1a3a087e6d2ec9881d5b09e7e192146765" prot="public" virt="non-virtual"><scope>drawer::Graph</scope><name>~Graph</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
