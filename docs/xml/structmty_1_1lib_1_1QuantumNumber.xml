<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="structmty_1_1lib_1_1QuantumNumber" kind="struct" language="C++" prot="public">
    <compoundname>mty::lib::QuantumNumber</compoundname>
    <includes refid="libjsondata_8h" local="no">libjsondata.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structmty_1_1lib_1_1QuantumNumber_1a225d77644b09a5e1f18a1bba0d2231fe" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string mty::lib::QuantumNumber::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <qualifiedname>mty::lib::QuantumNumber::name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Name of the quantum number. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty-plugins/boltzmann-solver/libjsondata.h" line="98" column="21" bodyfile="src/marty-plugins/boltzmann-solver/libjsondata.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmty_1_1lib_1_1QuantumNumber_1a4758a5987435a26c34d4eed8783750b1" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int mty::lib::QuantumNumber::factor</definition>
        <argsstring></argsstring>
        <name>factor</name>
        <qualifiedname>mty::lib::QuantumNumber::factor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Common denominator for the quantum number of different particles. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty-plugins/boltzmann-solver/libjsondata.h" line="101" column="21" bodyfile="src/marty-plugins/boltzmann-solver/libjsondata.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmty_1_1lib_1_1QuantumNumber_1af7995ef10cd1170f421d98a08410b68a" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, int &gt;</type>
        <definition>std::map&lt;std::string, int&gt; mty::lib::QuantumNumber::particles</definition>
        <argsstring></argsstring>
        <name>particles</name>
        <qualifiedname>mty::lib::QuantumNumber::particles</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Map of particle values (only numerators) for this quantum number. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty-plugins/boltzmann-solver/libjsondata.h" line="104" column="18" bodyfile="src/marty-plugins/boltzmann-solver/libjsondata.h" bodystart="104" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structmty_1_1lib_1_1QuantumNumber_1ab093428140f164db96b7707bd06adcae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmty_1_1lib_1_1Rational" kindref="compound">Rational</ref></type>
        <definition>Rational mty::lib::QuantumNumber::getQuantumNumberValue</definition>
        <argsstring>(std::string const &amp;particleName, bool isParticle=true)</argsstring>
        <name>getQuantumNumberValue</name>
        <qualifiedname>mty::lib::QuantumNumber::getQuantumNumberValue</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>particleName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isParticle</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Returns the quantum number of a <ref refid="structmty_1_1lib_1_1Particle" kindref="compound">Particle</ref>, taking into account its conjugation (minus sign for anti-particles). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>particleName</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmty_1_1lib_1_1Particle" kindref="compound">Particle</ref> name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isParticle</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean (optional, default=true) telling if the particle is <bold>not</bold> an anti-particle.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value of the <bold>particle</bold> for this quantum number. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty-plugins/boltzmann-solver/libjsondata.h" line="116" column="18" bodyfile="src/marty-plugins/boltzmann-solver/libjsondata.cpp" bodystart="7" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="structmty_1_1lib_1_1QuantumNumber_1aeb882a4ee5b9c7c2c5223b038a3e2ba5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmty_1_1lib_1_1Rational" kindref="compound">Rational</ref></type>
        <definition>Rational mty::lib::QuantumNumber::getQuantumNumberValue</definition>
        <argsstring>(Particle const &amp;particle)</argsstring>
        <name>getQuantumNumberValue</name>
        <qualifiedname>mty::lib::QuantumNumber::getQuantumNumberValue</qualifiedname>
        <param>
          <type><ref refid="structmty_1_1lib_1_1Particle" kindref="compound">Particle</ref> const &amp;</type>
          <declname>particle</declname>
        </param>
        <briefdescription>
<para>Returns the quantum number of a <ref refid="structmty_1_1lib_1_1Particle" kindref="compound">Particle</ref>, taking into account its conjugation (minus sign for anti-particles). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>particle</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmty_1_1lib_1_1Particle" kindref="compound">Particle</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value of the <bold>particle</bold> for this quantum number. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty-plugins/boltzmann-solver/libjsondata.h" line="129" column="18" bodyfile="src/marty-plugins/boltzmann-solver/libjsondata.cpp" bodystart="15" bodyend="21"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Container for a quantum number. </para>
    </briefdescription>
    <detaileddescription>
<para>Only integers are stored. To store rational numbers, a common denominator is stored in the <ref refid="structmty_1_1lib_1_1QuantumNumber_1a4758a5987435a26c34d4eed8783750b1" kindref="member">factor</ref> attribute. To have the rational value, use <programlisting><codeline><highlight class="normal">Rational<sp/>number<sp/>=<sp/>quantumNumber.getQuantumNumberValue(particle);</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/>number.num<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>/<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>number.denom<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>number.getValue()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Floating-point</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <location file="src/marty-plugins/boltzmann-solver/libjsondata.h" line="95" column="5" bodyfile="src/marty-plugins/boltzmann-solver/libjsondata.h" bodystart="95" bodyend="132"/>
    <listofallmembers>
      <member refid="structmty_1_1lib_1_1QuantumNumber_1a4758a5987435a26c34d4eed8783750b1" prot="public" virt="non-virtual"><scope>mty::lib::QuantumNumber</scope><name>factor</name></member>
      <member refid="structmty_1_1lib_1_1QuantumNumber_1ab093428140f164db96b7707bd06adcae" prot="public" virt="non-virtual"><scope>mty::lib::QuantumNumber</scope><name>getQuantumNumberValue</name></member>
      <member refid="structmty_1_1lib_1_1QuantumNumber_1aeb882a4ee5b9c7c2c5223b038a3e2ba5" prot="public" virt="non-virtual"><scope>mty::lib::QuantumNumber</scope><name>getQuantumNumberValue</name></member>
      <member refid="structmty_1_1lib_1_1QuantumNumber_1a225d77644b09a5e1f18a1bba0d2231fe" prot="public" virt="non-virtual"><scope>mty::lib::QuantumNumber</scope><name>name</name></member>
      <member refid="structmty_1_1lib_1_1QuantumNumber_1af7995ef10cd1170f421d98a08410b68a" prot="public" virt="non-virtual"><scope>mty::lib::QuantumNumber</scope><name>particles</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
