<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classcsl_1_1LiteralParent" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>csl::LiteralParent</compoundname>
    <basecompoundref refid="classcsl_1_1AbstractParent" prot="public" virt="non-virtual">csl::AbstractParent</basecompoundref>
    <derivedcompoundref refid="classcsl_1_1ConstantParent" prot="public" virt="non-virtual">csl::ConstantParent</derivedcompoundref>
    <derivedcompoundref refid="classcsl_1_1VariableParent" prot="public" virt="non-virtual">csl::VariableParent</derivedcompoundref>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classcsl_1_1LiteralParent_1a605a2b79e8b011a53c735dec77e83908" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool csl::LiteralParent::valued</definition>
        <argsstring></argsstring>
        <name>valued</name>
        <qualifiedname>csl::LiteralParent::valued</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/variableParent.h" line="67" column="10" bodyfile="src/csl/variableParent.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcsl_1_1LiteralParent_1ab3ca9a6269c276c43df3050763d43f31" prot="protected" static="no" mutable="no">
        <type><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref></type>
        <definition>Expr csl::LiteralParent::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <qualifiedname>csl::LiteralParent::value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/variableParent.h" line="69" column="10" bodyfile="src/csl/variableParent.h" bodystart="69" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classcsl_1_1LiteralParent_1a1cebebfcd282781f02378358dad4f790" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>csl::LiteralParent::LiteralParent</definition>
        <argsstring>(std::string const &amp;t_name=&quot;&quot;)</argsstring>
        <name>LiteralParent</name>
        <qualifiedname>csl::LiteralParent::LiteralParent</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>t_name</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/variableParent.h" line="34" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LiteralParent_1a59dd32bd2138c61f4981d655f53022e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>csl::LiteralParent::LiteralParent</definition>
        <argsstring>(std::string const &amp;t_name, long double t_value)</argsstring>
        <name>LiteralParent</name>
        <qualifiedname>csl::LiteralParent::LiteralParent</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>t_name</declname>
        </param>
        <param>
          <type>long double</type>
          <declname>t_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/variableParent.h" line="36" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LiteralParent_1ad94728259f5fb0da5ca6c28d77a073d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>csl::LiteralParent::LiteralParent</definition>
        <argsstring>(std::string const &amp;t_name, Expr const &amp;t_value)</argsstring>
        <name>LiteralParent</name>
        <qualifiedname>csl::LiteralParent::LiteralParent</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>t_name</declname>
        </param>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref> const &amp;</type>
          <declname>t_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/variableParent.h" line="38" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LiteralParent_1a4a41a1a31dd15495c8d7d744c8687f3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>csl::LiteralParent::LiteralParent</definition>
        <argsstring>(const LiteralParent &amp;)=delete</argsstring>
        <name>LiteralParent</name>
        <qualifiedname>csl::LiteralParent::LiteralParent</qualifiedname>
        <param>
          <type>const <ref refid="classcsl_1_1LiteralParent" kindref="compound">LiteralParent</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/variableParent.h" line="41" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LiteralParent_1aa0880842a772a5dd5b9186d266a6b22e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcsl_1_1LiteralParent" kindref="compound">LiteralParent</ref> &amp;</type>
        <definition>LiteralParent &amp; csl::LiteralParent::operator=</definition>
        <argsstring>(const LiteralParent &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>csl::LiteralParent::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classcsl_1_1LiteralParent" kindref="compound">LiteralParent</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/variableParent.h" line="42" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LiteralParent_1afb53997656094d924380db5ebc2a0a47" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>csl::LiteralParent::~LiteralParent</definition>
        <argsstring>()</argsstring>
        <name>~LiteralParent</name>
        <qualifiedname>csl::LiteralParent::~LiteralParent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/variableParent.h" line="44" column="5" bodyfile="src/csl/variableParent.h" bodystart="44" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LiteralParent_1aa4f13d4a38f4e1eb268b4a391d5e0d73" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespacecslParent_1a83f078a60370b86ccd6b113eedff51c2" kindref="member">cslParent::PrimaryType</ref></type>
        <definition>cslParent::PrimaryType csl::LiteralParent::getPrimaryType</definition>
        <argsstring>() const override</argsstring>
        <name>getPrimaryType</name>
        <qualifiedname>csl::LiteralParent::getPrimaryType</qualifiedname>
        <reimplements refid="classcsl_1_1AbstractParent_1a02948077d67665cbe33ba0f8febda859">getPrimaryType</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The primary type of the parent. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/variableParent.h" line="48" column="28" bodyfile="src/csl/variableParent.h" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LiteralParent_1a3761424d118cb70904b9bcc23616d287" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool csl::LiteralParent::isValued</definition>
        <argsstring>() const override</argsstring>
        <name>isValued</name>
        <qualifiedname>csl::LiteralParent::isValued</qualifiedname>
        <reimplements refid="classcsl_1_1AbstractParent_1aa8028cba1cf0ca3e754111e52d629d24">isValued</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/variableParent.h" line="53" column="10" bodyfile="src/csl/variableParent.cpp" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LiteralParent_1a72e9ca6068e6305721c2392fb6b7adf3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref></type>
        <definition>Expr csl::LiteralParent::getValue</definition>
        <argsstring>() const</argsstring>
        <name>getValue</name>
        <qualifiedname>csl::LiteralParent::getValue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/variableParent.h" line="55" column="10" bodyfile="src/csl/variableParent.cpp" bodystart="55" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LiteralParent_1a2cab37a2f24ae5c476a1b084df5d27d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void csl::LiteralParent::setValue</definition>
        <argsstring>(long double t_value)</argsstring>
        <name>setValue</name>
        <qualifiedname>csl::LiteralParent::setValue</qualifiedname>
        <param>
          <type>long double</type>
          <declname>t_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/variableParent.h" line="57" column="10" bodyfile="src/csl/variableParent.cpp" bodystart="62" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LiteralParent_1a02323cd859313679d802b87b20815d40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void csl::LiteralParent::setValue</definition>
        <argsstring>(Expr const &amp;t_value)</argsstring>
        <name>setValue</name>
        <qualifiedname>csl::LiteralParent::setValue</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref> const &amp;</type>
          <declname>t_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/variableParent.h" line="59" column="10" bodyfile="src/csl/variableParent.cpp" bodystart="68" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1LiteralParent_1a128e778cfad90ebaeab4293751b4ae20" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref></type>
        <definition>virtual Expr csl::LiteralParent::generateInstance</definition>
        <argsstring>()=0</argsstring>
        <name>generateInstance</name>
        <qualifiedname>csl::LiteralParent::generateInstance</qualifiedname>
        <reimplementedby refid="classcsl_1_1ConstantParent_1ae0a90048227eb87d5e7cad000ac98c61">generateInstance</reimplementedby>
        <reimplementedby refid="classcsl_1_1VariableParent_1a7d779e996bd61fdca257d3df3e449689">generateInstance</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/variableParent.h" line="61" column="18"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classcsl_1_1LiteralParent_1afbab3cb73ea24c930361fa03760a91af" prot="private" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool csl::LiteralParent::isInstance</definition>
        <argsstring>(Expr_info expr) const =0</argsstring>
        <name>isInstance</name>
        <qualifiedname>csl::LiteralParent::isInstance</qualifiedname>
        <reimplementedby refid="classcsl_1_1ConstantParent_1a269be4464e036f2406fd082227f0d6da">isInstance</reimplementedby>
        <reimplementedby refid="classcsl_1_1VariableParent_1a972a1f84c0a6b2565f42f557527a7bdb">isInstance</reimplementedby>
        <param>
          <type><ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref></type>
          <declname>expr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/variableParent.h" line="64" column="18"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>csl::AbstractParent</label>
        <link refid="classcsl_1_1AbstractParent"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>csl::ConstantParent</label>
        <link refid="classcsl_1_1ConstantParent"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>csl::LiteralParent</label>
        <link refid="classcsl_1_1LiteralParent"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>csl::VariableParent</label>
        <link refid="classcsl_1_1VariableParent"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>std::enable_shared_from_this&lt; AbstractParent &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>csl::AbstractParent</label>
        <link refid="classcsl_1_1AbstractParent"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>csl::Expr</label>
        <link refid="classcsl_1_1Expr"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>csl::LiteralParent</label>
        <link refid="classcsl_1_1LiteralParent"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::enable_shared_from_this&lt; AbstractParent &gt;</label>
      </node>
      <node id="5">
        <label>std::shared_ptr&lt; csl::Abstract &gt;</label>
        <link refid="classstd_1_1shared__ptr"/>
      </node>
    </collaborationgraph>
    <location file="src/csl/variableParent.h" line="31" column="1" bodyfile="src/csl/variableParent.h" bodystart="31" bodyend="70"/>
    <listofallmembers>
      <member refid="classcsl_1_1AbstractParent_1a3a8495f4cc8281410f8aa512c64116cb" prot="public" virt="non-virtual"><scope>csl::LiteralParent</scope><name>AbstractParent</name></member>
      <member refid="classcsl_1_1AbstractParent_1a961d277c9a277163931cb5b45906c83f" prot="public" virt="non-virtual"><scope>csl::LiteralParent</scope><name>AbstractParent</name></member>
      <member refid="classcsl_1_1AbstractParent_1ad88d1dd79f22b67744640124252dc093" prot="public" virt="non-virtual"><scope>csl::LiteralParent</scope><name>AbstractParent</name></member>
      <member refid="classcsl_1_1AbstractParent_1a5548d7f976f21a25d657fc723f7f7132" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>addAntiSymmetry</name></member>
      <member refid="classcsl_1_1AbstractParent_1a3b4d924a14d8427a9618cec74f118a3c" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>addComplexProperty</name></member>
      <member refid="classcsl_1_1AbstractParent_1acce8745989273246a318d207e4c24ee9" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>addContractionProperty</name></member>
      <member refid="classcsl_1_1AbstractParent_1a0660c6be6cd4215181fd1c423ee1219b" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>addHermitianProperty</name></member>
      <member refid="classcsl_1_1AbstractParent_1a00090975a2f3144fd860ad0c41ec6764" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>addSelfContraction</name></member>
      <member refid="classcsl_1_1AbstractParent_1ac691c3943a7bd3eb9c671927e2f91dc7" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>addSpace</name></member>
      <member refid="classcsl_1_1AbstractParent_1a0a4a585286e48ff062c33e96ec09531b" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>addSymmetry</name></member>
      <member refid="classcsl_1_1AbstractParent_1ab6f3ca1657d6b2d3809adf39981e6204" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>addTraceLessNess</name></member>
      <member refid="classcsl_1_1AbstractParent_1ad6ce2c185af4de67ea998efcb48754d5" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>addTransposedProperty</name></member>
      <member refid="classcsl_1_1AbstractParent_1a8369702a8c0a3e9838cc90aefcbb2d6f" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>breakSpace</name></member>
      <member refid="classcsl_1_1AbstractParent_1a177e5244cc4d4b6c1e0600a4f77b523f" prot="protected" virt="non-virtual"><scope>csl::LiteralParent</scope><name>commutable</name></member>
      <member refid="classcsl_1_1AbstractParent_1ab058ceee466fd0997c060e83fc0a4e96" prot="protected" virt="non-virtual"><scope>csl::LiteralParent</scope><name>complexProp</name></member>
      <member refid="classcsl_1_1AbstractParent_1a4df179280a63c410c84f7ea4edbcbee2" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>contraction</name></member>
      <member refid="classcsl_1_1AbstractParent_1a74258391e7eae5a8cd0d629eabfe9ca9" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>dependsExplicitlyOn</name></member>
      <member refid="classcsl_1_1AbstractParent_1adf55413672b9d58875485edd1db4e563" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>dependsOn</name></member>
      <member refid="classcsl_1_1AbstractParent_1ad34cb190892a7b0d29cecf844d836e10" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>disableEvaluation</name></member>
      <member refid="classcsl_1_1AbstractParent_1a0cbecc9ebf1ba07087c4e275cf81a767" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>enableEvaluation</name></member>
      <member refid="classcsl_1_1AbstractParent_1a33ad22590439c20af630fd8046ea5dc8" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>evaluate</name></member>
      <member refid="classcsl_1_1LiteralParent_1a128e778cfad90ebaeab4293751b4ae20" prot="public" virt="pure-virtual"><scope>csl::LiteralParent</scope><name>generateInstance</name></member>
      <member refid="classcsl_1_1AbstractParent_1a9d9f642ad348b33efb70b9f4cf839c1b" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>getBaseName</name></member>
      <member refid="classcsl_1_1AbstractParent_1a4aba499d752eefc81a70cf75938782ca" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>getBrokenParts</name></member>
      <member refid="classcsl_1_1AbstractParent_1af8ae5696856c551204addb95271333bf" prot="public" virt="non-virtual"><scope>csl::LiteralParent</scope><name>getCommutable</name></member>
      <member refid="classcsl_1_1AbstractParent_1ad0029cab35d92a9542c5fb21b6672212" prot="public" virt="non-virtual"><scope>csl::LiteralParent</scope><name>getComplexProp</name></member>
      <member refid="classcsl_1_1AbstractParent_1ab893f8cc881da62b696c9a66abb1bbde" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>getComplexProperty</name></member>
      <member refid="classcsl_1_1AbstractParent_1aa4491a6a8adcf9042aa26a8498a9478b" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>getContractionProperties</name></member>
      <member refid="classcsl_1_1AbstractParent_1ac45297ef35dab1807a158056ec8dfac3" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>getDim</name></member>
      <member refid="classcsl_1_1AbstractParent_1a6c81260a7b64e93b88dea1935b524505" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>getDim</name></member>
      <member refid="classcsl_1_1AbstractParent_1af7cf14c2576a5b337f2e75059a5e002c" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>getEncapsulated</name></member>
      <member refid="classcsl_1_1AbstractParent_1a38fb1b0329110a3caed8e68397c08c51" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>getExactEncapsulated</name></member>
      <member refid="classcsl_1_1AbstractParent_1a77bb772ebe5adafe83a9f504a56e05d0" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>getFieldSpace</name></member>
      <member refid="classcsl_1_1AbstractParent_1ab04c96ff80ee2f0786e59a7eafd71175" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>getFullyAntiSymmetric</name></member>
      <member refid="classcsl_1_1AbstractParent_1af56df7eb3d90348eda50e3d6cc5cd8b0" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>getFullySymmetric</name></member>
      <member refid="classcsl_1_1AbstractParent_1afd68c39bc8ac85924ba25e4a7cac7ff0" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>getHermitianProperty</name></member>
      <member refid="classcsl_1_1AbstractParent_1acacd759bca7fa6e750080a68ea970caa" prot="public" virt="non-virtual"><scope>csl::LiteralParent</scope><name>getLatexName</name></member>
      <member refid="classcsl_1_1AbstractParent_1ab22f321502a8aa481865be3e58bb241d" prot="public" virt="non-virtual"><scope>csl::LiteralParent</scope><name>getName</name></member>
      <member refid="classcsl_1_1AbstractParent_1ad42c4b140d48c9319e0ae47436d040e1" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>getPermutation</name></member>
      <member refid="classcsl_1_1LiteralParent_1aa4f13d4a38f4e1eb268b4a391d5e0d73" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>getPrimaryType</name></member>
      <member refid="classcsl_1_1AbstractParent_1a236d774b05f017f117174469ba848142" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>getSpace</name></member>
      <member refid="classcsl_1_1AbstractParent_1adcc94486a83de9c73de39f78b1eafea4" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>getTensor</name></member>
      <member refid="classcsl_1_1AbstractParent_1affa574a83a5f60cc6fc9bd00f5dca747" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>getTensor</name></member>
      <member refid="classcsl_1_1AbstractParent_1a4f86be4ff457fb18becedcca645b33f4" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>getTrace</name></member>
      <member refid="classcsl_1_1AbstractParent_1a4077314469ddf178e3ec02e524b940c3" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>getTransposedProperty</name></member>
      <member refid="classcsl_1_1AbstractParent_1a6a9115038be74e35dbcd8ecdbba7e5a1" prot="public" virt="pure-virtual"><scope>csl::LiteralParent</scope><name>getType</name></member>
      <member refid="classcsl_1_1LiteralParent_1a72e9ca6068e6305721c2392fb6b7adf3" prot="public" virt="non-virtual"><scope>csl::LiteralParent</scope><name>getValue</name></member>
      <member refid="classcsl_1_1AbstractParent_1a29f41ce934d0e7260c1f8e8fddf70e14" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>hasChainContractionProperty</name></member>
      <member refid="classcsl_1_1AbstractParent_1a7f680e00248dd59a1545488ec4b43c07" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>hasContractionProperty</name></member>
      <member refid="classcsl_1_1AbstractParent_1a4e78f62f3624e0e6070f1da4ddd32943" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>isAnAbbreviation</name></member>
      <member refid="classcsl_1_1LiteralParent_1afbab3cb73ea24c930361fa03760a91af" prot="private" virt="pure-virtual"><scope>csl::LiteralParent</scope><name>isInstance</name></member>
      <member refid="classcsl_1_1AbstractParent_1ad22286f40e94e30a5adffa36314961c3" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>isTraceLessIn</name></member>
      <member refid="classcsl_1_1LiteralParent_1a3761424d118cb70904b9bcc23616d287" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>isValued</name></member>
      <member refid="classcsl_1_1AbstractParent_1a98c857ebf734c15e7afd0d8a13988ac9" prot="protected" virt="non-virtual"><scope>csl::LiteralParent</scope><name>latexName</name></member>
      <member refid="classcsl_1_1LiteralParent_1a1cebebfcd282781f02378358dad4f790" prot="public" virt="non-virtual"><scope>csl::LiteralParent</scope><name>LiteralParent</name></member>
      <member refid="classcsl_1_1LiteralParent_1a59dd32bd2138c61f4981d655f53022e6" prot="public" virt="non-virtual"><scope>csl::LiteralParent</scope><name>LiteralParent</name></member>
      <member refid="classcsl_1_1LiteralParent_1ad94728259f5fb0da5ca6c28d77a073d7" prot="public" virt="non-virtual"><scope>csl::LiteralParent</scope><name>LiteralParent</name></member>
      <member refid="classcsl_1_1LiteralParent_1a4a41a1a31dd15495c8d7d744c8687f3c" prot="public" virt="non-virtual"><scope>csl::LiteralParent</scope><name>LiteralParent</name></member>
      <member refid="classcsl_1_1AbstractParent_1a2ad6b4cd58d9b051a4d62f343bf48c2e" prot="protected" virt="non-virtual"><scope>csl::LiteralParent</scope><name>name</name></member>
      <member refid="classcsl_1_1AbstractParent_1a8a7f7e45ca51c0720c2234d22191d196" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>operator()</name></member>
      <member refid="classcsl_1_1AbstractParent_1a67817d2d364178d734343aa2aaa8c621" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>operator()</name></member>
      <member refid="classcsl_1_1AbstractParent_1aa9298445ca3a71e7af13ff61382c8c0f" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>operator()</name></member>
      <member refid="classcsl_1_1AbstractParent_1a2ef89e977355f65dd919fcb78647df89" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>operator()</name></member>
      <member refid="classcsl_1_1AbstractParent_1ad64079f8317747669f1c8b4c1498d8dc" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>operator()</name></member>
      <member refid="classcsl_1_1AbstractParent_1a4281c853db4878e925bc81440213dae0" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>operator()</name></member>
      <member refid="classcsl_1_1AbstractParent_1aba91946c679a4e6e116f0fc75fc52e1e" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>operator()</name></member>
      <member refid="classcsl_1_1LiteralParent_1aa0880842a772a5dd5b9186d266a6b22e" prot="public" virt="non-virtual"><scope>csl::LiteralParent</scope><name>operator=</name></member>
      <member refid="classcsl_1_1AbstractParent_1a6c633dfff2c6a58ffbf2dae9ca9e07ae" prot="public" virt="pure-virtual"><scope>csl::LiteralParent</scope><name>printDefinition</name></member>
      <member refid="classcsl_1_1AbstractParent_1a789915324d1e21a6be70bbd495ada1cc" prot="public" virt="non-virtual"><scope>csl::LiteralParent</scope><name>printPropDefinition</name></member>
      <member refid="classcsl_1_1AbstractParent_1af03f15bcc4f9dd93cf09739c9ecf4d03" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>removeContractionProperty</name></member>
      <member refid="classcsl_1_1AbstractParent_1a0889b22a387aa58334e6c84aa9e7faf0" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>removeSelfContraction</name></member>
      <member refid="classcsl_1_1AbstractParent_1a0b06d1389b3f3ea597e91548810a3c70" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>removeTraceLessNess</name></member>
      <member refid="classcsl_1_1AbstractParent_1a831ac782bdbba8d40838c6aeffaa53f6" prot="public" virt="non-virtual"><scope>csl::LiteralParent</scope><name>self</name></member>
      <member refid="classcsl_1_1AbstractParent_1aae1bc83d1df8237e6bf50b6b8f732716" prot="public" virt="non-virtual"><scope>csl::LiteralParent</scope><name>setCommutable</name></member>
      <member refid="classcsl_1_1AbstractParent_1affd5de9db43c39e3ec0f1b9e391bcf4a" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>setComplexProperty</name></member>
      <member refid="classcsl_1_1AbstractParent_1a3085594e68b3845f352898e79237ba24" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>setEncapsulated</name></member>
      <member refid="classcsl_1_1AbstractParent_1a11b28bb5fd2bd261e76a3980341ead1d" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>setFieldSpace</name></member>
      <member refid="classcsl_1_1AbstractParent_1a8ecc485d2526a3975b79b0c4a3da21d9" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>setFullyAntiSymmetric</name></member>
      <member refid="classcsl_1_1AbstractParent_1a3e866d96e2600f1f6f723bf62dee42b0" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>setFullySymmetric</name></member>
      <member refid="classcsl_1_1AbstractParent_1af9a8cfc57a0bdf8178489c198755565b" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>setLatexName</name></member>
      <member refid="classcsl_1_1AbstractParent_1a13e6f74e590cbf05dcafb4d9c3df8b9c" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>setName</name></member>
      <member refid="classcsl_1_1AbstractParent_1a79ad3927cad378f4e83055533ea20d46" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>setSymmetry</name></member>
      <member refid="classcsl_1_1AbstractParent_1a5dd9dd3730422db222a395139786ea4b" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>setTensor</name></member>
      <member refid="classcsl_1_1AbstractParent_1a3ec47d729864161605c7cbcc6f726f59" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>setTrace</name></member>
      <member refid="classcsl_1_1LiteralParent_1a2cab37a2f24ae5c476a1b084df5d27d0" prot="public" virt="non-virtual"><scope>csl::LiteralParent</scope><name>setValue</name></member>
      <member refid="classcsl_1_1LiteralParent_1a02323cd859313679d802b87b20815d40" prot="public" virt="non-virtual"><scope>csl::LiteralParent</scope><name>setValue</name></member>
      <member refid="classcsl_1_1AbstractParent_1a74bbbbc2b43939c166feb7d8e7cc8537" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>toggleEvaluation</name></member>
      <member refid="classcsl_1_1LiteralParent_1ab3ca9a6269c276c43df3050763d43f31" prot="protected" virt="non-virtual"><scope>csl::LiteralParent</scope><name>value</name></member>
      <member refid="classcsl_1_1LiteralParent_1a605a2b79e8b011a53c735dec77e83908" prot="protected" virt="non-virtual"><scope>csl::LiteralParent</scope><name>valued</name></member>
      <member refid="classcsl_1_1AbstractParent_1a6d13d559a8d68562b5827073b31b3c1a" prot="public" virt="virtual"><scope>csl::LiteralParent</scope><name>~AbstractParent</name></member>
      <member refid="classcsl_1_1LiteralParent_1afb53997656094d924380db5ebc2a0a47" prot="public" virt="non-virtual"><scope>csl::LiteralParent</scope><name>~LiteralParent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
