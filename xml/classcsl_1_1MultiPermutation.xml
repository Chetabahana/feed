<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classcsl_1_1MultiPermutation" kind="class" language="C++" prot="public">
    <compoundname>csl::MultiPermutation</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcsl_1_1MultiPermutation_1a6667863a7d4924be45d0b3a7c82c6a00" prot="private" static="no" mutable="no">
        <type>std::vector&lt; size_t &gt;</type>
        <definition>std::vector&lt;size_t&gt; csl::MultiPermutation::m_numbers</definition>
        <argsstring></argsstring>
        <name>m_numbers</name>
        <qualifiedname>csl::MultiPermutation::m_numbers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/multipermutation.h" line="39" column="40" bodyfile="src/csl/multipermutation.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcsl_1_1MultiPermutation_1a4a51f3853a0a70034846ec9b52b4471a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; size_t &gt;</type>
        <definition>std::vector&lt;size_t&gt; csl::MultiPermutation::m_numbers_init</definition>
        <argsstring></argsstring>
        <name>m_numbers_init</name>
        <qualifiedname>csl::MultiPermutation::m_numbers_init</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/multipermutation.h" line="40" column="40" bodyfile="src/csl/multipermutation.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcsl_1_1MultiPermutation_1a7ece3598fbc8701da392055303fbd48c" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; size_t &gt;::iterator &gt;</type>
        <definition>std::vector&lt;std::vector&lt;size_t&gt;::iterator&gt; csl::MultiPermutation::m_boundaries</definition>
        <argsstring></argsstring>
        <name>m_boundaries</name>
        <qualifiedname>csl::MultiPermutation::m_boundaries</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/multipermutation.h" line="41" column="18" bodyfile="src/csl/multipermutation.h" bodystart="41" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classcsl_1_1MultiPermutation_1a3ff7b513015e2d9f846d2aeee4fd7706" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>csl::MultiPermutation::MultiPermutation</definition>
        <argsstring>(std::vector&lt; std::vector&lt; size_t &gt; &gt; const &amp;t_numbers)</argsstring>
        <name>MultiPermutation</name>
        <qualifiedname>csl::MultiPermutation::MultiPermutation</qualifiedname>
        <param>
          <type>std::vector&lt; std::vector&lt; size_t &gt; &gt; const &amp;</type>
          <declname>t_numbers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/multipermutation.h" line="11" column="5" bodyfile="src/csl/multipermutation.cpp" bodystart="7" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1MultiPermutation_1ab65aa1262d691a05b35059fb1605415c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>csl::MultiPermutation::MultiPermutation</definition>
        <argsstring>(MultiPermutation const &amp;other)=delete</argsstring>
        <name>MultiPermutation</name>
        <qualifiedname>csl::MultiPermutation::MultiPermutation</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1MultiPermutation" kindref="compound">MultiPermutation</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/multipermutation.h" line="13" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1MultiPermutation_1ac034749dd1c7a6e6c104a0bb0c8f4a1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcsl_1_1MultiPermutation" kindref="compound">MultiPermutation</ref> &amp;</type>
        <definition>MultiPermutation &amp; csl::MultiPermutation::operator=</definition>
        <argsstring>(MultiPermutation const &amp;other)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>csl::MultiPermutation::operator=</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1MultiPermutation" kindref="compound">MultiPermutation</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/multipermutation.h" line="14" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1MultiPermutation_1a526949782763ea8a8c7e79dec12cb02b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>csl::MultiPermutation::MultiPermutation</definition>
        <argsstring>(MultiPermutation &amp;&amp;other)=default</argsstring>
        <name>MultiPermutation</name>
        <qualifiedname>csl::MultiPermutation::MultiPermutation</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1MultiPermutation" kindref="compound">MultiPermutation</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/multipermutation.h" line="16" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1MultiPermutation_1acb599e4418c5f7e4630da6548613b1cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcsl_1_1MultiPermutation" kindref="compound">MultiPermutation</ref> &amp;</type>
        <definition>MultiPermutation &amp; csl::MultiPermutation::operator=</definition>
        <argsstring>(MultiPermutation &amp;&amp;other)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>csl::MultiPermutation::operator=</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1MultiPermutation" kindref="compound">MultiPermutation</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/multipermutation.h" line="17" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1MultiPermutation_1a32f2c3d6099597313eec8007ec61fdb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool csl::MultiPermutation::nextPermutation</definition>
        <argsstring>()</argsstring>
        <name>nextPermutation</name>
        <qualifiedname>csl::MultiPermutation::nextPermutation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/multipermutation.h" line="19" column="10" bodyfile="src/csl/multipermutation.cpp" bodystart="28" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1MultiPermutation_1a0237732e35c4de620e187c20be13d99d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; T &gt;</type>
        <definition>std::vector&lt; T &gt; csl::MultiPermutation::applyPermutation</definition>
        <argsstring>(std::vector&lt; T &gt; const &amp;collection)</argsstring>
        <name>applyPermutation</name>
        <qualifiedname>csl::MultiPermutation::applyPermutation</qualifiedname>
        <param>
          <type>std::vector&lt; T &gt; const &amp;</type>
          <declname>collection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/multipermutation.h" line="22" column="17" bodyfile="src/csl/multipermutation.h" bodystart="22" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1MultiPermutation_1a0f74845a357fbd9230eb78baaf57516e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void csl::MultiPermutation::print</definition>
        <argsstring>() const</argsstring>
        <name>print</name>
        <qualifiedname>csl::MultiPermutation::print</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/multipermutation.h" line="33" column="10" bodyfile="src/csl/multipermutation.cpp" bodystart="37" bodyend="47"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classcsl_1_1MultiPermutation_1a13ed9ac0dde621d43db197bc2d82a943" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void csl::MultiPermutation::load</definition>
        <argsstring>(std::vector&lt; std::vector&lt; size_t &gt; &gt; const &amp;t_numbers)</argsstring>
        <name>load</name>
        <qualifiedname>csl::MultiPermutation::load</qualifiedname>
        <param>
          <type>std::vector&lt; std::vector&lt; size_t &gt; &gt; const &amp;</type>
          <declname>t_numbers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/multipermutation.h" line="36" column="10" bodyfile="src/csl/multipermutation.cpp" bodystart="13" bodyend="26"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/csl/multipermutation.h" line="8" column="1" bodyfile="src/csl/multipermutation.h" bodystart="8" bodyend="42"/>
    <listofallmembers>
      <member refid="classcsl_1_1MultiPermutation_1a0237732e35c4de620e187c20be13d99d" prot="public" virt="non-virtual"><scope>csl::MultiPermutation</scope><name>applyPermutation</name></member>
      <member refid="classcsl_1_1MultiPermutation_1a13ed9ac0dde621d43db197bc2d82a943" prot="private" virt="non-virtual"><scope>csl::MultiPermutation</scope><name>load</name></member>
      <member refid="classcsl_1_1MultiPermutation_1a7ece3598fbc8701da392055303fbd48c" prot="private" virt="non-virtual"><scope>csl::MultiPermutation</scope><name>m_boundaries</name></member>
      <member refid="classcsl_1_1MultiPermutation_1a6667863a7d4924be45d0b3a7c82c6a00" prot="private" virt="non-virtual"><scope>csl::MultiPermutation</scope><name>m_numbers</name></member>
      <member refid="classcsl_1_1MultiPermutation_1a4a51f3853a0a70034846ec9b52b4471a" prot="private" virt="non-virtual"><scope>csl::MultiPermutation</scope><name>m_numbers_init</name></member>
      <member refid="classcsl_1_1MultiPermutation_1a3ff7b513015e2d9f846d2aeee4fd7706" prot="public" virt="non-virtual"><scope>csl::MultiPermutation</scope><name>MultiPermutation</name></member>
      <member refid="classcsl_1_1MultiPermutation_1ab65aa1262d691a05b35059fb1605415c" prot="public" virt="non-virtual"><scope>csl::MultiPermutation</scope><name>MultiPermutation</name></member>
      <member refid="classcsl_1_1MultiPermutation_1a526949782763ea8a8c7e79dec12cb02b" prot="public" virt="non-virtual"><scope>csl::MultiPermutation</scope><name>MultiPermutation</name></member>
      <member refid="classcsl_1_1MultiPermutation_1a32f2c3d6099597313eec8007ec61fdb1" prot="public" virt="non-virtual"><scope>csl::MultiPermutation</scope><name>nextPermutation</name></member>
      <member refid="classcsl_1_1MultiPermutation_1ac034749dd1c7a6e6c104a0bb0c8f4a1f" prot="public" virt="non-virtual"><scope>csl::MultiPermutation</scope><name>operator=</name></member>
      <member refid="classcsl_1_1MultiPermutation_1acb599e4418c5f7e4630da6548613b1cf" prot="public" virt="non-virtual"><scope>csl::MultiPermutation</scope><name>operator=</name></member>
      <member refid="classcsl_1_1MultiPermutation_1a0f74845a357fbd9230eb78baaf57516e" prot="public" virt="non-virtual"><scope>csl::MultiPermutation</scope><name>print</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
