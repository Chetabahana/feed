<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classcsl_1_1Functional" kind="class" language="C++" prot="public">
    <compoundname>csl::Functional</compoundname>
    <innerclass refid="structcsl_1_1Functional_1_1Replacer" prot="public">csl::Functional::Replacer</innerclass>
    <templateparamlist>
      <param>
        <type>class...</type>
        <declname>Args</declname>
        <defname>Args</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcsl_1_1Functional_1a6d4d47ad8d19c56b709d4e8f76a04d8a" prot="private" static="no" mutable="no">
        <type><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref></type>
        <definition>Expr csl::Functional&lt; Args &gt;::init</definition>
        <argsstring></argsstring>
        <name>init</name>
        <qualifiedname>csl::Functional::init</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/functional.h" line="37" column="10" bodyfile="src/csl/functional.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcsl_1_1Functional_1a03623e759ab630b9ed0c77602006036c" prot="private" static="no" mutable="no">
        <type>std::tuple&lt; Args... &gt;</type>
        <definition>std::tuple&lt;Args...&gt; csl::Functional&lt; Args &gt;::args</definition>
        <argsstring></argsstring>
        <name>args</name>
        <qualifiedname>csl::Functional::args</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/functional.h" line="39" column="16" bodyfile="src/csl/functional.h" bodystart="39" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classcsl_1_1Functional_1a2173a2515f9e36094f66a4734fccb895" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>csl::Functional&lt; Args &gt;::Functional</definition>
        <argsstring>(Expr const &amp;t_init, Args... t_args)</argsstring>
        <name>Functional</name>
        <qualifiedname>csl::Functional::Functional</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref> const &amp;</type>
          <declname>t_init</declname>
        </param>
        <param>
          <type>Args...</type>
          <declname>t_args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/functional.h" line="42" column="5" bodyfile="src/csl/functional.h" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1Functional_1abe2ef2c86ae7d818fc4b8b7256c2a2a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>csl::Functional&lt; Args &gt;::~Functional</definition>
        <argsstring>()</argsstring>
        <name>~Functional</name>
        <qualifiedname>csl::Functional::~Functional</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/functional.h" line="47" column="5" bodyfile="src/csl/functional.h" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1Functional_1ab2fdb4ad98ac9d49ee93c453159276ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>T_Args</declname>
            <defname>T_Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref></type>
        <definition>Expr csl::Functional&lt; Args &gt;::operator()</definition>
        <argsstring>(T_Args... t_args)</argsstring>
        <name>operator()</name>
        <qualifiedname>csl::Functional::operator()</qualifiedname>
        <param>
          <type>T_Args...</type>
          <declname>t_args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/functional.h" line="52" column="10" bodyfile="src/csl/functional.h" bodystart="52" bodyend="62"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classcsl_1_1Functional_1a949936ce9499261450d9d094a60a9c3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>T_Args</declname>
            <defname>T_Args</defname>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, Functional&lt; T_Args... &gt; func)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>csl::Functional::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="classcsl_1_1Functional" kindref="compound">Functional</ref>&lt; T_Args... &gt;</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/functional.h" line="65" column="12" bodyfile="src/csl/functional.cpp" bodystart="21" bodyend="27"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/csl/functional.h" line="34" column="1" bodyfile="src/csl/functional.h" bodystart="34" bodyend="85"/>
    <listofallmembers>
      <member refid="classcsl_1_1Functional_1a03623e759ab630b9ed0c77602006036c" prot="private" virt="non-virtual"><scope>csl::Functional</scope><name>args</name></member>
      <member refid="classcsl_1_1Functional_1a2173a2515f9e36094f66a4734fccb895" prot="public" virt="non-virtual"><scope>csl::Functional</scope><name>Functional</name></member>
      <member refid="classcsl_1_1Functional_1a6d4d47ad8d19c56b709d4e8f76a04d8a" prot="private" virt="non-virtual"><scope>csl::Functional</scope><name>init</name></member>
      <member refid="classcsl_1_1Functional_1ab2fdb4ad98ac9d49ee93c453159276ff" prot="public" virt="non-virtual"><scope>csl::Functional</scope><name>operator()</name></member>
      <member refid="classcsl_1_1Functional_1a949936ce9499261450d9d094a60a9c3b" prot="public" virt="non-virtual"><scope>csl::Functional</scope><name>operator&lt;&lt;</name></member>
      <member refid="classcsl_1_1Functional_1abe2ef2c86ae7d818fc4b8b7256c2a2a3" prot="public" virt="non-virtual"><scope>csl::Functional</scope><name>~Functional</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
