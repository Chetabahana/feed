<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="namespacecsl_1_1eval" kind="namespace" language="C++">
    <compoundname>csl::eval</compoundname>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="evaluation_8h_1abf54f455480b0b8204a15cd835b84158" prot="public" static="no">
        <type>std::bitset&lt; 6 &gt;</type>
        <definition>using csl::eval::mode =  std::bitset&lt;6&gt;</definition>
        <argsstring></argsstring>
        <name>mode</name>
        <qualifiedname>csl::eval::mode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/evaluation.h" line="30" column="1" bodyfile="src/csl/evaluation.h" bodystart="30" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="evaluation_8cpp_1a9195dcd46f3de77333550c94c95c3475" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool csl::eval::isContained</definition>
        <argsstring>(mode const &amp;user_mode, mode const &amp;defined_mode)</argsstring>
        <name>isContained</name>
        <qualifiedname>csl::eval::isContained</qualifiedname>
        <param>
          <type>mode const &amp;</type>
          <declname>user_mode</declname>
        </param>
        <param>
          <type>mode const &amp;</type>
          <declname>defined_mode</declname>
        </param>
        <briefdescription>
<para>Tells if the defined mode is contained in the user_mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/evaluation.cpp" line="21" column="6" bodyfile="src/csl/evaluation.cpp" bodystart="21" bodyend="24" declfile="src/csl/evaluation.h" declline="42" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="evaluation_8h_1afd786b48497e3da43ebf6f384300155b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>mode</type>
        <definition>mode csl::eval::base</definition>
        <argsstring>(0)</argsstring>
        <name>base</name>
        <qualifiedname>csl::eval::base</qualifiedname>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/evaluation.h" line="32" column="23" declfile="src/csl/evaluation.h" declline="32" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="evaluation_8h_1a20c22d2d0960a51eb83b86b8bd516b5e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const mode</type>
        <definition>const mode csl::eval::literal</definition>
        <argsstring>(mode(1)|base)</argsstring>
        <name>literal</name>
        <qualifiedname>csl::eval::literal</qualifiedname>
        <param>
          <type>mode(1)|</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/evaluation.h" line="33" column="23" declfile="src/csl/evaluation.h" declline="33" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="evaluation_8h_1a32d55853c43b86599cd47910ef6d7a4f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const mode</type>
        <definition>const mode csl::eval::numerical</definition>
        <argsstring>(mode(2)|base)</argsstring>
        <name>numerical</name>
        <qualifiedname>csl::eval::numerical</qualifiedname>
        <param>
          <type>mode(2)|</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/evaluation.h" line="34" column="23" declfile="src/csl/evaluation.h" declline="34" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="evaluation_8h_1a47f6958e0d724259c8f094ff61fc8cc9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const mode</type>
        <definition>const mode csl::eval::indicial</definition>
        <argsstring>(mode(4)|base)</argsstring>
        <name>indicial</name>
        <qualifiedname>csl::eval::indicial</qualifiedname>
        <param>
          <type>mode(4)|</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/evaluation.h" line="35" column="23" declfile="src/csl/evaluation.h" declline="35" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="evaluation_8h_1aa8f6eae10639efec3d3faf9227c057ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const mode</type>
        <definition>const mode csl::eval::abbreviation</definition>
        <argsstring>(mode(8)|base)</argsstring>
        <name>abbreviation</name>
        <qualifiedname>csl::eval::abbreviation</qualifiedname>
        <param>
          <type>mode(8)|</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/evaluation.h" line="36" column="23" declfile="src/csl/evaluation.h" declline="36" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="evaluation_8h_1a4bfa18e89b433b45d53c99e016146acc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const mode</type>
        <definition>const mode csl::eval::all</definition>
        <argsstring>(base|literal|numerical|indicial|abbreviation)</argsstring>
        <name>all</name>
        <qualifiedname>csl::eval::all</qualifiedname>
        <param>
          <type>base|literal|numerical|indicial|</type>
          <declname>abbreviation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/evaluation.h" line="37" column="19" declfile="src/csl/evaluation.h" declline="37" declcolumn="19"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/csl/evaluation.cpp" line="19" column="1"/>
  </compounddef>
</doxygen>
