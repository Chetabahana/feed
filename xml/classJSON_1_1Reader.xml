<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classJSON_1_1Reader" kind="class" language="C++" prot="public">
    <compoundname>JSON::Reader</compoundname>
    <includes refid="gui_2jsonLoader_8h" local="no">jsonLoader.h</includes>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classJSON_1_1Reader_1ac108d95bd443724ecadeb1aaa8bbd066" prot="private" static="yes" mutable="no">
        <type>std::ofstream</type>
        <definition>static std::ofstream JSON::Reader::fout</definition>
        <argsstring></argsstring>
        <name>fout</name>
        <qualifiedname>JSON::Reader::fout</qualifiedname>
        <briefdescription>
<para>Output stream for the <ref refid="classJSON_1_1Reader" kindref="compound">Reader</ref> when writing in a file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonLoader.h" line="212" column="33" bodyfile="src/grafed/gui/jsonLoader.h" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classJSON_1_1Reader_1a08e91184785e6ea03506a99192b8e0ac" prot="private" static="yes" mutable="no">
        <type>std::ifstream</type>
        <definition>static std::ifstream JSON::Reader::fin</definition>
        <argsstring></argsstring>
        <name>fin</name>
        <qualifiedname>JSON::Reader::fin</qualifiedname>
        <briefdescription>
<para>Input stream for the <ref refid="classJSON_1_1Reader" kindref="compound">Reader</ref> when reading in a file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonLoader.h" line="217" column="33" bodyfile="src/grafed/gui/jsonLoader.h" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classJSON_1_1Reader_1a38fd882dec36b26c9532792b8f1041f1" prot="private" static="yes" mutable="no">
        <type>std::string</type>
        <definition>static std::string JSON::Reader::currentFileName</definition>
        <argsstring></argsstring>
        <name>currentFileName</name>
        <qualifiedname>JSON::Reader::currentFileName</qualifiedname>
        <briefdescription>
<para>Current file name when reading / writing. The only use of this variable is for specifying errors more clearly if there is multiple files. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonLoader.h" line="224" column="31" bodyfile="src/grafed/gui/jsonLoader.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classJSON_1_1Reader_1a6bcc1e0819d56231107bfe775b1acd77" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>const int</type>
        <definition>static constexpr const int JSON::Reader::indentStep</definition>
        <argsstring></argsstring>
        <name>indentStep</name>
        <qualifiedname>JSON::Reader::indentStep</qualifiedname>
        <initializer>= 2</initializer>
        <briefdescription>
<para>Number of spaces for the indentation when writing in a file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonLoader.h" line="229" column="32" bodyfile="src/grafed/gui/jsonLoader.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classJSON_1_1Reader_1a655c6442f3c1dffc5dd7b92ae2889f85" prot="private" static="yes" mutable="no">
        <type>int</type>
        <definition>static int JSON::Reader::indent</definition>
        <argsstring></argsstring>
        <name>indent</name>
        <qualifiedname>JSON::Reader::indent</qualifiedname>
        <briefdescription>
<para>Current level of indentation when writing in a file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonLoader.h" line="234" column="23" bodyfile="src/grafed/gui/jsonLoader.h" bodystart="234" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classJSON_1_1Reader_1ac41796e4eea52e9eae0ff00ac991f8bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>JSON::Reader::Reader</definition>
        <argsstring>()=delete</argsstring>
        <name>Reader</name>
        <qualifiedname>JSON::Reader::Reader</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonLoader.h" line="48" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1ac41796e4eea52e9eae0ff00ac991f8bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>JSON::Reader::Reader</definition>
        <argsstring>()=delete</argsstring>
        <name>Reader</name>
        <qualifiedname>JSON::Reader::Reader</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/jsonparser/jsonLoader.h" line="48" column="5"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classJSON_1_1Reader_1a05fc539b5bfc076f790b9e2226ca4a5e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classJSON_1_1Node" kindref="compound">Node</ref> &gt;</type>
        <definition>static std::unique_ptr&lt; Node &gt; JSON::Reader::loadFromFile</definition>
        <argsstring>(std::string const &amp;nameFile)</argsstring>
        <name>loadFromFile</name>
        <qualifiedname>JSON::Reader::loadFromFile</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>nameFile</declname>
        </param>
        <briefdescription>
<para>Reads a .json file and returns a tree containing all the <ref refid="namespaceJSON" kindref="compound">JSON</ref> structure in ther file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nameFile</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A std::unique_ptr to the root <ref refid="classJSON_1_1Node" kindref="compound">Node</ref> of the tree (transfers ownership to the caller). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonLoader.h" line="58" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1abb273c75a29c1e3fc127b19ecf7551b1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void JSON::Reader::saveToFile</definition>
        <argsstring>(std::string const &amp;nameFile, Node *tree)</argsstring>
        <name>saveToFile</name>
        <qualifiedname>JSON::Reader::saveToFile</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>nameFile</declname>
        </param>
        <param>
          <type><ref refid="classJSON_1_1Node" kindref="compound">Node</ref> *</type>
          <declname>tree</declname>
        </param>
        <briefdescription>
<para>Writes a tree into a file in json format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nameFile</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>A Node*, root <ref refid="classJSON_1_1Node" kindref="compound">Node</ref> of the tree. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonLoader.h" line="65" column="17" bodyfile="src/grafed/gui/jsonLoader.cpp" bodystart="62" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1ac21b4e4a7af57e0fba85ede0db43f370" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void JSON::Reader::saveToFile</definition>
        <argsstring>(std::string const &amp;nameFile, std::unique_ptr&lt; Node &gt; const &amp;tree)</argsstring>
        <name>saveToFile</name>
        <qualifiedname>JSON::Reader::saveToFile</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>nameFile</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classJSON_1_1Node" kindref="compound">Node</ref> &gt; const &amp;</type>
          <declname>tree</declname>
        </param>
        <briefdescription>
<para>Writes a tree into a file in json format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nameFile</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>A std::unique_ptr&lt;Node&gt;, root <ref refid="classJSON_1_1Node" kindref="compound">Node</ref> of the tree. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonLoader.h" line="72" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1a05fc539b5bfc076f790b9e2226ca4a5e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classJSON_1_1Node" kindref="compound">Node</ref> &gt;</type>
        <definition>static std::unique_ptr&lt; Node &gt; JSON::Reader::loadFromFile</definition>
        <argsstring>(std::string const &amp;nameFile)</argsstring>
        <name>loadFromFile</name>
        <qualifiedname>JSON::Reader::loadFromFile</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>nameFile</declname>
        </param>
        <briefdescription>
<para>Reads a .json file and returns a tree containing all the <ref refid="namespaceJSON" kindref="compound">JSON</ref> structure in ther file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nameFile</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A std::unique_ptr to the root <ref refid="classJSON_1_1Node" kindref="compound">Node</ref> of the tree (transfers ownership to the caller). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/jsonparser/jsonLoader.h" line="58" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1a1db0fda99ee4c1b11344c99a41b7b12e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void JSON::Reader::saveToFile</definition>
        <argsstring>(std::string const &amp;nameFile, Node *tree)</argsstring>
        <name>saveToFile</name>
        <qualifiedname>JSON::Reader::saveToFile</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>nameFile</declname>
        </param>
        <param>
          <type><ref refid="classJSON_1_1Node" kindref="compound">Node</ref> *</type>
          <declname>tree</declname>
        </param>
        <briefdescription>
<para>Writes a tree into a file in json format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nameFile</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>A Node*, root <ref refid="classJSON_1_1Node" kindref="compound">Node</ref> of the tree. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/jsonparser/jsonLoader.h" line="65" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1ac21b4e4a7af57e0fba85ede0db43f370" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void JSON::Reader::saveToFile</definition>
        <argsstring>(std::string const &amp;nameFile, std::unique_ptr&lt; Node &gt; const &amp;tree)</argsstring>
        <name>saveToFile</name>
        <qualifiedname>JSON::Reader::saveToFile</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>nameFile</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classJSON_1_1Node" kindref="compound">Node</ref> &gt; const &amp;</type>
          <declname>tree</declname>
        </param>
        <briefdescription>
<para>Writes a tree into a file in json format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nameFile</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>A std::unique_ptr&lt;Node&gt;, root <ref refid="classJSON_1_1Node" kindref="compound">Node</ref> of the tree. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/jsonparser/jsonLoader.h" line="72" column="17"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classJSON_1_1Reader_1a3d13d95947199d8a3eb4264fa62e4817" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int JSON::Reader::readLineNumber</definition>
        <argsstring>()</argsstring>
        <name>readLineNumber</name>
        <qualifiedname>JSON::Reader::readLineNumber</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current line when reading in a file. Useful to spot errors. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonLoader.h" line="79" column="16" bodyfile="src/grafed/gui/jsonLoader.cpp" bodystart="84" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1ab0eceb590d810c537cbaf23ca0aceef2" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void JSON::Reader::readingError</definition>
        <argsstring>(std::string const &amp;error)</argsstring>
        <name>readingError</name>
        <qualifiedname>JSON::Reader::readingError</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Displays an error message when a bad structure is encountered in reading. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>Specification of the error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonLoader.h" line="86" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1aa44ebd24a987eacb73c847a70bb9f674" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void JSON::Reader::unexpectedEndOfFile</definition>
        <argsstring>()</argsstring>
        <name>unexpectedEndOfFile</name>
        <qualifiedname>JSON::Reader::unexpectedEndOfFile</qualifiedname>
        <briefdescription>
<para>Raises an error when the end of the file is reached while reading. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonLoader.h" line="92" column="17" bodyfile="src/grafed/gui/jsonLoader.cpp" bodystart="110" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1a336247211cdef541e7fd78c91b2b4377" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char JSON::Reader::readSeparator</definition>
        <argsstring>()</argsstring>
        <name>readSeparator</name>
        <qualifiedname>JSON::Reader::readSeparator</qualifiedname>
        <briefdescription>
<para>Reads the next separator (&apos;{&apos;, &apos;[&apos;, &apos;:&apos;, ...) ignoring spaces and line break. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The separator char. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonLoader.h" line="99" column="17" bodyfile="src/grafed/gui/jsonLoader.cpp" bodystart="115" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1a003ee49f7b2faed2e3c45357dafde953" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>string JSON::Reader::readString</definition>
        <argsstring>()</argsstring>
        <name>readString</name>
        <qualifiedname>JSON::Reader::readString</qualifiedname>
        <briefdescription>
<para>Reads a string (parameter between &quot;&quot;) once the first " has been read. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The string between &quot;&quot;. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonLoader.h" line="106" column="24" bodyfile="src/grafed/gui/jsonLoader.cpp" bodystart="126" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1a2765e3e2d070205bcb2c593d01b58022" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>static char JSON::Reader::readBoolean</definition>
        <argsstring>(char first, std::string &amp;strBool)</argsstring>
        <name>readBoolean</name>
        <qualifiedname>JSON::Reader::readBoolean</qualifiedname>
        <param>
          <type>char</type>
          <declname>first</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>strBool</declname>
        </param>
        <briefdescription>
<para>Reads a boolean, &quot;treu&quot; of &quot;false&quot;, into a std::string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>first</parametername>
</parameternamelist>
<parameterdescription>
<para>First character of the boolean (read by the caller). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>strNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>String that is modified to store the boolean. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The separator encountered after the number. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonLoader.h" line="114" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1aefcdb28698f2fb82c331f8445c1d6f46" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>static char JSON::Reader::readNumber</definition>
        <argsstring>(char first, std::string &amp;strNumber)</argsstring>
        <name>readNumber</name>
        <qualifiedname>JSON::Reader::readNumber</qualifiedname>
        <param>
          <type>char</type>
          <declname>first</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>strNumber</declname>
        </param>
        <briefdescription>
<para>Reads a number, double or int, into a std::string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>first</parametername>
</parameternamelist>
<parameterdescription>
<para>First character of the number (read by the caller). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>strNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>String that is modified to store the number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The separator encountered after the number. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonLoader.h" line="122" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1a97d7d101d13703c73ff0bef0ff84e618" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>static char JSON::Reader::getBooleanLeaf</definition>
        <argsstring>(Child &amp;child, std::string const &amp;specifier, char first)</argsstring>
        <name>getBooleanLeaf</name>
        <qualifiedname>JSON::Reader::getBooleanLeaf</qualifiedname>
        <param>
          <type><ref refid="namespaceJSON_1aa2d900be83ed3ec15cee06b3acc05b96" kindref="member">Child</ref> &amp;</type>
          <declname>child</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>specifier</declname>
        </param>
        <param>
          <type>char</type>
          <declname>first</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classJSON_1_1Leaf" kindref="compound">Leaf</ref> that stores a boolean read in the file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>unique_ptr to an <ref refid="classJSON_1_1Object" kindref="compound">Object</ref> modified during the call to point to the <ref refid="classJSON_1_1Leaf" kindref="compound">Leaf</ref> created. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>specifier</parametername>
</parameternamelist>
<parameterdescription>
<para>The specifier of the <ref refid="classJSON_1_1Leaf" kindref="compound">Leaf</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first</parametername>
</parameternamelist>
<parameterdescription>
<para>The first character of the boolean read by the caller. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The separator encountered after the boolean. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonLoader.h" line="133" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1abba2812bb84eb6dc24be366b9acf775c" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>static char JSON::Reader::getNumberLeaf</definition>
        <argsstring>(Child &amp;child, std::string const &amp;specifier, char first)</argsstring>
        <name>getNumberLeaf</name>
        <qualifiedname>JSON::Reader::getNumberLeaf</qualifiedname>
        <param>
          <type><ref refid="namespaceJSON_1aa2d900be83ed3ec15cee06b3acc05b96" kindref="member">Child</ref> &amp;</type>
          <declname>child</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>specifier</declname>
        </param>
        <param>
          <type>char</type>
          <declname>first</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classJSON_1_1Leaf" kindref="compound">Leaf</ref> that stores a number read in the file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>unique_ptr to an <ref refid="classJSON_1_1Object" kindref="compound">Object</ref> modified during the call to point to the <ref refid="classJSON_1_1Leaf" kindref="compound">Leaf</ref> created. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>specifier</parametername>
</parameternamelist>
<parameterdescription>
<para>The specifier of the <ref refid="classJSON_1_1Leaf" kindref="compound">Leaf</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first</parametername>
</parameternamelist>
<parameterdescription>
<para>The first character of the number read by the caller. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The separator encountered after the number. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonLoader.h" line="144" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1ac078ec6e8b53410e02a3c8f1e96c2e88" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>static char JSON::Reader::getStringLeaf</definition>
        <argsstring>(Child &amp;child, std::string const &amp;specifier)</argsstring>
        <name>getStringLeaf</name>
        <qualifiedname>JSON::Reader::getStringLeaf</qualifiedname>
        <param>
          <type><ref refid="namespaceJSON_1aa2d900be83ed3ec15cee06b3acc05b96" kindref="member">Child</ref> &amp;</type>
          <declname>child</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>specifier</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classJSON_1_1Leaf" kindref="compound">Leaf</ref> that stores a string read in the file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>unique_ptr to an <ref refid="classJSON_1_1Object" kindref="compound">Object</ref> modified during the call to point to the <ref refid="classJSON_1_1Leaf" kindref="compound">Leaf</ref> created. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>specifier</parametername>
</parameternamelist>
<parameterdescription>
<para>The specifier of the <ref refid="classJSON_1_1Leaf" kindref="compound">Leaf</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The separator encountered after the string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonLoader.h" line="153" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1ac0b12f506bb17f42921b96d2c752a7d3" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>static char JSON::Reader::readNode</definition>
        <argsstring>(Child &amp;child, std::string const &amp;specifier)</argsstring>
        <name>readNode</name>
        <qualifiedname>JSON::Reader::readNode</qualifiedname>
        <param>
          <type><ref refid="namespaceJSON_1aa2d900be83ed3ec15cee06b3acc05b96" kindref="member">Child</ref> &amp;</type>
          <declname>child</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>specifier</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classJSON_1_1Node" kindref="compound">Node</ref> read in the file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>unique_ptr to an <ref refid="classJSON_1_1Object" kindref="compound">Object</ref> modified during the call to point to the <ref refid="classJSON_1_1Node" kindref="compound">Node</ref> created. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>specifier</parametername>
</parameternamelist>
<parameterdescription>
<para>The specifier of the <ref refid="classJSON_1_1Leaf" kindref="compound">Leaf</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The separator encountered after the <ref refid="classJSON_1_1Node" kindref="compound">Node</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonLoader.h" line="162" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1a295be64db69d6bab98dacaaa5a719429" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>static char JSON::Reader::readList</definition>
        <argsstring>(Child &amp;child, std::string const &amp;specifier)</argsstring>
        <name>readList</name>
        <qualifiedname>JSON::Reader::readList</qualifiedname>
        <param>
          <type><ref refid="namespaceJSON_1aa2d900be83ed3ec15cee06b3acc05b96" kindref="member">Child</ref> &amp;</type>
          <declname>child</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>specifier</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classJSON_1_1List" kindref="compound">List</ref> read in the file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>unique_ptr to an <ref refid="classJSON_1_1Object" kindref="compound">Object</ref> modified during the call to point to the <ref refid="classJSON_1_1List" kindref="compound">List</ref> created. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>specifier</parametername>
</parameternamelist>
<parameterdescription>
<para>The specifier of the <ref refid="classJSON_1_1Leaf" kindref="compound">Leaf</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The separator encountered after the <ref refid="classJSON_1_1List" kindref="compound">List</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonLoader.h" line="171" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1aed4ab72435f1e73ead14fc4972e59df9" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>static char JSON::Reader::readObject</definition>
        <argsstring>(Child &amp;child, std::string const &amp;specifier)</argsstring>
        <name>readObject</name>
        <qualifiedname>JSON::Reader::readObject</qualifiedname>
        <param>
          <type><ref refid="namespaceJSON_1aa2d900be83ed3ec15cee06b3acc05b96" kindref="member">Child</ref> &amp;</type>
          <declname>child</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>specifier</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classJSON_1_1Object" kindref="compound">Object</ref> read in the file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>unique_ptr to an <ref refid="classJSON_1_1Object" kindref="compound">Object</ref> modified during the call to point to the <ref refid="classJSON_1_1Object" kindref="compound">Object</ref> created. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>specifier</parametername>
</parameternamelist>
<parameterdescription>
<para>The specifier of the <ref refid="classJSON_1_1Leaf" kindref="compound">Leaf</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The separator encountered after the <ref refid="classJSON_1_1Object" kindref="compound">Object</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonLoader.h" line="180" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1a019b7a274ccfe7277296b53f1c93a5b5" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>static char JSON::Reader::readObject</definition>
        <argsstring>(Child &amp;child, std::string const &amp;specifier, char first)</argsstring>
        <name>readObject</name>
        <qualifiedname>JSON::Reader::readObject</qualifiedname>
        <param>
          <type><ref refid="namespaceJSON_1aa2d900be83ed3ec15cee06b3acc05b96" kindref="member">Child</ref> &amp;</type>
          <declname>child</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>specifier</declname>
        </param>
        <param>
          <type>char</type>
          <declname>first</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classJSON_1_1Object" kindref="compound">Object</ref> read in the file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>unique_ptr to an <ref refid="classJSON_1_1Object" kindref="compound">Object</ref> modified during the call to point to the <ref refid="classJSON_1_1Object" kindref="compound">Object</ref> created. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>specifier</parametername>
</parameternamelist>
<parameterdescription>
<para>The specifier of the <ref refid="classJSON_1_1Leaf" kindref="compound">Leaf</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first</parametername>
</parameternamelist>
<parameterdescription>
<para>The first character of the <ref refid="classJSON_1_1Object" kindref="compound">Object</ref> read by the caller. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The separator encountered after the <ref refid="classJSON_1_1Object" kindref="compound">Object</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonLoader.h" line="191" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1aa3e0dd790caaf2e102a5f453fd2e202c" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void JSON::Reader::writeToFileWithIndent</definition>
        <argsstring>(std::string const &amp;str)</argsstring>
        <name>writeToFileWithIndent</name>
        <qualifiedname>JSON::Reader::writeToFileWithIndent</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Writes a string into the file (when writing) with the indentation level <bold>indent</bold>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>String to write in the file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonLoader.h" line="198" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1ae46753974f7b873f18e11aa112b1b00a" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void JSON::Reader::writeToFile</definition>
        <argsstring>(Object *object, bool writeSpec=true)</argsstring>
        <name>writeToFile</name>
        <qualifiedname>JSON::Reader::writeToFile</qualifiedname>
        <param>
          <type><ref refid="classJSON_1_1Object" kindref="compound">Object</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSpec</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Writes an <ref refid="classJSON_1_1Object" kindref="compound">Object</ref> into the file (when writing). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="classJSON_1_1Object" kindref="compound">Object</ref> to write. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>writeSpec</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean specifying if the specifier must be written or not (must not be written for elements of a <ref refid="classJSON_1_1List" kindref="compound">List</ref>). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/gui/jsonLoader.h" line="206" column="17" bodyfile="src/grafed/gui/jsonLoader.cpp" bodystart="294" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1a27f1b5f45d2fe2215384152d852c2c7c" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int JSON::Reader::readLineNumber</definition>
        <argsstring>()</argsstring>
        <name>readLineNumber</name>
        <qualifiedname>JSON::Reader::readLineNumber</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current line when reading in a file. Useful to spot errors. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/jsonparser/jsonLoader.h" line="79" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1ab0eceb590d810c537cbaf23ca0aceef2" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void JSON::Reader::readingError</definition>
        <argsstring>(std::string const &amp;error)</argsstring>
        <name>readingError</name>
        <qualifiedname>JSON::Reader::readingError</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Displays an error message when a bad structure is encountered in reading. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>Specification of the error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/jsonparser/jsonLoader.h" line="86" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1a90724ccdbdf68cde084fc1956735ade7" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void JSON::Reader::unexpectedEndOfFile</definition>
        <argsstring>()</argsstring>
        <name>unexpectedEndOfFile</name>
        <qualifiedname>JSON::Reader::unexpectedEndOfFile</qualifiedname>
        <briefdescription>
<para>Raises an error when the end of the file is reached while reading. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/jsonparser/jsonLoader.h" line="92" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1af1309ac64142d19e643b22410850dd1e" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>static char JSON::Reader::readSeparator</definition>
        <argsstring>()</argsstring>
        <name>readSeparator</name>
        <qualifiedname>JSON::Reader::readSeparator</qualifiedname>
        <briefdescription>
<para>Reads the next separator (&apos;{&apos;, &apos;[&apos;, &apos;:&apos;, ...) ignoring spaces and line break. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The separator char. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/jsonparser/jsonLoader.h" line="99" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1a5dc37f24f26e3e886533ef3e4723e594" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string JSON::Reader::readString</definition>
        <argsstring>()</argsstring>
        <name>readString</name>
        <qualifiedname>JSON::Reader::readString</qualifiedname>
        <briefdescription>
<para>Reads a string (parameter between &quot;&quot;) once the first " has been read. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The string between &quot;&quot;. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/jsonparser/jsonLoader.h" line="106" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1a2765e3e2d070205bcb2c593d01b58022" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>static char JSON::Reader::readBoolean</definition>
        <argsstring>(char first, std::string &amp;strBool)</argsstring>
        <name>readBoolean</name>
        <qualifiedname>JSON::Reader::readBoolean</qualifiedname>
        <param>
          <type>char</type>
          <declname>first</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>strBool</declname>
        </param>
        <briefdescription>
<para>Reads a boolean, &quot;treu&quot; of &quot;false&quot;, into a std::string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>first</parametername>
</parameternamelist>
<parameterdescription>
<para>First character of the boolean (read by the caller). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>strNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>String that is modified to store the boolean. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The separator encountered after the number. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/jsonparser/jsonLoader.h" line="114" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1aefcdb28698f2fb82c331f8445c1d6f46" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>static char JSON::Reader::readNumber</definition>
        <argsstring>(char first, std::string &amp;strNumber)</argsstring>
        <name>readNumber</name>
        <qualifiedname>JSON::Reader::readNumber</qualifiedname>
        <param>
          <type>char</type>
          <declname>first</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>strNumber</declname>
        </param>
        <briefdescription>
<para>Reads a number, double or int, into a std::string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>first</parametername>
</parameternamelist>
<parameterdescription>
<para>First character of the number (read by the caller). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>strNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>String that is modified to store the number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The separator encountered after the number. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/jsonparser/jsonLoader.h" line="122" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1a97d7d101d13703c73ff0bef0ff84e618" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>static char JSON::Reader::getBooleanLeaf</definition>
        <argsstring>(Child &amp;child, std::string const &amp;specifier, char first)</argsstring>
        <name>getBooleanLeaf</name>
        <qualifiedname>JSON::Reader::getBooleanLeaf</qualifiedname>
        <param>
          <type><ref refid="namespaceJSON_1aa2d900be83ed3ec15cee06b3acc05b96" kindref="member">Child</ref> &amp;</type>
          <declname>child</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>specifier</declname>
        </param>
        <param>
          <type>char</type>
          <declname>first</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classJSON_1_1Leaf" kindref="compound">Leaf</ref> that stores a boolean read in the file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>unique_ptr to an <ref refid="classJSON_1_1Object" kindref="compound">Object</ref> modified during the call to point to the <ref refid="classJSON_1_1Leaf" kindref="compound">Leaf</ref> created. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>specifier</parametername>
</parameternamelist>
<parameterdescription>
<para>The specifier of the <ref refid="classJSON_1_1Leaf" kindref="compound">Leaf</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first</parametername>
</parameternamelist>
<parameterdescription>
<para>The first character of the boolean read by the caller. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The separator encountered after the boolean. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/jsonparser/jsonLoader.h" line="133" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1abba2812bb84eb6dc24be366b9acf775c" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>static char JSON::Reader::getNumberLeaf</definition>
        <argsstring>(Child &amp;child, std::string const &amp;specifier, char first)</argsstring>
        <name>getNumberLeaf</name>
        <qualifiedname>JSON::Reader::getNumberLeaf</qualifiedname>
        <param>
          <type><ref refid="namespaceJSON_1aa2d900be83ed3ec15cee06b3acc05b96" kindref="member">Child</ref> &amp;</type>
          <declname>child</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>specifier</declname>
        </param>
        <param>
          <type>char</type>
          <declname>first</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classJSON_1_1Leaf" kindref="compound">Leaf</ref> that stores a number read in the file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>unique_ptr to an <ref refid="classJSON_1_1Object" kindref="compound">Object</ref> modified during the call to point to the <ref refid="classJSON_1_1Leaf" kindref="compound">Leaf</ref> created. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>specifier</parametername>
</parameternamelist>
<parameterdescription>
<para>The specifier of the <ref refid="classJSON_1_1Leaf" kindref="compound">Leaf</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first</parametername>
</parameternamelist>
<parameterdescription>
<para>The first character of the number read by the caller. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The separator encountered after the number. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/jsonparser/jsonLoader.h" line="144" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1ac078ec6e8b53410e02a3c8f1e96c2e88" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>static char JSON::Reader::getStringLeaf</definition>
        <argsstring>(Child &amp;child, std::string const &amp;specifier)</argsstring>
        <name>getStringLeaf</name>
        <qualifiedname>JSON::Reader::getStringLeaf</qualifiedname>
        <param>
          <type><ref refid="namespaceJSON_1aa2d900be83ed3ec15cee06b3acc05b96" kindref="member">Child</ref> &amp;</type>
          <declname>child</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>specifier</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classJSON_1_1Leaf" kindref="compound">Leaf</ref> that stores a string read in the file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>unique_ptr to an <ref refid="classJSON_1_1Object" kindref="compound">Object</ref> modified during the call to point to the <ref refid="classJSON_1_1Leaf" kindref="compound">Leaf</ref> created. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>specifier</parametername>
</parameternamelist>
<parameterdescription>
<para>The specifier of the <ref refid="classJSON_1_1Leaf" kindref="compound">Leaf</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The separator encountered after the string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/jsonparser/jsonLoader.h" line="153" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1ac0b12f506bb17f42921b96d2c752a7d3" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>static char JSON::Reader::readNode</definition>
        <argsstring>(Child &amp;child, std::string const &amp;specifier)</argsstring>
        <name>readNode</name>
        <qualifiedname>JSON::Reader::readNode</qualifiedname>
        <param>
          <type><ref refid="namespaceJSON_1aa2d900be83ed3ec15cee06b3acc05b96" kindref="member">Child</ref> &amp;</type>
          <declname>child</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>specifier</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classJSON_1_1Node" kindref="compound">Node</ref> read in the file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>unique_ptr to an <ref refid="classJSON_1_1Object" kindref="compound">Object</ref> modified during the call to point to the <ref refid="classJSON_1_1Node" kindref="compound">Node</ref> created. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>specifier</parametername>
</parameternamelist>
<parameterdescription>
<para>The specifier of the <ref refid="classJSON_1_1Leaf" kindref="compound">Leaf</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The separator encountered after the <ref refid="classJSON_1_1Node" kindref="compound">Node</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/jsonparser/jsonLoader.h" line="162" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1a295be64db69d6bab98dacaaa5a719429" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>static char JSON::Reader::readList</definition>
        <argsstring>(Child &amp;child, std::string const &amp;specifier)</argsstring>
        <name>readList</name>
        <qualifiedname>JSON::Reader::readList</qualifiedname>
        <param>
          <type><ref refid="namespaceJSON_1aa2d900be83ed3ec15cee06b3acc05b96" kindref="member">Child</ref> &amp;</type>
          <declname>child</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>specifier</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classJSON_1_1List" kindref="compound">List</ref> read in the file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>unique_ptr to an <ref refid="classJSON_1_1Object" kindref="compound">Object</ref> modified during the call to point to the <ref refid="classJSON_1_1List" kindref="compound">List</ref> created. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>specifier</parametername>
</parameternamelist>
<parameterdescription>
<para>The specifier of the <ref refid="classJSON_1_1Leaf" kindref="compound">Leaf</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The separator encountered after the <ref refid="classJSON_1_1List" kindref="compound">List</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/jsonparser/jsonLoader.h" line="171" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1aed4ab72435f1e73ead14fc4972e59df9" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>static char JSON::Reader::readObject</definition>
        <argsstring>(Child &amp;child, std::string const &amp;specifier)</argsstring>
        <name>readObject</name>
        <qualifiedname>JSON::Reader::readObject</qualifiedname>
        <param>
          <type><ref refid="namespaceJSON_1aa2d900be83ed3ec15cee06b3acc05b96" kindref="member">Child</ref> &amp;</type>
          <declname>child</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>specifier</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classJSON_1_1Object" kindref="compound">Object</ref> read in the file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>unique_ptr to an <ref refid="classJSON_1_1Object" kindref="compound">Object</ref> modified during the call to point to the <ref refid="classJSON_1_1Object" kindref="compound">Object</ref> created. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>specifier</parametername>
</parameternamelist>
<parameterdescription>
<para>The specifier of the <ref refid="classJSON_1_1Leaf" kindref="compound">Leaf</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The separator encountered after the <ref refid="classJSON_1_1Object" kindref="compound">Object</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/jsonparser/jsonLoader.h" line="180" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1a019b7a274ccfe7277296b53f1c93a5b5" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>static char JSON::Reader::readObject</definition>
        <argsstring>(Child &amp;child, std::string const &amp;specifier, char first)</argsstring>
        <name>readObject</name>
        <qualifiedname>JSON::Reader::readObject</qualifiedname>
        <param>
          <type><ref refid="namespaceJSON_1aa2d900be83ed3ec15cee06b3acc05b96" kindref="member">Child</ref> &amp;</type>
          <declname>child</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>specifier</declname>
        </param>
        <param>
          <type>char</type>
          <declname>first</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classJSON_1_1Object" kindref="compound">Object</ref> read in the file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>unique_ptr to an <ref refid="classJSON_1_1Object" kindref="compound">Object</ref> modified during the call to point to the <ref refid="classJSON_1_1Object" kindref="compound">Object</ref> created. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>specifier</parametername>
</parameternamelist>
<parameterdescription>
<para>The specifier of the <ref refid="classJSON_1_1Leaf" kindref="compound">Leaf</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first</parametername>
</parameternamelist>
<parameterdescription>
<para>The first character of the <ref refid="classJSON_1_1Object" kindref="compound">Object</ref> read by the caller. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The separator encountered after the <ref refid="classJSON_1_1Object" kindref="compound">Object</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/jsonparser/jsonLoader.h" line="191" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1aa3e0dd790caaf2e102a5f453fd2e202c" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void JSON::Reader::writeToFileWithIndent</definition>
        <argsstring>(std::string const &amp;str)</argsstring>
        <name>writeToFileWithIndent</name>
        <qualifiedname>JSON::Reader::writeToFileWithIndent</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Writes a string into the file (when writing) with the indentation level <bold>indent</bold>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>String to write in the file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/jsonparser/jsonLoader.h" line="198" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classJSON_1_1Reader_1ae5264e3f8ad1c3cfe19ddea7f33856f6" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void JSON::Reader::writeToFile</definition>
        <argsstring>(Object *object, bool writeSpec=true)</argsstring>
        <name>writeToFile</name>
        <qualifiedname>JSON::Reader::writeToFile</qualifiedname>
        <param>
          <type><ref refid="classJSON_1_1Object" kindref="compound">Object</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSpec</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Writes an <ref refid="classJSON_1_1Object" kindref="compound">Object</ref> into the file (when writing). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="classJSON_1_1Object" kindref="compound">Object</ref> to write. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>writeSpec</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean specifying if the specifier must be written or not (must not be written for elements of a <ref refid="classJSON_1_1List" kindref="compound">List</ref>). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/grafed/jsonparser/jsonLoader.h" line="206" column="17"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Class for static purpose only (i.e. not constructible) that handles reading .json files. Once a file read, it can also rewrite its data in a file. However this functionnality is not used for now. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/grafed/gui/jsonLoader.h" line="45" column="1" bodyfile="src/grafed/jsonparser/jsonLoader.h" bodystart="45" bodyend="235"/>
    <listofallmembers>
      <member refid="classJSON_1_1Reader_1a38fd882dec36b26c9532792b8f1041f1" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>currentFileName</name></member>
      <member refid="classJSON_1_1Reader_1a08e91184785e6ea03506a99192b8e0ac" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>fin</name></member>
      <member refid="classJSON_1_1Reader_1ac108d95bd443724ecadeb1aaa8bbd066" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>fout</name></member>
      <member refid="classJSON_1_1Reader_1a97d7d101d13703c73ff0bef0ff84e618" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>getBooleanLeaf</name></member>
      <member refid="classJSON_1_1Reader_1a97d7d101d13703c73ff0bef0ff84e618" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>getBooleanLeaf</name></member>
      <member refid="classJSON_1_1Reader_1abba2812bb84eb6dc24be366b9acf775c" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>getNumberLeaf</name></member>
      <member refid="classJSON_1_1Reader_1abba2812bb84eb6dc24be366b9acf775c" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>getNumberLeaf</name></member>
      <member refid="classJSON_1_1Reader_1ac078ec6e8b53410e02a3c8f1e96c2e88" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>getStringLeaf</name></member>
      <member refid="classJSON_1_1Reader_1ac078ec6e8b53410e02a3c8f1e96c2e88" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>getStringLeaf</name></member>
      <member refid="classJSON_1_1Reader_1a655c6442f3c1dffc5dd7b92ae2889f85" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>indent</name></member>
      <member refid="classJSON_1_1Reader_1a6bcc1e0819d56231107bfe775b1acd77" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>indentStep</name></member>
      <member refid="classJSON_1_1Reader_1a05fc539b5bfc076f790b9e2226ca4a5e" prot="public" virt="non-virtual"><scope>JSON::Reader</scope><name>loadFromFile</name></member>
      <member refid="classJSON_1_1Reader_1a05fc539b5bfc076f790b9e2226ca4a5e" prot="public" virt="non-virtual"><scope>JSON::Reader</scope><name>loadFromFile</name></member>
      <member refid="classJSON_1_1Reader_1a2765e3e2d070205bcb2c593d01b58022" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>readBoolean</name></member>
      <member refid="classJSON_1_1Reader_1a2765e3e2d070205bcb2c593d01b58022" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>readBoolean</name></member>
      <member refid="classJSON_1_1Reader_1ac41796e4eea52e9eae0ff00ac991f8bc" prot="public" virt="non-virtual"><scope>JSON::Reader</scope><name>Reader</name></member>
      <member refid="classJSON_1_1Reader_1ac41796e4eea52e9eae0ff00ac991f8bc" prot="public" virt="non-virtual"><scope>JSON::Reader</scope><name>Reader</name></member>
      <member refid="classJSON_1_1Reader_1ab0eceb590d810c537cbaf23ca0aceef2" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>readingError</name></member>
      <member refid="classJSON_1_1Reader_1ab0eceb590d810c537cbaf23ca0aceef2" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>readingError</name></member>
      <member refid="classJSON_1_1Reader_1a3d13d95947199d8a3eb4264fa62e4817" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>readLineNumber</name></member>
      <member refid="classJSON_1_1Reader_1a27f1b5f45d2fe2215384152d852c2c7c" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>readLineNumber</name></member>
      <member refid="classJSON_1_1Reader_1a295be64db69d6bab98dacaaa5a719429" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>readList</name></member>
      <member refid="classJSON_1_1Reader_1a295be64db69d6bab98dacaaa5a719429" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>readList</name></member>
      <member refid="classJSON_1_1Reader_1ac0b12f506bb17f42921b96d2c752a7d3" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>readNode</name></member>
      <member refid="classJSON_1_1Reader_1ac0b12f506bb17f42921b96d2c752a7d3" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>readNode</name></member>
      <member refid="classJSON_1_1Reader_1aefcdb28698f2fb82c331f8445c1d6f46" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>readNumber</name></member>
      <member refid="classJSON_1_1Reader_1aefcdb28698f2fb82c331f8445c1d6f46" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>readNumber</name></member>
      <member refid="classJSON_1_1Reader_1aed4ab72435f1e73ead14fc4972e59df9" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>readObject</name></member>
      <member refid="classJSON_1_1Reader_1a019b7a274ccfe7277296b53f1c93a5b5" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>readObject</name></member>
      <member refid="classJSON_1_1Reader_1aed4ab72435f1e73ead14fc4972e59df9" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>readObject</name></member>
      <member refid="classJSON_1_1Reader_1a019b7a274ccfe7277296b53f1c93a5b5" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>readObject</name></member>
      <member refid="classJSON_1_1Reader_1a336247211cdef541e7fd78c91b2b4377" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>readSeparator</name></member>
      <member refid="classJSON_1_1Reader_1af1309ac64142d19e643b22410850dd1e" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>readSeparator</name></member>
      <member refid="classJSON_1_1Reader_1a003ee49f7b2faed2e3c45357dafde953" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>readString</name></member>
      <member refid="classJSON_1_1Reader_1a5dc37f24f26e3e886533ef3e4723e594" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>readString</name></member>
      <member refid="classJSON_1_1Reader_1abb273c75a29c1e3fc127b19ecf7551b1" prot="public" virt="non-virtual"><scope>JSON::Reader</scope><name>saveToFile</name></member>
      <member refid="classJSON_1_1Reader_1ac21b4e4a7af57e0fba85ede0db43f370" prot="public" virt="non-virtual"><scope>JSON::Reader</scope><name>saveToFile</name></member>
      <member refid="classJSON_1_1Reader_1a1db0fda99ee4c1b11344c99a41b7b12e" prot="public" virt="non-virtual"><scope>JSON::Reader</scope><name>saveToFile</name></member>
      <member refid="classJSON_1_1Reader_1ac21b4e4a7af57e0fba85ede0db43f370" prot="public" virt="non-virtual"><scope>JSON::Reader</scope><name>saveToFile</name></member>
      <member refid="classJSON_1_1Reader_1aa44ebd24a987eacb73c847a70bb9f674" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>unexpectedEndOfFile</name></member>
      <member refid="classJSON_1_1Reader_1a90724ccdbdf68cde084fc1956735ade7" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>unexpectedEndOfFile</name></member>
      <member refid="classJSON_1_1Reader_1ae46753974f7b873f18e11aa112b1b00a" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>writeToFile</name></member>
      <member refid="classJSON_1_1Reader_1ae5264e3f8ad1c3cfe19ddea7f33856f6" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>writeToFile</name></member>
      <member refid="classJSON_1_1Reader_1aa3e0dd790caaf2e102a5f453fd2e202c" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>writeToFileWithIndent</name></member>
      <member refid="classJSON_1_1Reader_1aa3e0dd790caaf2e102a5f453fd2e202c" prot="private" virt="non-virtual"><scope>JSON::Reader</scope><name>writeToFileWithIndent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
