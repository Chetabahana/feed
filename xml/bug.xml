<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="bug" kind="page">
    <compoundname>bug</compoundname>
    <title>Bug List</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><variablelist>
<varlistentry><term>Member <ref refid="namespacecsl_1a5bd20a50cf5cdfbe57e3b896b980179e" kindref="member">csl::factorial</ref>  (int n)</term></varlistentry>
<listitem><para><anchor id="bug_1_bug000003"/>The factorial function returns a double for now and so is quickly out of bounds for exact numerical precision. The limit is between 20! and 25!.  </para>
</listitem>
<varlistentry><term>Member <ref refid="literal_8h_1ab8e84e9b107229a13eec6315f4b1f9e4" kindref="member">CSL_INF</ref>  </term></varlistentry>
<listitem><para><anchor id="bug_1_bug000002"/> Will not work for many cases, in particular log(0)!=\bCSL_INF. Not yet implemented.  </para>
</listitem>
<varlistentry><term>File <ref refid="indicial_8h" kindref="compound">indicial.h</ref>  </term></varlistentry>
<listitem><para><anchor id="bug_1_bug000001"/>For now setting an object fully symmetric or antisymmetric will cause bug if all the indices don&apos;t lie in the same space. When taking permutations, indices from different spaces will be exchanged and the tensor will not accept them. </para>
</listitem>
</variablelist>
</para>
    </detaileddescription>
    <location file="bug"/>
  </compounddef>
</doxygen>
