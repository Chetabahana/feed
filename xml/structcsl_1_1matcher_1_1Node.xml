<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="structcsl_1_1matcher_1_1Node" kind="struct" language="C++" prot="public">
    <compoundname>csl::matcher::Node</compoundname>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="structcsl_1_1matcher_1_1Node_1a3cc28c1f62ac1224ac90172bd5c3e544" prot="public" static="no" strong="yes">
        <type></type>
        <name>ExprType</name>
        <qualifiedname>csl::matcher::Node::ExprType</qualifiedname>
        <enumvalue id="structcsl_1_1matcher_1_1Node_1a3cc28c1f62ac1224ac90172bd5c3e544aa0ec87054b5e5b7847d0d8780a01a3d5" prot="public">
          <name>Sum</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structcsl_1_1matcher_1_1Node_1a3cc28c1f62ac1224ac90172bd5c3e544a362a33c23b08e4a32a4ec53fbb82cccd" prot="public">
          <name>Prod</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="49" column="5" bodyfile="src/csl/patternMatch.h" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="typedef" id="structcsl_1_1matcher_1_1Node_1a65e86a18d8125b2a3d8080684f5171c8" prot="public" static="no">
        <type>std::vector&lt; <ref refid="structcsl_1_1matcher_1_1Node" kindref="compound">Node</ref> * &gt;</type>
        <definition>using csl::matcher::Node::Container =  std::vector&lt;Node *&gt;</definition>
        <argsstring></argsstring>
        <name>Container</name>
        <qualifiedname>csl::matcher::Node::Container</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="45" column="5" bodyfile="src/csl/patternMatch.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structcsl_1_1matcher_1_1Node_1add999184412cb6317eb521a582129b56" prot="public" static="no">
        <type>Container::iterator</type>
        <definition>using csl::matcher::Node::iterator =  Container::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <qualifiedname>csl::matcher::Node::iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="46" column="5" bodyfile="src/csl/patternMatch.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structcsl_1_1matcher_1_1Node_1a47fb0c193e8ed4b3083631c5850283bf" prot="public" static="no">
        <type>Container::const_iterator</type>
        <definition>using csl::matcher::Node::const_iterator =  Container::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <qualifiedname>csl::matcher::Node::const_iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="47" column="5" bodyfile="src/csl/patternMatch.h" bodystart="47" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structcsl_1_1matcher_1_1Node_1ae4d66c440614930b0cdb44c589013523" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool csl::matcher::Node::useDifferedStart</definition>
        <argsstring></argsstring>
        <name>useDifferedStart</name>
        <qualifiedname>csl::matcher::Node::useDifferedStart</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="51" column="26" bodyfile="src/csl/patternMatch.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcsl_1_1matcher_1_1Node_1a5500553a506fba2ae5a2114abff58849" prot="public" static="yes" mutable="no">
        <type>size_t</type>
        <definition>size_t csl::matcher::Node::maxLeaf</definition>
        <argsstring></argsstring>
        <name>maxLeaf</name>
        <qualifiedname>csl::matcher::Node::maxLeaf</qualifiedname>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="52" column="26" bodyfile="src/csl/patternMatch.h" bodystart="52" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structcsl_1_1matcher_1_1Node_1a4751fb4b8b87715de6a6f6a639221629" prot="public" static="no" mutable="no">
        <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref></type>
        <definition>csl::Expr csl::matcher::Node::expr</definition>
        <argsstring></argsstring>
        <name>expr</name>
        <qualifiedname>csl::matcher::Node::expr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="118" column="25" bodyfile="src/csl/patternMatch.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcsl_1_1matcher_1_1Node_1a79f73fb2e3c52a266b3b2cd4ae25c82a" prot="public" static="no" mutable="no">
        <type><ref refid="structcsl_1_1matcher_1_1Node" kindref="compound">Node</ref> *</type>
        <definition>Node* csl::matcher::Node::parent</definition>
        <argsstring></argsstring>
        <name>parent</name>
        <qualifiedname>csl::matcher::Node::parent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="119" column="24" bodyfile="src/csl/patternMatch.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcsl_1_1matcher_1_1Node_1ac7f02286f2abb9484c5291c62ca729b1" prot="public" static="no" mutable="no">
        <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref></type>
        <definition>csl::Expr csl::matcher::Node::abbreviation</definition>
        <argsstring></argsstring>
        <name>abbreviation</name>
        <qualifiedname>csl::matcher::Node::abbreviation</qualifiedname>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="120" column="25" bodyfile="src/csl/patternMatch.h" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="variable" id="structcsl_1_1matcher_1_1Node_1a7b434c3fb10883daf9c03ad22e94164b" prot="public" static="no" mutable="no">
        <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref></type>
        <definition>csl::Expr csl::matcher::Node::chainAbbreviation</definition>
        <argsstring></argsstring>
        <name>chainAbbreviation</name>
        <qualifiedname>csl::matcher::Node::chainAbbreviation</qualifiedname>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="121" column="25" bodyfile="src/csl/patternMatch.h" bodystart="121" bodyend="121"/>
      </memberdef>
      <memberdef kind="variable" id="structcsl_1_1matcher_1_1Node_1a5958cdbf95dd6adbc009c4329e84fa2d" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t csl::matcher::Node::nOccurences</definition>
        <argsstring></argsstring>
        <name>nOccurences</name>
        <qualifiedname>csl::matcher::Node::nOccurences</qualifiedname>
        <initializer>{1}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="122" column="25" bodyfile="src/csl/patternMatch.h" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="variable" id="structcsl_1_1matcher_1_1Node_1a1b4ed85007eadb7b7d424090eb321525" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structcsl_1_1matcher_1_1Node" kindref="compound">Node</ref> * &gt;</type>
        <definition>std::vector&lt;Node *&gt; csl::matcher::Node::children</definition>
        <argsstring></argsstring>
        <name>children</name>
        <qualifiedname>csl::matcher::Node::children</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="123" column="17" bodyfile="src/csl/patternMatch.h" bodystart="123" bodyend="123"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structcsl_1_1matcher_1_1Node_1a8dbc76b7b0014ee28f7dcbfe39f7e21f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool csl::matcher::Node::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <qualifiedname>csl::matcher::Node::empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="54" column="10" bodyfile="src/csl/patternMatch.h" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="structcsl_1_1matcher_1_1Node_1a6a730f355d2785111ee60eb294381e27" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto csl::matcher::Node::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>csl::matcher::Node::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="58" column="10" bodyfile="src/csl/patternMatch.h" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="structcsl_1_1matcher_1_1Node_1a484c81f0acf074976b640f4a032b5a6a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto csl::matcher::Node::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <qualifiedname>csl::matcher::Node::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="62" column="10" bodyfile="src/csl/patternMatch.h" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="structcsl_1_1matcher_1_1Node_1a009addf0f4255b4c1996fd1659626d29" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto csl::matcher::Node::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <qualifiedname>csl::matcher::Node::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="66" column="10" bodyfile="src/csl/patternMatch.h" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="structcsl_1_1matcher_1_1Node_1acb63058474654fd82e025b473bdfc219" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto csl::matcher::Node::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <qualifiedname>csl::matcher::Node::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="70" column="10" bodyfile="src/csl/patternMatch.h" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="structcsl_1_1matcher_1_1Node_1aaed51fd574d18cc028d44ef1bc1da108" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto csl::matcher::Node::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <qualifiedname>csl::matcher::Node::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="74" column="10" bodyfile="src/csl/patternMatch.h" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="structcsl_1_1matcher_1_1Node_1ad8f839c0e8ef1463c255c4ba33e7d6f4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool csl::matcher::Node::isRoot</definition>
        <argsstring>() const</argsstring>
        <name>isRoot</name>
        <qualifiedname>csl::matcher::Node::isRoot</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="79" column="10" bodyfile="src/csl/patternMatch.h" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structcsl_1_1matcher_1_1Node_1a92f3e5cc20d2b4fc265ced649fd3dffe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Node::isAbbreviated</definition>
        <argsstring>() const</argsstring>
        <name>isAbbreviated</name>
        <qualifiedname>csl::matcher::Node::isAbbreviated</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="83" column="10" bodyfile="src/csl/patternMatch.cpp" bodystart="199" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="structcsl_1_1matcher_1_1Node_1a185954c64df09d7c7afd15b23bb3c28a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>iterator</type>
        <definition>Node::iterator Node::insert</definition>
        <argsstring>(csl::Expr const &amp;t_expr)</argsstring>
        <name>insert</name>
        <qualifiedname>csl::matcher::Node::insert</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> const &amp;</type>
          <declname>t_expr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="93" column="14" bodyfile="src/csl/patternMatch.cpp" bodystart="137" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="structcsl_1_1matcher_1_1Node_1aa1ce8d599a18061832643419a8581e90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; <ref refid="structcsl_1_1matcher_1_1Node" kindref="compound">Node</ref> *, std::vector&lt; <ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> &gt;::const_iterator &gt;</type>
        <definition>std::pair&lt; Node *, std::vector&lt; csl::Expr &gt;::const_iterator &gt; Node::findBestMatch</definition>
        <argsstring>(std::vector&lt; csl::Expr &gt;::const_iterator first, std::vector&lt; csl::Expr &gt;::const_iterator last)</argsstring>
        <name>findBestMatch</name>
        <qualifiedname>csl::matcher::Node::findBestMatch</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> &gt;::const_iterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> &gt;::const_iterator</type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="96" column="5" bodyfile="src/csl/patternMatch.cpp" bodystart="149" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="structcsl_1_1matcher_1_1Node_1aa72c3ff0b569b60e3eea43651088dfed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> &gt;</type>
        <definition>std::vector&lt; csl::Expr &gt; Node::getArgs</definition>
        <argsstring>() const</argsstring>
        <name>getArgs</name>
        <qualifiedname>csl::matcher::Node::getArgs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="99" column="17" bodyfile="src/csl/patternMatch.cpp" bodystart="167" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="structcsl_1_1matcher_1_1Node_1a2ad39b57f8a2f242b5baa6e9d5d83ad1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref></type>
        <definition>csl::Expr Node::getChainExpr</definition>
        <argsstring>(ExprType type) const</argsstring>
        <name>getChainExpr</name>
        <qualifiedname>csl::matcher::Node::getChainExpr</qualifiedname>
        <param>
          <type>ExprType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="102" column="28" bodyfile="src/csl/patternMatch.cpp" bodystart="194" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="structcsl_1_1matcher_1_1Node_1aa7ec9eafeda772031794fa027af003b1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref></type>
        <definition>csl::Expr Node::getAbbreviation</definition>
        <argsstring>() const</argsstring>
        <name>getAbbreviation</name>
        <qualifiedname>csl::matcher::Node::getAbbreviation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="103" column="28" bodyfile="src/csl/patternMatch.cpp" bodystart="229" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="structcsl_1_1matcher_1_1Node_1ae7edd940e888bd86cc8b22e3af68fcfc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref></type>
        <definition>csl::Expr Node::getChainAbbreviation</definition>
        <argsstring>() const</argsstring>
        <name>getChainAbbreviation</name>
        <qualifiedname>csl::matcher::Node::getChainAbbreviation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="104" column="28" bodyfile="src/csl/patternMatch.cpp" bodystart="234" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="structcsl_1_1matcher_1_1Node_1ab7640b9c4998070ca9cead7baf822d0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Node::setAbbreviation</definition>
        <argsstring>(std::vector&lt; Tree * &gt; &amp;trees, ExprType type)</argsstring>
        <name>setAbbreviation</name>
        <qualifiedname>csl::matcher::Node::setAbbreviation</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="structcsl_1_1matcher_1_1Tree" kindref="compound">Tree</ref> * &gt; &amp;</type>
          <declname>trees</declname>
        </param>
        <param>
          <type>ExprType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="106" column="10" bodyfile="src/csl/patternMatch.cpp" bodystart="239" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="structcsl_1_1matcher_1_1Node_1ab0aa0287c66d317628911b563b2a8fbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Node::parse</definition>
        <argsstring>(std::vector&lt; csl::Expr &gt;::const_iterator first, std::vector&lt; csl::Expr &gt;::const_iterator last)</argsstring>
        <name>parse</name>
        <qualifiedname>csl::matcher::Node::parse</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> &gt;::const_iterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> &gt;::const_iterator</type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="108" column="10" bodyfile="src/csl/patternMatch.cpp" bodystart="260" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="structcsl_1_1matcher_1_1Node_1a5066b674a7d2409509dbd157c964a71b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Node::print</definition>
        <argsstring>(int indent=0) const</argsstring>
        <name>print</name>
        <qualifiedname>csl::matcher::Node::print</qualifiedname>
        <param>
          <type>int</type>
          <declname>indent</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="116" column="10" bodyfile="src/csl/patternMatch.cpp" bodystart="306" bodyend="329"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structcsl_1_1matcher_1_1Node_1a510f5d23c9085698339d44f3ffe44290" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref></type>
        <definition>csl::Expr Node::makeAbbreviation</definition>
        <argsstring>(csl::Expr const &amp;expr, ExprType type)</argsstring>
        <name>makeAbbreviation</name>
        <qualifiedname>csl::matcher::Node::makeAbbreviation</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> const &amp;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>ExprType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="85" column="22" bodyfile="src/csl/patternMatch.cpp" bodystart="208" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="structcsl_1_1matcher_1_1Node_1abe51b885dbafe4c507de13c56dd998a8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref></type>
        <definition>csl::Expr Node::makeExpression</definition>
        <argsstring>(std::vector&lt; csl::Expr &gt; const &amp;args, ExprType type)</argsstring>
        <name>makeExpression</name>
        <qualifiedname>csl::matcher::Node::makeExpression</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> &gt; const &amp;</type>
          <declname>args</declname>
        </param>
        <param>
          <type>ExprType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="87" column="22" bodyfile="src/csl/patternMatch.cpp" bodystart="218" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="structcsl_1_1matcher_1_1Node_1a5a469ab00a71255fa90314d4c0de152e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Node::distance</definition>
        <argsstring>(Node const *first, Node const *last)</argsstring>
        <name>distance</name>
        <qualifiedname>csl::matcher::Node::distance</qualifiedname>
        <param>
          <type><ref refid="structcsl_1_1matcher_1_1Node" kindref="compound">Node</ref> const *</type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="structcsl_1_1matcher_1_1Node" kindref="compound">Node</ref> const *</type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="90" column="19" bodyfile="src/csl/patternMatch.cpp" bodystart="120" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="structcsl_1_1matcher_1_1Node_1ad241da1457d716f4da5e803fd1ee73f3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Node::nLeafs</definition>
        <argsstring>(csl::Expr const &amp;expr)</argsstring>
        <name>nLeafs</name>
        <qualifiedname>csl::matcher::Node::nLeafs</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> const &amp;</type>
          <declname>expr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="91" column="19" bodyfile="src/csl/patternMatch.cpp" bodystart="130" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="structcsl_1_1matcher_1_1Node_1a199e75c5d2644f0d51fbde7eb8a6f72a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref></type>
        <definition>csl::Expr Node::getChainExpr</definition>
        <argsstring>(std::vector&lt; csl::Expr &gt; const &amp;args, ExprType type)</argsstring>
        <name>getChainExpr</name>
        <qualifiedname>csl::matcher::Node::getChainExpr</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> &gt; const &amp;</type>
          <declname>args</declname>
        </param>
        <param>
          <type>ExprType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="100" column="28" bodyfile="src/csl/patternMatch.cpp" bodystart="188" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="structcsl_1_1matcher_1_1Node_1a0f9b592ba7fd003092318c66e0f374dc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcsl_1_1matcher_1_1Node" kindref="compound">Node</ref> *</type>
        <definition>Node * Node::build</definition>
        <argsstring>(csl::Expr const &amp;t_expr, Node *t_parent=nullptr)</argsstring>
        <name>build</name>
        <qualifiedname>csl::matcher::Node::build</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> const &amp;</type>
          <declname>t_expr</declname>
        </param>
        <param>
          <type><ref refid="structcsl_1_1matcher_1_1Node" kindref="compound">Node</ref> *</type>
          <declname>t_parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="111" column="17" bodyfile="src/csl/patternMatch.cpp" bodystart="276" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="structcsl_1_1matcher_1_1Node_1a83df481963f3876c368f38d9af2658ab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Node::destroy</definition>
        <argsstring>(Node *&amp;node)</argsstring>
        <name>destroy</name>
        <qualifiedname>csl::matcher::Node::destroy</qualifiedname>
        <param>
          <type><ref refid="structcsl_1_1matcher_1_1Node" kindref="compound">Node</ref> *&amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="113" column="17" bodyfile="src/csl/patternMatch.cpp" bodystart="281" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="structcsl_1_1matcher_1_1Node_1aeb39eef86b0f9a463d59c1d506e48c4c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Node::removeSingle</definition>
        <argsstring>(Node *&amp;node)</argsstring>
        <name>removeSingle</name>
        <qualifiedname>csl::matcher::Node::removeSingle</qualifiedname>
        <param>
          <type><ref refid="structcsl_1_1matcher_1_1Node" kindref="compound">Node</ref> *&amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/patternMatch.h" line="114" column="17" bodyfile="src/csl/patternMatch.cpp" bodystart="290" bodyend="304"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>csl::Expr</label>
        <link refid="classcsl_1_1Expr"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>csl::matcher::Node</label>
        <link refid="structcsl_1_1matcher_1_1Node"/>
        <childnode refid="2" relation="usage">
          <edgelabel>abbreviation</edgelabel>
          <edgelabel>chainAbbreviation</edgelabel>
          <edgelabel>expr</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>parent</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::shared_ptr&lt; csl::Abstract &gt;</label>
        <link refid="classstd_1_1shared__ptr"/>
      </node>
    </collaborationgraph>
    <location file="src/csl/patternMatch.h" line="43" column="1" bodyfile="src/csl/patternMatch.h" bodystart="43" bodyend="124"/>
    <listofallmembers>
      <member refid="structcsl_1_1matcher_1_1Node_1ac7f02286f2abb9484c5291c62ca729b1" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>abbreviation</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1a484c81f0acf074976b640f4a032b5a6a" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>begin</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1acb63058474654fd82e025b473bdfc219" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>begin</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1a0f9b592ba7fd003092318c66e0f374dc" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>build</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1a7b434c3fb10883daf9c03ad22e94164b" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>chainAbbreviation</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1a1b4ed85007eadb7b7d424090eb321525" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>children</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1a47fb0c193e8ed4b3083631c5850283bf" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>const_iterator</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1a65e86a18d8125b2a3d8080684f5171c8" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>Container</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1a83df481963f3876c368f38d9af2658ab" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>destroy</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1a5a469ab00a71255fa90314d4c0de152e" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>distance</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1a8dbc76b7b0014ee28f7dcbfe39f7e21f" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>empty</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1a009addf0f4255b4c1996fd1659626d29" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>end</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1aaed51fd574d18cc028d44ef1bc1da108" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>end</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1a4751fb4b8b87715de6a6f6a639221629" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>expr</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1a3cc28c1f62ac1224ac90172bd5c3e544" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>ExprType</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1aa1ce8d599a18061832643419a8581e90" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>findBestMatch</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1aa7ec9eafeda772031794fa027af003b1" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>getAbbreviation</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1aa72c3ff0b569b60e3eea43651088dfed" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>getArgs</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1ae7edd940e888bd86cc8b22e3af68fcfc" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>getChainAbbreviation</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1a199e75c5d2644f0d51fbde7eb8a6f72a" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>getChainExpr</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1a2ad39b57f8a2f242b5baa6e9d5d83ad1" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>getChainExpr</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1a185954c64df09d7c7afd15b23bb3c28a" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>insert</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1a92f3e5cc20d2b4fc265ced649fd3dffe" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>isAbbreviated</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1ad8f839c0e8ef1463c255c4ba33e7d6f4" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>isRoot</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1add999184412cb6317eb521a582129b56" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>iterator</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1a510f5d23c9085698339d44f3ffe44290" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>makeAbbreviation</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1abe51b885dbafe4c507de13c56dd998a8" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>makeExpression</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1a5500553a506fba2ae5a2114abff58849" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>maxLeaf</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1ad241da1457d716f4da5e803fd1ee73f3" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>nLeafs</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1a5958cdbf95dd6adbc009c4329e84fa2d" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>nOccurences</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1a79f73fb2e3c52a266b3b2cd4ae25c82a" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>parent</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1ab0aa0287c66d317628911b563b2a8fbe" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>parse</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1a5066b674a7d2409509dbd157c964a71b" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>print</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1aeb39eef86b0f9a463d59c1d506e48c4c" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>removeSingle</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1ab7640b9c4998070ca9cead7baf822d0c" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>setAbbreviation</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1a6a730f355d2785111ee60eb294381e27" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>size</name></member>
      <member refid="structcsl_1_1matcher_1_1Node_1ae4d66c440614930b0cdb44c589013523" prot="public" virt="non-virtual"><scope>csl::matcher::Node</scope><name>useDifferedStart</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
