<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classmty_1_1AlgebraState" kind="class" language="C++" prot="public">
    <compoundname>mty::AlgebraState</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::vector&lt; int &gt;</basecompoundref>
    <includes refid="algebraState_8h" local="no">algebraState.h</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classmty_1_1AlgebraState_1aa150a172f99650ad242909d28c4a3e5e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mty::AlgebraState::AlgebraState</definition>
        <argsstring>()</argsstring>
        <name>AlgebraState</name>
        <qualifiedname>mty::AlgebraState::AlgebraState</qualifiedname>
        <briefdescription>
<para>Default constructor. Initializes an empty vector of labels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/algebraState.h" line="41" column="5" bodyfile="src/marty/core/algebraState.h" bodystart="41" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1AlgebraState_1a692968d9ab2f1cfc1f074b03288661e7" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mty::AlgebraState::AlgebraState</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;vec)</argsstring>
        <name>AlgebraState</name>
        <qualifiedname>mty::AlgebraState::AlgebraState</qualifiedname>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Constructor with one parameter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para>std::vector of int containing the dinkin labels of the state. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/algebraState.h" line="49" column="14" bodyfile="src/marty/core/algebraState.h" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1AlgebraState_1a85a2d48c8c01c94b5832a89c8020c976" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmty_1_1AlgebraState" kindref="compound">AlgebraState</ref></type>
        <definition>AlgebraState mty::AlgebraState::applyAnnihilator</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;shifts) const</argsstring>
        <name>applyAnnihilator</name>
        <qualifiedname>mty::AlgebraState::applyAnnihilator</qualifiedname>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>shifts</declname>
        </param>
        <briefdescription>
<para>Applies shifts on labels coming from annihilation operators. Creates a new state with labels &quot;labels - shift&quot;. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shifts</parametername>
</parameternamelist>
<parameterdescription>
<para>std::vector of int with a size corresponding to the number of labels. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The modified state with shifts applied. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/algebraState.h" line="60" column="18" bodyfile="src/marty/core/algebraState.cpp" bodystart="29" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1AlgebraState_1a69bfd8d90690ad1332a6e0ccd3b1cebb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mty::AlgebraState::eigenValue</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;root, const std::vector&lt; int &gt; &amp;normRoots, int normLambda) const</argsstring>
        <name>eigenValue</name>
        <qualifiedname>mty::AlgebraState::eigenValue</qualifiedname>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>root</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>normRoots</declname>
        </param>
        <param>
          <type>int</type>
          <declname>normLambda</declname>
        </param>
        <briefdescription>
<para>Calculates the eigenvalue of the state with respect to the root <bold>root</bold>, considering <bold>l</bold> simple roots (then <bold>l</bold> dinkin labels). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>root</parametername>
</parameternamelist>
<parameterdescription>
<para>Dinkin labels of the root (size <bold>l</bold>). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>normRoots</parametername>
</parameternamelist>
<parameterdescription>
<para>Norm of the <bold>l</bold> simple roots. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>normLambda</parametername>
</parameternamelist>
<parameterdescription>
<para>Norm of the root <formula id="48">$ \lambda $</formula>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The eigenvalue of the state with respect to <bold>root</bold>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/algebraState.h" line="70" column="9" bodyfile="src/marty/core/algebraState.cpp" bodystart="43" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1AlgebraState_1a333f3d7c302826735fdb9da521d8ce0e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>vector&lt; int &gt; mty::AlgebraState::getLabels</definition>
        <argsstring>() const</argsstring>
        <name>getLabels</name>
        <qualifiedname>mty::AlgebraState::getLabels</qualifiedname>
        <briefdescription>
<para>Converts the state into a simple std::vector of int corresponding to the <bold>l</bold> dinkin labels of the state. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The dinkin labels of the state in a std::vector&lt;int&gt;. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/algebraState.h" line="79" column="17" bodyfile="src/marty/core/algebraState.cpp" bodystart="23" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1AlgebraState_1a7d926dba4587dd4e2c922dec3fcb8803" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mty::AlgebraState::operator&lt;</definition>
        <argsstring>(AlgebraState const &amp;other) const</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>mty::AlgebraState::operator&lt;</qualifiedname>
        <param>
          <type><ref refid="classmty_1_1AlgebraState" kindref="compound">AlgebraState</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/algebraState.h" line="81" column="12" bodyfile="src/marty/core/algebraState.h" bodystart="81" bodyend="84"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classmty_1_1AlgebraState_1a322f4db520cf58f1460e3afaace1b603" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;fout, const AlgebraState &amp;state)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>mty::AlgebraState::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>fout</declname>
        </param>
        <param>
          <type>const <ref refid="classmty_1_1AlgebraState" kindref="compound">AlgebraState</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Overload of the operator&lt;&lt; for <ref refid="classmty_1_1AlgebraState" kindref="compound">AlgebraState</ref>, displays the labels in the output <bold>fout</bold>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fout</parametername>
</parameternamelist>
<parameterdescription>
<para>Output flux. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classmty_1_1AlgebraState" kindref="compound">AlgebraState</ref> to display. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The modified flux. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/algebraState.h" line="93" column="12"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Class inherited from std::vector&lt;int&gt;, dynkin labels for a state of a semi-simple algebra (see documentation od <ref refid="classmty_1_1SemiSimpleAlgebra" kindref="compound">SemiSimpleAlgebra</ref>). </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>mty::AlgebraState</label>
        <link refid="classmty_1_1AlgebraState"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::vector&lt; int &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>mty::AlgebraState</label>
        <link refid="classmty_1_1AlgebraState"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::vector&lt; int &gt;</label>
      </node>
    </collaborationgraph>
    <location file="src/marty/core/algebraState.h" line="35" column="1" bodyfile="src/marty/core/algebraState.h" bodystart="35" bodyend="95"/>
    <listofallmembers>
      <member refid="classmty_1_1AlgebraState_1aa150a172f99650ad242909d28c4a3e5e" prot="public" virt="non-virtual"><scope>mty::AlgebraState</scope><name>AlgebraState</name></member>
      <member refid="classmty_1_1AlgebraState_1a692968d9ab2f1cfc1f074b03288661e7" prot="public" virt="non-virtual"><scope>mty::AlgebraState</scope><name>AlgebraState</name></member>
      <member refid="classmty_1_1AlgebraState_1a85a2d48c8c01c94b5832a89c8020c976" prot="public" virt="non-virtual"><scope>mty::AlgebraState</scope><name>applyAnnihilator</name></member>
      <member refid="classmty_1_1AlgebraState_1a69bfd8d90690ad1332a6e0ccd3b1cebb" prot="public" virt="non-virtual"><scope>mty::AlgebraState</scope><name>eigenValue</name></member>
      <member refid="classmty_1_1AlgebraState_1a333f3d7c302826735fdb9da521d8ce0e" prot="public" virt="non-virtual"><scope>mty::AlgebraState</scope><name>getLabels</name></member>
      <member refid="classmty_1_1AlgebraState_1a7d926dba4587dd4e2c922dec3fcb8803" prot="public" virt="non-virtual"><scope>mty::AlgebraState</scope><name>operator&lt;</name></member>
      <member refid="classmty_1_1AlgebraState_1a322f4db520cf58f1460e3afaace1b603" prot="public" virt="non-virtual"><scope>mty::AlgebraState</scope><name>operator&lt;&lt;</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
