<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classmty_1_1double__vector" kind="class" language="C++" prot="public">
    <compoundname>mty::double_vector</compoundname>
    <templateparamlist>
      <param>
        <type>typename Type</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmty_1_1double__vector_1a1884dee2b8b08001920753e43f3712a7" prot="public" static="no">
        <type><ref refid="classmty_1_1double__vector__iterator" kindref="compound">double_vector_iterator</ref>&lt; Type, <ref refid="classmty_1_1double__vector" kindref="compound">double_vector</ref>&lt; Type &gt; * &gt;</type>
        <definition>using mty::double_vector&lt; Type &gt;::iterator =  double_vector_iterator&lt;Type, double_vector&lt;Type&gt; *&gt;</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <qualifiedname>mty::double_vector::iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="219" column="5" bodyfile="src/marty/core/doubleVector.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmty_1_1double__vector_1a2bc078076042948d52facbd09c172337" prot="public" static="no">
        <type><ref refid="classmty_1_1double__vector__iterator" kindref="compound">double_vector_iterator</ref>&lt; Type, <ref refid="classmty_1_1double__vector" kindref="compound">double_vector</ref>&lt; Type &gt; const * &gt;</type>
        <definition>using mty::double_vector&lt; Type &gt;::const_iterator =  double_vector_iterator&lt;Type, double_vector&lt;Type&gt; const *&gt;</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <qualifiedname>mty::double_vector::const_iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="220" column="5" bodyfile="src/marty/core/doubleVector.h" bodystart="220" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classmty_1_1double__vector_1a1c96b858a2e4825739a7b12fae65aafa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class double_vector_single_view&lt; Type, double_vector&lt; Type &gt; * &gt;</definition>
        <argsstring></argsstring>
        <name>double_vector_single_view&lt; Type, double_vector&lt; Type &gt; * &gt;</name>
        <qualifiedname>mty::double_vector::double_vector_single_view&lt; Type, double_vector&lt; Type &gt; * &gt;</qualifiedname>
        <param>
          <type><ref refid="classmty_1_1double__vector__single__view" kindref="compound">double_vector_single_view</ref>&lt; Type, <ref refid="classmty_1_1double__vector" kindref="compound">double_vector</ref>&lt; Type &gt; * &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="210" column="31" bodyfile="src/marty/core/doubleVector.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classmty_1_1double__vector_1a759e0623729d4755b661811c5bb09a16" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class double_vector_single_view&lt; Type, double_vector&lt; Type &gt; const * &gt;</definition>
        <argsstring></argsstring>
        <name>double_vector_single_view&lt; Type, double_vector&lt; Type &gt; const * &gt;</name>
        <qualifiedname>mty::double_vector::double_vector_single_view&lt; Type, double_vector&lt; Type &gt; const * &gt;</qualifiedname>
        <param>
          <type><ref refid="classmty_1_1double__vector__single__view" kindref="compound">double_vector_single_view</ref>&lt; Type, <ref refid="classmty_1_1double__vector" kindref="compound">double_vector</ref>&lt; Type &gt; const * &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="210" column="31" bodyfile="src/marty/core/doubleVector.h" bodystart="216" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmty_1_1double__vector_1afcab90e73b162c9b3cc678cc8a26af27" prot="private" static="no" mutable="no">
        <type>std::vector&lt; Type &gt;</type>
        <definition>std::vector&lt;Type&gt; mty::double_vector&lt; Type &gt;::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <qualifiedname>mty::double_vector::data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="319" column="19" bodyfile="src/marty/core/doubleVector.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmty_1_1double__vector_1a3917336820263c545029307abd4fe801" prot="private" static="no" mutable="no">
        <type>std::vector&lt; size_t &gt;</type>
        <definition>std::vector&lt;size_t&gt; mty::double_vector&lt; Type &gt;::cut</definition>
        <argsstring></argsstring>
        <name>cut</name>
        <qualifiedname>mty::double_vector::cut</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="320" column="17" bodyfile="src/marty/core/doubleVector.h" bodystart="320" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classmty_1_1double__vector_1a0154b9be2bb8191114f7d34e739f73ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mty::double_vector&lt; Type &gt;::double_vector</definition>
        <argsstring>(std::vector&lt; Type &gt; const &amp;init)</argsstring>
        <name>double_vector</name>
        <qualifiedname>mty::double_vector::double_vector</qualifiedname>
        <param>
          <type>std::vector&lt; Type &gt; const &amp;</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="222" column="5" bodyfile="src/marty/core/doubleVector.h" bodystart="222" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1double__vector_1abb19a722bf29f9b9da9d697377f727f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mty::double_vector&lt; Type &gt;::double_vector</definition>
        <argsstring>(std::initializer_list&lt; Type &gt; init)</argsstring>
        <name>double_vector</name>
        <qualifiedname>mty::double_vector::double_vector</qualifiedname>
        <param>
          <type>std::initializer_list&lt; Type &gt;</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="225" column="5" bodyfile="src/marty/core/doubleVector.h" bodystart="225" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1double__vector_1ae5d1f47ce76983c9645c9b18a08dd78c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mty::double_vector&lt; Type &gt;::double_vector</definition>
        <argsstring>()=default</argsstring>
        <name>double_vector</name>
        <qualifiedname>mty::double_vector::double_vector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="229" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1double__vector_1a29a2c2a08c8618379b7d81ab9ed5e07d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mty::double_vector&lt; Type &gt;::double_vector</definition>
        <argsstring>(double_vector const &amp;other)=default</argsstring>
        <name>double_vector</name>
        <qualifiedname>mty::double_vector::double_vector</qualifiedname>
        <param>
          <type><ref refid="classmty_1_1double__vector" kindref="compound">double_vector</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="230" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1double__vector_1a98281df7f69f8bf7c44c6f3be288f5e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mty::double_vector&lt; Type &gt;::double_vector</definition>
        <argsstring>(double_vector &amp;&amp;other)=default</argsstring>
        <name>double_vector</name>
        <qualifiedname>mty::double_vector::double_vector</qualifiedname>
        <param>
          <type><ref refid="classmty_1_1double__vector" kindref="compound">double_vector</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="231" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1double__vector_1ad6ccff4553c36e3816bfa58240db27e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmty_1_1double__vector" kindref="compound">double_vector</ref> &amp;</type>
        <definition>double_vector &amp; mty::double_vector&lt; Type &gt;::operator=</definition>
        <argsstring>(double_vector const &amp;other)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>mty::double_vector::operator=</qualifiedname>
        <param>
          <type><ref refid="classmty_1_1double__vector" kindref="compound">double_vector</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="232" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1double__vector_1a98ea8507af75b4f538cdf489838e1f4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmty_1_1double__vector" kindref="compound">double_vector</ref> &amp;</type>
        <definition>double_vector &amp; mty::double_vector&lt; Type &gt;::operator=</definition>
        <argsstring>(double_vector &amp;&amp;other)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>mty::double_vector::operator=</qualifiedname>
        <param>
          <type><ref refid="classmty_1_1double__vector" kindref="compound">double_vector</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="233" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1double__vector_1ac85bead86c735c7df901d4ddb930ceef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mty::double_vector&lt; Type &gt;::~double_vector</definition>
        <argsstring>()=default</argsstring>
        <name>~double_vector</name>
        <qualifiedname>mty::double_vector::~double_vector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="234" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1double__vector_1a52cbbe6874f0baad2b9fb5421074b086" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mty::double_vector&lt; Type &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <qualifiedname>mty::double_vector::empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="236" column="10" bodyfile="src/marty/core/doubleVector.h" bodystart="236" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1double__vector_1a0e816b88a047ba68cd74134099d1dec7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t mty::double_vector&lt; Type &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>mty::double_vector::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="240" column="12" bodyfile="src/marty/core/doubleVector.h" bodystart="240" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1double__vector_1a5b47dccc2629f54e9895720b5a61cd80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Type &amp;</type>
        <definition>Type &amp; mty::double_vector&lt; Type &gt;::getElement</definition>
        <argsstring>(size_t i)</argsstring>
        <name>getElement</name>
        <qualifiedname>mty::double_vector::getElement</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="245" column="10" bodyfile="src/marty/core/doubleVector.h" bodystart="245" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1double__vector_1abb8b3ca086923a4cd20a6e9982eb9342" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Type const &amp;</type>
        <definition>Type const  &amp; mty::double_vector&lt; Type &gt;::getElement</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>getElement</name>
        <qualifiedname>mty::double_vector::getElement</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="249" column="16" bodyfile="src/marty/core/doubleVector.h" bodystart="249" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1double__vector_1ab26f41d6c95fc8d94bef659edf205fb6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t mty::double_vector&lt; Type &gt;::getCut</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>getCut</name>
        <qualifiedname>mty::double_vector::getCut</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="254" column="12" bodyfile="src/marty/core/doubleVector.h" bodystart="254" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1double__vector_1a4249e0c6b600a44f596b133030404047" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; Type &gt; const &amp;</type>
        <definition>std::vector&lt; Type &gt; const  &amp; mty::double_vector&lt; Type &gt;::getData</definition>
        <argsstring>() const</argsstring>
        <name>getData</name>
        <qualifiedname>mty::double_vector::getData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="259" column="23" bodyfile="src/marty/core/doubleVector.h" bodystart="259" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1double__vector_1aacf449c07f3d6ea73e5bac17786bfbde" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; size_t &gt; const &amp;</type>
        <definition>std::vector&lt; size_t &gt; const  &amp; mty::double_vector&lt; Type &gt;::getCuts</definition>
        <argsstring>() const</argsstring>
        <name>getCuts</name>
        <qualifiedname>mty::double_vector::getCuts</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="263" column="23" bodyfile="src/marty/core/doubleVector.h" bodystart="263" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1double__vector_1a061a9546597fe8020db5465dc375a3ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mty::double_vector&lt; Type &gt;::push_back</definition>
        <argsstring>(std::vector&lt; Type &gt; const &amp;row)</argsstring>
        <name>push_back</name>
        <qualifiedname>mty::double_vector::push_back</qualifiedname>
        <param>
          <type>std::vector&lt; Type &gt; const &amp;</type>
          <declname>row</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="268" column="10" bodyfile="src/marty/core/doubleVector.h" bodystart="352" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1double__vector_1a256db9df8987425186d4dfad09d85c7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mty::double_vector&lt; Type &gt;::push_back</definition>
        <argsstring>(std::vector&lt; Type &gt; &amp;&amp;row)</argsstring>
        <name>push_back</name>
        <qualifiedname>mty::double_vector::push_back</qualifiedname>
        <param>
          <type>std::vector&lt; Type &gt; &amp;&amp;</type>
          <declname>row</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="269" column="10" bodyfile="src/marty/core/doubleVector.h" bodystart="362" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1double__vector_1a22e79b3b35bf92a095d4b2281f051cf6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmty_1_1double__vector__iterator" kindref="compound">iterator</ref></type>
        <definition>iterator mty::double_vector&lt; Type &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <qualifiedname>mty::double_vector::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="271" column="14" bodyfile="src/marty/core/doubleVector.h" bodystart="271" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1double__vector_1a6b326299bdf360f0240741a9d83f447d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmty_1_1double__vector__iterator" kindref="compound">iterator</ref></type>
        <definition>iterator mty::double_vector&lt; Type &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <qualifiedname>mty::double_vector::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="276" column="14" bodyfile="src/marty/core/doubleVector.h" bodystart="276" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1double__vector_1aed07da005067709ffac04f8749006822" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmty_1_1double__vector__iterator" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator mty::double_vector&lt; Type &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <qualifiedname>mty::double_vector::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="281" column="20" bodyfile="src/marty/core/doubleVector.h" bodystart="281" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1double__vector_1ab3cc53b06e76d79e00e06aff3b99c395" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmty_1_1double__vector__iterator" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator mty::double_vector&lt; Type &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <qualifiedname>mty::double_vector::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="286" column="20" bodyfile="src/marty/core/doubleVector.h" bodystart="286" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1double__vector_1acd5e932d5b9dc1cb9608061e146e818f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmty_1_1double__vector__single__view" kindref="compound">double_vector_single_view</ref>&lt; Type, <ref refid="classmty_1_1double__vector" kindref="compound">double_vector</ref>&lt; Type &gt; * &gt;</type>
        <definition>double_vector_single_view&lt; Type, double_vector&lt; Type &gt; * &gt; mty::double_vector&lt; Type &gt;::operator[]</definition>
        <argsstring>(size_t i)</argsstring>
        <name>operator[]</name>
        <qualifiedname>mty::double_vector::operator[]</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="292" column="5" bodyfile="src/marty/core/doubleVector.h" bodystart="392" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1double__vector_1ac7fa2c0363511cafb5e65969ca9f9386" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classmty_1_1double__vector__single__view" kindref="compound">double_vector_single_view</ref>&lt; Type, <ref refid="classmty_1_1double__vector" kindref="compound">double_vector</ref>&lt; Type &gt; const * &gt;</type>
        <definition>const double_vector_single_view&lt; Type, double_vector&lt; Type &gt; const * &gt; mty::double_vector&lt; Type &gt;::operator[]</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>mty::double_vector::operator[]</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="294" column="5" bodyfile="src/marty/core/doubleVector.h" bodystart="399" bodyend="403"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classmty_1_1double__vector_1a26d9a2b9f4a72c146ec94b16d52ea85e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; Type &gt;::iterator</type>
        <definition>std::vector&lt; Type &gt;::iterator mty::double_vector&lt; Type &gt;::vecBegin</definition>
        <argsstring>()</argsstring>
        <name>vecBegin</name>
        <qualifiedname>mty::double_vector::vecBegin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="297" column="37" bodyfile="src/marty/core/doubleVector.h" bodystart="297" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1double__vector_1a6f63aced45b52e10530da557cab657f9" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; Type &gt;::const_iterator</type>
        <definition>std::vector&lt; Type &gt;::const_iterator mty::double_vector&lt; Type &gt;::vecBegin</definition>
        <argsstring>() const</argsstring>
        <name>vecBegin</name>
        <qualifiedname>mty::double_vector::vecBegin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="301" column="43" bodyfile="src/marty/core/doubleVector.h" bodystart="301" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1double__vector_1aa6e434c3531c7f3784bf77a6efc66873" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; Type &gt;::iterator</type>
        <definition>std::vector&lt; Type &gt;::iterator mty::double_vector&lt; Type &gt;::vecEnd</definition>
        <argsstring>()</argsstring>
        <name>vecEnd</name>
        <qualifiedname>mty::double_vector::vecEnd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="305" column="37" bodyfile="src/marty/core/doubleVector.h" bodystart="305" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1double__vector_1acbc55e7680f2406311a1b170a5fb3f62" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; Type &gt;::const_iterator</type>
        <definition>std::vector&lt; Type &gt;::const_iterator mty::double_vector&lt; Type &gt;::vecEnd</definition>
        <argsstring>() const</argsstring>
        <name>vecEnd</name>
        <qualifiedname>mty::double_vector::vecEnd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="309" column="43" bodyfile="src/marty/core/doubleVector.h" bodystart="309" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1double__vector_1a4ad8188edd0aa2df955b789224038b40" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mty::double_vector&lt; Type &gt;::push_row</definition>
        <argsstring>(size_t pos, Type const &amp;el)</argsstring>
        <name>push_row</name>
        <qualifiedname>mty::double_vector::push_row</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>Type const &amp;</type>
          <declname>el</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="314" column="10" bodyfile="src/marty/core/doubleVector.h" bodystart="382" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="classmty_1_1double__vector_1ace1e247b99d1bd0742b5acef03c324f5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mty::double_vector&lt; Type &gt;::eraseEl</definition>
        <argsstring>(size_t pos, size_t pos_j)</argsstring>
        <name>eraseEl</name>
        <qualifiedname>mty::double_vector::eraseEl</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>pos_j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/doubleVector.h" line="316" column="10" bodyfile="src/marty/core/doubleVector.h" bodystart="374" bodyend="379"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/marty/core/doubleVector.h" line="32" column="1" bodyfile="src/marty/core/doubleVector.h" bodystart="214" bodyend="322"/>
    <listofallmembers>
      <member refid="classmty_1_1double__vector_1a22e79b3b35bf92a095d4b2281f051cf6" prot="public" virt="non-virtual"><scope>mty::double_vector</scope><name>begin</name></member>
      <member refid="classmty_1_1double__vector_1aed07da005067709ffac04f8749006822" prot="public" virt="non-virtual"><scope>mty::double_vector</scope><name>begin</name></member>
      <member refid="classmty_1_1double__vector_1a2bc078076042948d52facbd09c172337" prot="public" virt="non-virtual"><scope>mty::double_vector</scope><name>const_iterator</name></member>
      <member refid="classmty_1_1double__vector_1a3917336820263c545029307abd4fe801" prot="private" virt="non-virtual"><scope>mty::double_vector</scope><name>cut</name></member>
      <member refid="classmty_1_1double__vector_1afcab90e73b162c9b3cc678cc8a26af27" prot="private" virt="non-virtual"><scope>mty::double_vector</scope><name>data</name></member>
      <member refid="classmty_1_1double__vector_1a0154b9be2bb8191114f7d34e739f73ab" prot="public" virt="non-virtual"><scope>mty::double_vector</scope><name>double_vector</name></member>
      <member refid="classmty_1_1double__vector_1abb19a722bf29f9b9da9d697377f727f3" prot="public" virt="non-virtual"><scope>mty::double_vector</scope><name>double_vector</name></member>
      <member refid="classmty_1_1double__vector_1ae5d1f47ce76983c9645c9b18a08dd78c" prot="public" virt="non-virtual"><scope>mty::double_vector</scope><name>double_vector</name></member>
      <member refid="classmty_1_1double__vector_1a29a2c2a08c8618379b7d81ab9ed5e07d" prot="public" virt="non-virtual"><scope>mty::double_vector</scope><name>double_vector</name></member>
      <member refid="classmty_1_1double__vector_1a98281df7f69f8bf7c44c6f3be288f5e3" prot="public" virt="non-virtual"><scope>mty::double_vector</scope><name>double_vector</name></member>
      <member refid="classmty_1_1double__vector_1a1c96b858a2e4825739a7b12fae65aafa" prot="private" virt="non-virtual"><scope>mty::double_vector</scope><name>double_vector_single_view&lt; Type, double_vector&lt; Type &gt; * &gt;</name></member>
      <member refid="classmty_1_1double__vector_1a759e0623729d4755b661811c5bb09a16" prot="private" virt="non-virtual"><scope>mty::double_vector</scope><name>double_vector_single_view&lt; Type, double_vector&lt; Type &gt; const * &gt;</name></member>
      <member refid="classmty_1_1double__vector_1a52cbbe6874f0baad2b9fb5421074b086" prot="public" virt="non-virtual"><scope>mty::double_vector</scope><name>empty</name></member>
      <member refid="classmty_1_1double__vector_1a6b326299bdf360f0240741a9d83f447d" prot="public" virt="non-virtual"><scope>mty::double_vector</scope><name>end</name></member>
      <member refid="classmty_1_1double__vector_1ab3cc53b06e76d79e00e06aff3b99c395" prot="public" virt="non-virtual"><scope>mty::double_vector</scope><name>end</name></member>
      <member refid="classmty_1_1double__vector_1ace1e247b99d1bd0742b5acef03c324f5" prot="private" virt="non-virtual"><scope>mty::double_vector</scope><name>eraseEl</name></member>
      <member refid="classmty_1_1double__vector_1ab26f41d6c95fc8d94bef659edf205fb6" prot="public" virt="non-virtual"><scope>mty::double_vector</scope><name>getCut</name></member>
      <member refid="classmty_1_1double__vector_1aacf449c07f3d6ea73e5bac17786bfbde" prot="public" virt="non-virtual"><scope>mty::double_vector</scope><name>getCuts</name></member>
      <member refid="classmty_1_1double__vector_1a4249e0c6b600a44f596b133030404047" prot="public" virt="non-virtual"><scope>mty::double_vector</scope><name>getData</name></member>
      <member refid="classmty_1_1double__vector_1a5b47dccc2629f54e9895720b5a61cd80" prot="public" virt="non-virtual"><scope>mty::double_vector</scope><name>getElement</name></member>
      <member refid="classmty_1_1double__vector_1abb8b3ca086923a4cd20a6e9982eb9342" prot="public" virt="non-virtual"><scope>mty::double_vector</scope><name>getElement</name></member>
      <member refid="classmty_1_1double__vector_1a1884dee2b8b08001920753e43f3712a7" prot="public" virt="non-virtual"><scope>mty::double_vector</scope><name>iterator</name></member>
      <member refid="classmty_1_1double__vector_1ad6ccff4553c36e3816bfa58240db27e8" prot="public" virt="non-virtual"><scope>mty::double_vector</scope><name>operator=</name></member>
      <member refid="classmty_1_1double__vector_1a98ea8507af75b4f538cdf489838e1f4e" prot="public" virt="non-virtual"><scope>mty::double_vector</scope><name>operator=</name></member>
      <member refid="classmty_1_1double__vector_1acd5e932d5b9dc1cb9608061e146e818f" prot="public" virt="non-virtual"><scope>mty::double_vector</scope><name>operator[]</name></member>
      <member refid="classmty_1_1double__vector_1ac7fa2c0363511cafb5e65969ca9f9386" prot="public" virt="non-virtual"><scope>mty::double_vector</scope><name>operator[]</name></member>
      <member refid="classmty_1_1double__vector_1a061a9546597fe8020db5465dc375a3ac" prot="public" virt="non-virtual"><scope>mty::double_vector</scope><name>push_back</name></member>
      <member refid="classmty_1_1double__vector_1a256db9df8987425186d4dfad09d85c7d" prot="public" virt="non-virtual"><scope>mty::double_vector</scope><name>push_back</name></member>
      <member refid="classmty_1_1double__vector_1a4ad8188edd0aa2df955b789224038b40" prot="private" virt="non-virtual"><scope>mty::double_vector</scope><name>push_row</name></member>
      <member refid="classmty_1_1double__vector_1a0e816b88a047ba68cd74134099d1dec7" prot="public" virt="non-virtual"><scope>mty::double_vector</scope><name>size</name></member>
      <member refid="classmty_1_1double__vector_1a26d9a2b9f4a72c146ec94b16d52ea85e" prot="private" virt="non-virtual"><scope>mty::double_vector</scope><name>vecBegin</name></member>
      <member refid="classmty_1_1double__vector_1a6f63aced45b52e10530da557cab657f9" prot="private" virt="non-virtual"><scope>mty::double_vector</scope><name>vecBegin</name></member>
      <member refid="classmty_1_1double__vector_1aa6e434c3531c7f3784bf77a6efc66873" prot="private" virt="non-virtual"><scope>mty::double_vector</scope><name>vecEnd</name></member>
      <member refid="classmty_1_1double__vector_1acbc55e7680f2406311a1b170a5fb3f62" prot="private" virt="non-virtual"><scope>mty::double_vector</scope><name>vecEnd</name></member>
      <member refid="classmty_1_1double__vector_1ac85bead86c735c7df901d4ddb930ceef" prot="public" virt="non-virtual"><scope>mty::double_vector</scope><name>~double_vector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
