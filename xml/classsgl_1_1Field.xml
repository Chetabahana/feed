<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classsgl_1_1Field" kind="class" language="C++" prot="public">
    <compoundname>sgl::Field</compoundname>
    <basecompoundref refid="classsgl_1_1AbstractLiteral" prot="public" virt="non-virtual">sgl::AbstractLiteral</basecompoundref>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="classsgl_1_1Field_1a3501c6873e180b2a9fcd386a4bae347f" prot="public" static="no" strong="no">
        <type></type>
        <name>Order</name>
        <qualifiedname>sgl::Field::Order</qualifiedname>
        <enumvalue id="classsgl_1_1Field_1a3501c6873e180b2a9fcd386a4bae347fa971157ebba1ea027eb1f3bae1070aac0" prot="public">
          <name>None</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classsgl_1_1Field_1a3501c6873e180b2a9fcd386a4bae347fa7cafe05df262af4abf93574d3a6c0d9e" prot="public">
          <name>Left</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classsgl_1_1Field_1a3501c6873e180b2a9fcd386a4bae347fa5f9fd372ae97d992f05d88e4153c0971" prot="public">
          <name>Right</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/sglfield.h" line="39" column="5" bodyfile="src/marty/sgl/sglfield.h" bodystart="39" bodyend="39"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classsgl_1_1Field_1abb873a69707dae274a6c043320cc3c1e" prot="public" static="no" mutable="no">
        <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref></type>
        <definition>csl::Expr sgl::Field::initField</definition>
        <argsstring></argsstring>
        <name>initField</name>
        <qualifiedname>sgl::Field::initField</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/sglfield.h" line="117" column="22" bodyfile="src/marty/sgl/sglfield.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsgl_1_1Field_1abc4de74ac7f0a392e13e59dede2fd6c6" prot="public" static="no" mutable="no">
        <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref></type>
        <definition>csl::Index sgl::Field::index</definition>
        <argsstring></argsstring>
        <name>index</name>
        <qualifiedname>sgl::Field::index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/sglfield.h" line="118" column="22" bodyfile="src/marty/sgl/sglfield.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsgl_1_1Field_1a963132739c8e1c3e0552585419cda4d5" prot="public" static="no" mutable="no">
        <type><ref refid="classcsl_1_1TensorField" kindref="compound">csl::TensorField</ref></type>
        <definition>csl::TensorField sgl::Field::psi</definition>
        <argsstring></argsstring>
        <name>psi</name>
        <qualifiedname>sgl::Field::psi</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/sglfield.h" line="119" column="22" bodyfile="src/marty/sgl/sglfield.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsgl_1_1Field_1af800aa19cffeb080186086cbdc12b1e7" prot="public" static="no" mutable="no">
        <type><ref refid="classcsl_1_1Tensor" kindref="compound">csl::Tensor</ref></type>
        <definition>csl::Tensor sgl::Field::p</definition>
        <argsstring></argsstring>
        <name>p</name>
        <qualifiedname>sgl::Field::p</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/sglfield.h" line="120" column="22" bodyfile="src/marty/sgl/sglfield.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsgl_1_1Field_1a9279b4d824b3ba6ddf4d2ea406bc9a61" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool sgl::Field::particle</definition>
        <argsstring></argsstring>
        <name>particle</name>
        <qualifiedname>sgl::Field::particle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/sglfield.h" line="121" column="22" bodyfile="src/marty/sgl/sglfield.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsgl_1_1Field_1abce9eb8ae87174d01a5a873ac8ba73d3" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool sgl::Field::incoming</definition>
        <argsstring></argsstring>
        <name>incoming</name>
        <qualifiedname>sgl::Field::incoming</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/sglfield.h" line="122" column="22" bodyfile="src/marty/sgl/sglfield.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsgl_1_1Field_1ae19cafe845022b2606cd6eaa9f6a3414" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool sgl::Field::onshell</definition>
        <argsstring></argsstring>
        <name>onshell</name>
        <qualifiedname>sgl::Field::onshell</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/sglfield.h" line="123" column="22" bodyfile="src/marty/sgl/sglfield.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsgl_1_1Field_1ae886e7971293c31803961951143ee935" prot="public" static="no" mutable="no">
        <type>Order</type>
        <definition>Order sgl::Field::order</definition>
        <argsstring></argsstring>
        <name>order</name>
        <qualifiedname>sgl::Field::order</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/sglfield.h" line="124" column="22" bodyfile="src/marty/sgl/sglfield.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsgl_1_1Field_1ad0fb88913917d110b6240c2f87f69325" prot="public" static="no" mutable="no">
        <type><ref refid="structsgl_1_1PartnerShip" kindref="compound">PartnerShip</ref></type>
        <definition>PartnerShip sgl::Field::partnerShip</definition>
        <argsstring></argsstring>
        <name>partnerShip</name>
        <qualifiedname>sgl::Field::partnerShip</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/sglfield.h" line="125" column="22" bodyfile="src/marty/sgl/sglfield.h" bodystart="125" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classsgl_1_1Field_1a0666a83888107ec37b19e5eae993f140" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sgl::Field::Field</definition>
        <argsstring>(csl::Expr const &amp;field, bool particle, bool incoming, bool onShell, PartnerShip const &amp;partnerShip, Order order=None)</argsstring>
        <name>Field</name>
        <qualifiedname>sgl::Field::Field</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref> const &amp;</type>
          <declname>field</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>particle</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>incoming</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>onShell</declname>
        </param>
        <param>
          <type><ref refid="structsgl_1_1PartnerShip" kindref="compound">PartnerShip</ref> const &amp;</type>
          <declname>partnerShip</declname>
        </param>
        <param>
          <type>Order</type>
          <declname>order</declname>
          <defval>None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/sglfield.h" line="41" column="5" bodyfile="src/marty/sgl/sglfield.cpp" bodystart="22" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1Field_1aac625c9a1e405c9c083270e6ce370dec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool sgl::Field::contains</definition>
        <argsstring>(csl::Index const &amp;) const override</argsstring>
        <name>contains</name>
        <qualifiedname>sgl::Field::contains</qualifiedname>
        <reimplements refid="classsgl_1_1AbstractGammaSym_1a6918d61d7d9639a578fed132b0eba9f0">contains</reimplements>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/sglfield.h" line="48" column="10" bodyfile="src/marty/sgl/sglfield.h" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1Field_1a2976a614f34312295ca5b83a4764d55d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void sgl::Field::replace</definition>
        <argsstring>(csl::Index const &amp;, csl::Index const &amp;) override</argsstring>
        <name>replace</name>
        <qualifiedname>sgl::Field::replace</qualifiedname>
        <reimplements refid="classsgl_1_1AbstractGammaSym_1a7e40a14116fc813571670c09065016d9">replace</reimplements>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
        </param>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/sglfield.h" line="52" column="10" bodyfile="src/marty/sgl/sglfield.h" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1Field_1a0f7408ff6bb6c53938623164eb26992f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref></type>
        <definition>csl::Index sgl::Field::getIndex</definition>
        <argsstring>() const</argsstring>
        <name>getIndex</name>
        <qualifiedname>sgl::Field::getIndex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/sglfield.h" line="56" column="16" bodyfile="src/marty/sgl/sglfield.h" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1Field_1af5bf16f582f9c7da944e7bfc0b174b8c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool sgl::Field::isOnShell</definition>
        <argsstring>() const</argsstring>
        <name>isOnShell</name>
        <qualifiedname>sgl::Field::isOnShell</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/sglfield.h" line="61" column="10" bodyfile="src/marty/sgl/sglfield.h" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1Field_1abbb16f3fda9fb9ec2325d9bd8f5e53c0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool sgl::Field::isIncomingParticle</definition>
        <argsstring>() const</argsstring>
        <name>isIncomingParticle</name>
        <qualifiedname>sgl::Field::isIncomingParticle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/sglfield.h" line="65" column="10" bodyfile="src/marty/sgl/sglfield.h" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1Field_1a4683b6acf3407b3232a8eb8ed5a6be40" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool sgl::Field::isIncomingAntiParticle</definition>
        <argsstring>() const</argsstring>
        <name>isIncomingAntiParticle</name>
        <qualifiedname>sgl::Field::isIncomingAntiParticle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/sglfield.h" line="69" column="10" bodyfile="src/marty/sgl/sglfield.h" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1Field_1ae1ac87e6d8238bf81dd504d79a469744" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool sgl::Field::isOutgoingParticle</definition>
        <argsstring>() const</argsstring>
        <name>isOutgoingParticle</name>
        <qualifiedname>sgl::Field::isOutgoingParticle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/sglfield.h" line="73" column="10" bodyfile="src/marty/sgl/sglfield.h" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1Field_1ae10aa90b0f77f07973d85ea3baa7032a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool sgl::Field::isOutgoingAntiParticle</definition>
        <argsstring>() const</argsstring>
        <name>isOutgoingAntiParticle</name>
        <qualifiedname>sgl::Field::isOutgoingAntiParticle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/sglfield.h" line="77" column="10" bodyfile="src/marty/sgl/sglfield.h" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1Field_1a544e9eb0e8a6ef7691a95d6f8ebd9769" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool sgl::Field::isComplexConjugated</definition>
        <argsstring>() const</argsstring>
        <name>isComplexConjugated</name>
        <qualifiedname>sgl::Field::isComplexConjugated</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/sglfield.h" line="82" column="10" bodyfile="src/marty/sgl/sglfield.h" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1Field_1a9e784e076866db55ad8253160e12c8f7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool sgl::Field::isZero</definition>
        <argsstring>() const override</argsstring>
        <name>isZero</name>
        <qualifiedname>sgl::Field::isZero</qualifiedname>
        <reimplements refid="classsgl_1_1AbstractGammaSym_1adfe9ff61706305c5c0eb268dd2653d0d">isZero</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/sglfield.h" line="87" column="10" bodyfile="src/marty/sgl/sglfield.h" bodystart="87" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1Field_1a9a5dd303df88c991b9f37b8bfc4cd161" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool sgl::Field::isHappyWith</definition>
        <argsstring>(Field const &amp;other) const</argsstring>
        <name>isHappyWith</name>
        <qualifiedname>sgl::Field::isHappyWith</qualifiedname>
        <param>
          <type><ref refid="classsgl_1_1Field" kindref="compound">Field</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/sglfield.h" line="92" column="10" bodyfile="src/marty/sgl/sglfield.h" bodystart="92" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1Field_1a9491560052ce36c2ea50a9963ead5ca8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool sgl::Field::isLeftField</definition>
        <argsstring>() const</argsstring>
        <name>isLeftField</name>
        <qualifiedname>sgl::Field::isLeftField</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/sglfield.h" line="98" column="10" bodyfile="src/marty/sgl/sglfield.h" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1Field_1a3bd1eca7617b2e482438f69dfd8a7b3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sgl::Field::conjugate</definition>
        <argsstring>()</argsstring>
        <name>conjugate</name>
        <qualifiedname>sgl::Field::conjugate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/sglfield.h" line="103" column="10" bodyfile="src/marty/sgl/sglfield.cpp" bodystart="80" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1Field_1adb106bf9e51ee95cb79cd221c4c38f7c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref></type>
        <definition>csl::Expr sgl::Field::toCSL</definition>
        <argsstring>(TensorSet const &amp;tensors) const override</argsstring>
        <name>toCSL</name>
        <qualifiedname>sgl::Field::toCSL</qualifiedname>
        <reimplements refid="classsgl_1_1AbstractGammaSym_1a2c88557366387dab3a16a1e71aa192a6">toCSL</reimplements>
        <param>
          <type><ref refid="structsgl_1_1TensorSet" kindref="compound">TensorSet</ref> const &amp;</type>
          <declname>tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/sglfield.h" line="105" column="15" bodyfile="src/marty/sgl/sglfield.cpp" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1Field_1ac47f6c00aec6cf40d57dbed2701b4aa3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref></type>
        <definition>csl::Expr sgl::Field::toCSL</definition>
        <argsstring>(TensorSet const &amp;tensors, csl::Index index) const</argsstring>
        <name>toCSL</name>
        <qualifiedname>sgl::Field::toCSL</qualifiedname>
        <param>
          <type><ref refid="structsgl_1_1TensorSet" kindref="compound">TensorSet</ref> const &amp;</type>
          <declname>tensors</declname>
        </param>
        <param>
          <type><ref refid="classcsl_1_1Index" kindref="compound">csl::Index</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/sglfield.h" line="107" column="15" bodyfile="src/marty/sgl/sglfield.cpp" bodystart="49" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1Field_1a4d0a2a97059b0000a89d2f4c03c5b994" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref></type>
        <definition>GExpr sgl::Field::copy</definition>
        <argsstring>() const override</argsstring>
        <name>copy</name>
        <qualifiedname>sgl::Field::copy</qualifiedname>
        <reimplements refid="classsgl_1_1AbstractGammaSym_1af757efe5cd359a3d83f1ef642c4fec8b">copy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/sglfield.h" line="109" column="11" bodyfile="src/marty/sgl/sglfield.cpp" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1Field_1a69f7bd456ca368516de5269d6e17e29d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classsgl_1_1GExpr" kindref="compound">GExpr</ref></type>
        <definition>GExpr sgl::Field::refresh</definition>
        <argsstring>() const override</argsstring>
        <name>refresh</name>
        <qualifiedname>sgl::Field::refresh</qualifiedname>
        <reimplements refid="classsgl_1_1AbstractGammaSym_1a13cc14a47f1ddf8fb51b0861e93c1d00">refresh</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/sglfield.h" line="110" column="11" bodyfile="src/marty/sgl/sglfield.cpp" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1Field_1a6aed26a9ddb5c04e0bd82d1b0cb73dc6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void sgl::Field::print</definition>
        <argsstring>(std::ostream &amp;out=std::cout) const override</argsstring>
        <name>print</name>
        <qualifiedname>sgl::Field::print</qualifiedname>
        <reimplements refid="classsgl_1_1AbstractGammaSym_1a167b1ff6b236463f5c2cb2cff18b7109">print</reimplements>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
          <defval>std::cout</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/sglfield.h" line="112" column="10" bodyfile="src/marty/sgl/sglfield.cpp" bodystart="65" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classsgl_1_1Field_1ab32971ddd915b623ab6f98167fe361d8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sgl::Field::isSame</definition>
        <argsstring>(Field const &amp;other) const</argsstring>
        <name>isSame</name>
        <qualifiedname>sgl::Field::isSame</qualifiedname>
        <param>
          <type><ref refid="classsgl_1_1Field" kindref="compound">Field</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/sgl/sglfield.h" line="114" column="10" bodyfile="src/marty/sgl/sglfield.cpp" bodystart="73" bodyend="78"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>sgl::AbstractGammaSym</label>
        <link refid="classsgl_1_1AbstractGammaSym"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>sgl::AbstractLiteral</label>
        <link refid="classsgl_1_1AbstractLiteral"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>sgl::Field</label>
        <link refid="classsgl_1_1Field"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>std::enable_shared_from_this&lt; AbstractGammaSym &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>csl::Expr</label>
        <link refid="classcsl_1_1Expr"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>csl::Index</label>
        <link refid="classcsl_1_1Index"/>
      </node>
      <node id="10">
        <label>csl::Tensor</label>
        <link refid="classcsl_1_1Tensor"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>csl::TensorField</label>
        <link refid="classcsl_1_1TensorField"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>sgl::AbstractGammaSym</label>
        <link refid="classsgl_1_1AbstractGammaSym"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>sgl::AbstractLiteral</label>
        <link refid="classsgl_1_1AbstractLiteral"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>sgl::Field</label>
        <link refid="classsgl_1_1Field"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>initField</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>index</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>psi</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>p</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>partnerShip</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>sgl::PartnerShip</label>
        <link refid="structsgl_1_1PartnerShip"/>
      </node>
      <node id="4">
        <label>std::enable_shared_from_this&lt; AbstractGammaSym &gt;</label>
      </node>
      <node id="9">
        <label>std::shared_ptr&lt; TensorFieldParent &gt;</label>
        <link refid="classstd_1_1shared__ptr"/>
      </node>
      <node id="11">
        <label>std::shared_ptr&lt; TensorParent &gt;</label>
        <link refid="classstd_1_1shared__ptr"/>
      </node>
      <node id="6">
        <label>std::shared_ptr&lt; csl::Abstract &gt;</label>
        <link refid="classstd_1_1shared__ptr"/>
      </node>
    </collaborationgraph>
    <location file="src/marty/sgl/sglfield.h" line="36" column="1" bodyfile="src/marty/sgl/sglfield.h" bodystart="36" bodyend="126"/>
    <listofallmembers>
      <member refid="classsgl_1_1AbstractLiteral_1a1c8f91c428236fd112084566ff9f798d" prot="public" virt="virtual"><scope>sgl::Field</scope><name>argument</name></member>
      <member refid="classsgl_1_1AbstractLiteral_1a6de99d632158d0544e7536f141ab4d25" prot="public" virt="virtual"><scope>sgl::Field</scope><name>argument</name></member>
      <member refid="classsgl_1_1AbstractLiteral_1a3bb5fe1156b3e85bc02536077626e95e" prot="public" virt="virtual"><scope>sgl::Field</scope><name>begin</name></member>
      <member refid="classsgl_1_1AbstractLiteral_1ad9662a88c502549ea76e5cfc9fa76a0c" prot="public" virt="virtual"><scope>sgl::Field</scope><name>begin</name></member>
      <member refid="classsgl_1_1Field_1a3bd1eca7617b2e482438f69dfd8a7b3f" prot="public" virt="non-virtual"><scope>sgl::Field</scope><name>conjugate</name></member>
      <member refid="classsgl_1_1AbstractGammaSym_1a84a8f29afaabbe187d15d13a9fac4059" prot="public" virt="non-virtual"><scope>sgl::Field</scope><name>const_iterator</name></member>
      <member refid="classsgl_1_1Field_1aac625c9a1e405c9c083270e6ce370dec" prot="public" virt="virtual"><scope>sgl::Field</scope><name>contains</name></member>
      <member refid="classsgl_1_1Field_1a4d0a2a97059b0000a89d2f4c03c5b994" prot="public" virt="virtual"><scope>sgl::Field</scope><name>copy</name></member>
      <member refid="classsgl_1_1AbstractLiteral_1ad063835e8cc5fe232c4f858fb100fbf3" prot="public" virt="virtual"><scope>sgl::Field</scope><name>end</name></member>
      <member refid="classsgl_1_1AbstractLiteral_1a93c2311786e32222681acf8f5ba7a5b8" prot="public" virt="virtual"><scope>sgl::Field</scope><name>end</name></member>
      <member refid="classsgl_1_1AbstractGammaSym_1ac033f1bea41f9a1001abba5b9305ce3e" prot="public" virt="non-virtual"><scope>sgl::Field</scope><name>errorPrint</name></member>
      <member refid="classsgl_1_1AbstractGammaSym_1a62ed9a539963b9146ac05c0efafffd47" prot="public" virt="virtual"><scope>sgl::Field</scope><name>expr</name></member>
      <member refid="classsgl_1_1AbstractGammaSym_1acefd4f5cee624ddff586cb005ed2510a" prot="public" virt="virtual"><scope>sgl::Field</scope><name>expr</name></member>
      <member refid="classsgl_1_1Field_1a0666a83888107ec37b19e5eae993f140" prot="public" virt="non-virtual"><scope>sgl::Field</scope><name>Field</name></member>
      <member refid="classsgl_1_1AbstractGammaSym_1a5e749ec71535aae944635a29bdb7eeba" prot="public" virt="virtual"><scope>sgl::Field</scope><name>getFactor</name></member>
      <member refid="classsgl_1_1Field_1a0f7408ff6bb6c53938623164eb26992f" prot="public" virt="non-virtual"><scope>sgl::Field</scope><name>getIndex</name></member>
      <member refid="classsgl_1_1AbstractGammaSym_1a75034a33b0e554585206b38961960113" prot="public" virt="virtual"><scope>sgl::Field</scope><name>getTerm</name></member>
      <member refid="classsgl_1_1AbstractGammaSym_1ade647a5eec39ac5e5e6de2d612b8cdd3" prot="public" virt="virtual"><scope>sgl::Field</scope><name>hasPropertyWith</name></member>
      <member refid="classsgl_1_1Field_1abce9eb8ae87174d01a5a873ac8ba73d3" prot="public" virt="non-virtual"><scope>sgl::Field</scope><name>incoming</name></member>
      <member refid="classsgl_1_1Field_1abc4de74ac7f0a392e13e59dede2fd6c6" prot="public" virt="non-virtual"><scope>sgl::Field</scope><name>index</name></member>
      <member refid="classsgl_1_1AbstractGammaSym_1a984f2acddc646a42a7ace28ffe96f1d3" prot="public" virt="virtual"><scope>sgl::Field</scope><name>indices</name></member>
      <member refid="classsgl_1_1AbstractGammaSym_1a3e2d18fdc22a8012e1179e132c5cdaf3" prot="public" virt="virtual"><scope>sgl::Field</scope><name>indices</name></member>
      <member refid="classsgl_1_1Field_1abb873a69707dae274a6c043320cc3c1e" prot="public" virt="non-virtual"><scope>sgl::Field</scope><name>initField</name></member>
      <member refid="classsgl_1_1Field_1a544e9eb0e8a6ef7691a95d6f8ebd9769" prot="public" virt="non-virtual"><scope>sgl::Field</scope><name>isComplexConjugated</name></member>
      <member refid="classsgl_1_1Field_1a9a5dd303df88c991b9f37b8bfc4cd161" prot="public" virt="non-virtual"><scope>sgl::Field</scope><name>isHappyWith</name></member>
      <member refid="classsgl_1_1Field_1a4683b6acf3407b3232a8eb8ed5a6be40" prot="public" virt="non-virtual"><scope>sgl::Field</scope><name>isIncomingAntiParticle</name></member>
      <member refid="classsgl_1_1Field_1abbb16f3fda9fb9ec2325d9bd8f5e53c0" prot="public" virt="non-virtual"><scope>sgl::Field</scope><name>isIncomingParticle</name></member>
      <member refid="classsgl_1_1Field_1a9491560052ce36c2ea50a9963ead5ca8" prot="public" virt="non-virtual"><scope>sgl::Field</scope><name>isLeftField</name></member>
      <member refid="classsgl_1_1Field_1af5bf16f582f9c7da944e7bfc0b174b8c" prot="public" virt="non-virtual"><scope>sgl::Field</scope><name>isOnShell</name></member>
      <member refid="classsgl_1_1Field_1ae10aa90b0f77f07973d85ea3baa7032a" prot="public" virt="non-virtual"><scope>sgl::Field</scope><name>isOutgoingAntiParticle</name></member>
      <member refid="classsgl_1_1Field_1ae1ac87e6d8238bf81dd504d79a469744" prot="public" virt="non-virtual"><scope>sgl::Field</scope><name>isOutgoingParticle</name></member>
      <member refid="classsgl_1_1Field_1ab32971ddd915b623ab6f98167fe361d8" prot="public" virt="non-virtual"><scope>sgl::Field</scope><name>isSame</name></member>
      <member refid="classsgl_1_1Field_1a9e784e076866db55ad8253160e12c8f7" prot="public" virt="virtual"><scope>sgl::Field</scope><name>isZero</name></member>
      <member refid="classsgl_1_1AbstractGammaSym_1a7ecc40fa38a2c881f0e1b2af81e699f4" prot="public" virt="non-virtual"><scope>sgl::Field</scope><name>iterator</name></member>
      <member refid="classsgl_1_1Field_1a3501c6873e180b2a9fcd386a4bae347fa7cafe05df262af4abf93574d3a6c0d9e" prot="public" virt="non-virtual"><scope>sgl::Field</scope><name>Left</name></member>
      <member refid="classsgl_1_1Field_1a3501c6873e180b2a9fcd386a4bae347fa971157ebba1ea027eb1f3bae1070aac0" prot="public" virt="non-virtual"><scope>sgl::Field</scope><name>None</name></member>
      <member refid="classsgl_1_1Field_1ae19cafe845022b2606cd6eaa9f6a3414" prot="public" virt="non-virtual"><scope>sgl::Field</scope><name>onshell</name></member>
      <member refid="classsgl_1_1Field_1a3501c6873e180b2a9fcd386a4bae347f" prot="public" virt="non-virtual"><scope>sgl::Field</scope><name>Order</name></member>
      <member refid="classsgl_1_1Field_1ae886e7971293c31803961951143ee935" prot="public" virt="non-virtual"><scope>sgl::Field</scope><name>order</name></member>
      <member refid="classsgl_1_1Field_1af800aa19cffeb080186086cbdc12b1e7" prot="public" virt="non-virtual"><scope>sgl::Field</scope><name>p</name></member>
      <member refid="classsgl_1_1Field_1a9279b4d824b3ba6ddf4d2ea406bc9a61" prot="public" virt="non-virtual"><scope>sgl::Field</scope><name>particle</name></member>
      <member refid="classsgl_1_1Field_1ad0fb88913917d110b6240c2f87f69325" prot="public" virt="non-virtual"><scope>sgl::Field</scope><name>partnerShip</name></member>
      <member refid="classsgl_1_1Field_1a6aed26a9ddb5c04e0bd82d1b0cb73dc6" prot="public" virt="virtual"><scope>sgl::Field</scope><name>print</name></member>
      <member refid="classsgl_1_1AbstractGammaSym_1abdacec8b02e4d1b58b9b938ae9be8e98" prot="public" virt="virtual"><scope>sgl::Field</scope><name>propertyWith</name></member>
      <member refid="classsgl_1_1Field_1a963132739c8e1c3e0552585419cda4d5" prot="public" virt="non-virtual"><scope>sgl::Field</scope><name>psi</name></member>
      <member refid="classsgl_1_1Field_1a69f7bd456ca368516de5269d6e17e29d" prot="public" virt="virtual"><scope>sgl::Field</scope><name>refresh</name></member>
      <member refid="classsgl_1_1Field_1a2976a614f34312295ca5b83a4764d55d" prot="public" virt="virtual"><scope>sgl::Field</scope><name>replace</name></member>
      <member refid="classsgl_1_1Field_1a3501c6873e180b2a9fcd386a4bae347fa5f9fd372ae97d992f05d88e4153c0971" prot="public" virt="non-virtual"><scope>sgl::Field</scope><name>Right</name></member>
      <member refid="classsgl_1_1AbstractGammaSym_1a37c54670ee0262b62a55279b23e7ce12" prot="public" virt="non-virtual"><scope>sgl::Field</scope><name>self</name></member>
      <member refid="classsgl_1_1AbstractGammaSym_1a2c8730e190c88413a50d6f7b6864a97b" prot="public" virt="virtual"><scope>sgl::Field</scope><name>simplify</name></member>
      <member refid="classsgl_1_1AbstractLiteral_1a138e83d163d9978b52241cc4e3e30ceb" prot="public" virt="virtual"><scope>sgl::Field</scope><name>size</name></member>
      <member refid="classsgl_1_1Field_1adb106bf9e51ee95cb79cd221c4c38f7c" prot="public" virt="virtual"><scope>sgl::Field</scope><name>toCSL</name></member>
      <member refid="classsgl_1_1Field_1ac47f6c00aec6cf40d57dbed2701b4aa3" prot="public" virt="non-virtual"><scope>sgl::Field</scope><name>toCSL</name></member>
      <member refid="classsgl_1_1AbstractGammaSym_1a2be842099a79d1c07130664367ed9d91" prot="public" virt="virtual"><scope>sgl::Field</scope><name>~AbstractGammaSym</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
