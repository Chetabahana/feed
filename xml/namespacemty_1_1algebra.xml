<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="namespacemty_1_1algebra" kind="namespace" language="C++">
    <compoundname>mty::algebra</compoundname>
    <innerclass refid="classmty_1_1algebra_1_1A" prot="public">mty::algebra::A</innerclass>
    <innerclass refid="classmty_1_1algebra_1_1B" prot="public">mty::algebra::B</innerclass>
    <innerclass refid="classmty_1_1algebra_1_1C" prot="public">mty::algebra::C</innerclass>
    <innerclass refid="classmty_1_1algebra_1_1D" prot="public">mty::algebra::D</innerclass>
    <innerclass refid="classmty_1_1algebra_1_1E6" prot="public">mty::algebra::E6</innerclass>
    <innerclass refid="classmty_1_1algebra_1_1E7" prot="public">mty::algebra::E7</innerclass>
    <innerclass refid="classmty_1_1algebra_1_1E8" prot="public">mty::algebra::E8</innerclass>
    <innerclass refid="classmty_1_1algebra_1_1F4" prot="public">mty::algebra::F4</innerclass>
    <innerclass refid="classmty_1_1algebra_1_1G2" prot="public">mty::algebra::G2</innerclass>
    <innerclass refid="classmty_1_1algebra_1_1R" prot="public">mty::algebra::R</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacemty_1_1algebra_1a6a408a40adf4bdcbb2de53ae0917062a" prot="public" static="no" strong="yes">
        <type></type>
        <name>Type</name>
        <qualifiedname>mty::algebra::Type</qualifiedname>
        <enumvalue id="namespacemty_1_1algebra_1a6a408a40adf4bdcbb2de53ae0917062aae1e1d3d40573127e9ee0480caf1283d6" prot="public">
          <name>R</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Algebra of the <formula id="279">$U(1)$</formula> group. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacemty_1_1algebra_1a6a408a40adf4bdcbb2de53ae0917062aa7fc56270e7a70fa81a5935b72eacbe29" prot="public">
          <name>A</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Algebra <formula id="193">$ A_l $</formula> of <formula id="280">$SU(l+1)$</formula> groups. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacemty_1_1algebra_1a6a408a40adf4bdcbb2de53ae0917062aa9d5ed678fe57bcca610140957afab571" prot="public">
          <name>B</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Algebra <formula id="195">$ B_l $</formula> of <formula id="281">$SO(2l+1)$</formula> groups. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacemty_1_1algebra_1a6a408a40adf4bdcbb2de53ae0917062aa0d61f8370cad1d412f80b84d143e1257" prot="public">
          <name>C</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Algebra <formula id="196">$ C_l $</formula> of <formula id="282">$Sp(2l)$</formula> groups. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacemty_1_1algebra_1a6a408a40adf4bdcbb2de53ae0917062aaf623e75af30e62bbd73d6df5b50bb7b5" prot="public">
          <name>D</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Algebra <formula id="197">$ D_l $</formula> of <formula id="283">$SO(2l)$</formula> groups. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacemty_1_1algebra_1a6a408a40adf4bdcbb2de53ae0917062aa247116319466c7be96c6ac3ab87984cb" prot="public">
          <name>E6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Exceptionnal semi-simple algebra <formula id="106">$E_6$</formula>. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacemty_1_1algebra_1a6a408a40adf4bdcbb2de53ae0917062aa4b110604865b013dd13d9ce3f66046f2" prot="public">
          <name>E7</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Exceptionnal semi-simple algebra <formula id="107">$E_7$</formula>. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacemty_1_1algebra_1a6a408a40adf4bdcbb2de53ae0917062aab1a82c958451a0a4f0f7373dad43ca67" prot="public">
          <name>E8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Exceptionnal semi-simple algebra <formula id="108">$E_8$</formula>. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacemty_1_1algebra_1a6a408a40adf4bdcbb2de53ae0917062aae7e0e72401a9f2718ed0f39f2861d702" prot="public">
          <name>F4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Exceptionnal semi-simple algebra <formula id="109">$F_4$</formula>. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacemty_1_1algebra_1a6a408a40adf4bdcbb2de53ae0917062aad24bade136bc8cd77e37395ea94226eb" prot="public">
          <name>G2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Exceptionnal semi-simple algebra <formula id="110">$G_2$</formula>. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Different types of semi-simple Lie algebras. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/semiSimpleAlgebra.h" line="52" column="1" bodyfile="src/marty/core/semiSimpleAlgebra.h" bodystart="52" bodyend="63"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespacemty_1_1algebra_1a04126a1d4f9ccf9f961f4846edccefcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ostream &amp;</type>
        <definition>ostream &amp; mty::algebra::operator&lt;&lt;</definition>
        <argsstring>(ostream &amp;fout, mty::algebra::Type obj)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>mty::algebra::operator&lt;&lt;</qualifiedname>
        <param>
          <type>ostream &amp;</type>
          <declname>fout</declname>
        </param>
        <param>
          <type><ref refid="namespacemty_1_1algebra_1a6a408a40adf4bdcbb2de53ae0917062a" kindref="member">mty::algebra::Type</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/semiSimpleAlgebra.cpp" line="1314" column="1" bodyfile="src/marty/core/semiSimpleAlgebra.cpp" bodystart="1314" bodyend="1351"/>
      </memberdef>
      <memberdef kind="function" id="namespacemty_1_1algebra_1aad20a950bccc24ff08897b2c73ab2265" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; mty::algebra::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;fout, mty::algebra::Type obj)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>mty::algebra::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>fout</declname>
        </param>
        <param>
          <type><ref refid="namespacemty_1_1algebra_1a6a408a40adf4bdcbb2de53ae0917062a" kindref="member">mty::algebra::Type</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Overload of operator&lt;&lt; for <ref refid="namespacemty_1_1algebra_1a6a408a40adf4bdcbb2de53ae0917062a" kindref="member">algebra::Type</ref>. Allows to display a string corresponding to the type of algebra instead of an integer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fout</parametername>
</parameternamelist>
<parameterdescription>
<para>Output flux. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Type to display. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The modified flux. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/marty/core/semiSimpleAlgebra.h" line="72" column="1" declfile="src/marty/core/semiSimpleAlgebra.h" declline="72" declcolumn="1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Enumeration of types of semi simple Lie algebras. The names being very small, we use a namespace to avoid conflicts. </para>
    </briefdescription>
    <detaileddescription>
<para>Namespace to avoid name conflicts for semi-simple algebras that have very simple names. See <ref refid="namespacemty_1_1algebra_1a6a408a40adf4bdcbb2de53ae0917062a" kindref="member">algebra::Type</ref> for the same reason. </para>
    </detaileddescription>
    <location file="src/marty/core/semiSimpleAlgebra.cpp" line="1312" column="1"/>
  </compounddef>
</doxygen>
