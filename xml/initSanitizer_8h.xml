<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="initSanitizer_8h" kind="file" language="C++">
    <compoundname>initSanitizer.h</compoundname>
    <includes local="no">cassert</includes>
    <includes local="no">iostream</includes>
    <includes local="no">exception</includes>
    <includedby refid="csl_2csl_8h" local="yes">src/csl/csl.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>src/csl/initSanitizer.h</label>
        <link refid="initSanitizer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cassert</label>
      </node>
      <node id="4">
        <label>exception</label>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>src/csl.h</label>
        <link refid="csl_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/csl/csl.h</label>
        <link refid="csl_2csl_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/csl/initSanitizer.h</label>
        <link refid="initSanitizer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>src/marty.h</label>
        <link refid="marty_8h_source"/>
      </node>
      <node id="96">
        <label>src/marty/core/algebra.h</label>
        <link refid="algebra_8h"/>
      </node>
      <node id="53">
        <label>src/marty/core/amplitude.h</label>
        <link refid="amplitude_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>src/marty/core/amplitudeInitializer.h</label>
        <link refid="amplitudeInitializer_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>src/marty/core/amplitudeSimplification.h</label>
        <link refid="amplitudeSimplification_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>src/marty/core/bernoulli.h</label>
        <link refid="bernoulli_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>src/marty/core/cache.h</label>
        <link refid="cache_8h_source"/>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>src/marty/core/ckm.h</label>
        <link refid="ckm_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>src/marty/core/colorSimplification.h</label>
        <link refid="colorSimplification_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>src/marty/core/colorSpace.h</label>
        <link refid="colorSpace_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>src/marty/core/diracology.h</label>
        <link refid="diracology_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>src/marty/core/drawer.h</label>
        <link refid="drawer_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>src/marty/core/expander.h</label>
        <link refid="expander_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>src/marty/core/fermionChain.h</label>
        <link refid="fermionChain_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>src/marty/core/fermionFlow.h</label>
        <link refid="fermionFlow_8h"/>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>src/marty/core/fermionicField.h</label>
        <link refid="fermionicField_8h"/>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>src/marty/core/feynOptions.h</label>
        <link refid="feynOptions_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>src/marty/core/feynmanDiagram.h</label>
        <link refid="feynmanDiagram_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>src/marty/core/feynmanIntegral.h</label>
        <link refid="feynmanIntegral_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>src/marty/core/feynmanRule.h</label>
        <link refid="feynmanRule_8h"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>src/marty/core/feynruleMomentum.h</label>
        <link refid="feynruleMomentum_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>src/marty/core/filters.h</label>
        <link refid="filters_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>src/marty/core/flavor.h</label>
        <link refid="flavor_8h"/>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>src/marty/core/gauge.h</label>
        <link refid="gauge_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>src/marty/core/gauged.h</label>
        <link refid="gauged_8h"/>
      </node>
      <node id="68">
        <label>src/marty/core/gaugedGroup.h</label>
        <link refid="gaugedGroup_8h"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>src/marty/core/generator.h</label>
        <link refid="generator_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>src/marty/core/ghostField.h</label>
        <link refid="ghostField_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>src/marty/core/goldstoneField.h</label>
        <link refid="goldstoneField_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>src/marty/core/graph.h</label>
        <link refid="graph_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>src/marty/core/group.h</label>
        <link refid="group_8h"/>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>src/marty/core/groupIndices.h</label>
        <link refid="groupIndices_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>src/marty/core/insertion.h</label>
        <link refid="insertion_8h"/>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>src/marty/core/interactionTerm.h</label>
        <link refid="interactionTerm_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>src/marty/core/iterable.h</label>
        <link refid="iterable_8h"/>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>src/marty/core/kinematics.h</label>
        <link refid="kinematics_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>src/marty/core/lagrangian.h</label>
        <link refid="lagrangian_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>src/marty/core/lhaBuiltIn.h</label>
        <link refid="lhaBuiltIn_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>src/marty/core/looptools_extension.h</label>
        <link refid="looptools__extension_8h"/>
      </node>
      <node id="9">
        <label>src/marty/core/marty.h</label>
        <link refid="marty_2core_2marty_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>src/marty/core/model.h</label>
        <link refid="model_8h"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>src/marty/core/modelBuilder.h</label>
        <link refid="modelBuilder_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>src/marty/core/modelData.h</label>
        <link refid="modelData_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>src/marty/core/momentumConservation.h</label>
        <link refid="momentumConservation_8h"/>
      </node>
      <node id="56">
        <label>src/marty/core/mrtInterface.h</label>
        <link refid="mrtInterface_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>src/marty/core/mrtInterfaceCurrent.h</label>
        <link refid="mrtInterfaceCurrent_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>src/marty/core/mrtUtils.h</label>
        <link refid="mrtUtils_8h"/>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>src/marty/core/mtylibrary.h</label>
        <link refid="mtylibrary_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>src/marty/core/polarization.h</label>
        <link refid="polarization_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>src/marty/core/propagator.h</label>
        <link refid="propagator_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>src/marty/core/quantumField.h</label>
        <link refid="quantumField_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>src/marty/core/quantumFieldTheory.h</label>
        <link refid="quantumFieldTheory_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>src/marty/core/representation.h</label>
        <link refid="representation_8h"/>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>src/marty/core/scalarField.h</label>
        <link refid="scalarField_8h"/>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>src/marty/core/semiSimpleAlgebra.h</label>
        <link refid="semiSimpleAlgebra_8h"/>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>src/marty/core/sglconverter.h</label>
        <link refid="sglconverter_8h_source"/>
      </node>
      <node id="6">
        <label>src/marty/core/sglsimplify.h</label>
        <link refid="sglsimplify_8h_source"/>
      </node>
      <node id="78">
        <label>src/marty/core/spectrum.h</label>
        <link refid="spectrum_8h"/>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>src/marty/core/su_n_algebra.h</label>
        <link refid="su__n__algebra_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>src/marty/core/traceIdentities.h</label>
        <link refid="traceIdentities_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>src/marty/core/vectorField.h</label>
        <link refid="vectorField_8h"/>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>src/marty/core/wick.h</label>
        <link refid="wick_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>src/marty/core/wilson.h</label>
        <link refid="wilson_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>src/marty/core/wilsonOperator.h</label>
        <link refid="wilsonOperator_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>src/marty/models/gthdm.h</label>
        <link refid="gthdm_8h_source"/>
      </node>
      <node id="58">
        <label>src/marty/models/mssm.h</label>
        <link refid="mssm_8h_source"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>src/marty/models/mssmData.h</label>
        <link refid="mssmData_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>src/marty/models/nmfv.h</label>
        <link refid="nmfv_8h_source"/>
      </node>
      <node id="59">
        <label>src/marty/models/pmssm.h</label>
        <link refid="pmssm_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>src/marty/models/pmssm_lem.h</label>
        <link refid="pmssm__lem_8h_source"/>
      </node>
      <node id="11">
        <label>src/marty/models/pmssm_lem/pmssm_data.h</label>
        <link refid="pmssm__data_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>src/marty/models/pmssm_lem/pmssm_lem.h</label>
        <link refid="pmssm__lem_2pmssm__lem_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>src/marty/models/qcd.h</label>
        <link refid="qcd_8h_source"/>
      </node>
      <node id="62">
        <label>src/marty/models/qed.h</label>
        <link refid="qed_8h"/>
      </node>
      <node id="63">
        <label>src/marty/models/sm.h</label>
        <link refid="sm_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>src/marty/models/thdm.h</label>
        <link refid="thdm_8h_source"/>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/marty/sgl/abstractgammasym.h</label>
        <link refid="abstractgammasym_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>src/marty/sgl/contraction.h</label>
        <link refid="contraction_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>src/marty/sgl/cslconverter.h</label>
        <link refid="cslconverter_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>src/marty/sgl/cslexpr.h</label>
        <link refid="cslexpr_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>src/marty/sgl/epsilonindex.h</label>
        <link refid="epsilonindex_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>src/marty/sgl/gammaindex.h</label>
        <link refid="gammaindex_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>src/marty/sgl/generalizedindex.h</label>
        <link refid="generalizedindex_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>src/marty/sgl/indexchain.h</label>
        <link refid="indexchain_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>src/marty/sgl/metricindex.h</label>
        <link refid="metricindex_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>src/marty/sgl/momentumindex.h</label>
        <link refid="momentumindex_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>src/marty/sgl/multifunction.h</label>
        <link refid="multifunction_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>src/marty/sgl/ordering.h</label>
        <link refid="ordering_8h"/>
      </node>
      <node id="8">
        <label>src/marty/sgl/sgl.h</label>
        <link refid="sgl_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>src/marty/sgl/sglalgo.h</label>
        <link refid="sglalgo_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>src/marty/sgl/sglcommutation.h</label>
        <link refid="sglcommutation_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>src/marty/sgl/sglfield.h</label>
        <link refid="sglfield_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>src/marty/sgl/sglinterface.h</label>
        <link refid="sglinterface_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>src/marty/sgl/sgloperations.h</label>
        <link refid="sgloperations_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>src/marty/sgl/simplify.h</label>
        <link refid="simplify_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>src/marty/sgl/tensorset.h</label>
        <link refid="tensorset_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>src/marty/sgl/tracer.h</label>
        <link refid="tracer_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>src/marty/sgl/typecast.h</label>
        <link refid="typecast_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classcsl_1_1InitSanitizer" prot="public">csl::InitSanitizer</innerclass>
    <innernamespace refid="namespacecsl">csl</innernamespace>
    <sectiondef kind="func">
      <memberdef kind="function" id="initSanitizer_8h_1a403114f0b10f4e1ff6351053b0e945dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const csl::InitSanitizer&lt; T &gt; &amp;var)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="classcsl_1_1InitSanitizer" kindref="compound">csl::InitSanitizer</ref>&lt; T &gt; &amp;</type>
          <declname>var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/initSanitizer.h" line="162" column="1" bodyfile="src/csl/initSanitizer.h" bodystart="162" bodyend="166"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;exception&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecsl" kindref="compound">csl</ref><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="22" refid="classcsl_1_1InitSanitizer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcsl_1_1InitSanitizer" kindref="compound">InitSanitizer</ref><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1InitSanitizer" kindref="compound">InitSanitizer</ref>()</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1InitSanitizer" kindref="compound">InitSanitizer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>t_name)<sp/>:<sp/>name(t_name)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1InitSanitizer" kindref="compound">InitSanitizer</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;t)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;operator=(t);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1InitSanitizer" kindref="compound">InitSanitizer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>t_name,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;t)<sp/>:<sp/>name(t_name)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;operator=(t);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1InitSanitizer" kindref="compound">InitSanitizer</ref><sp/>&amp;operator=(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;t)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Operator<sp/>already<sp/>defined<sp/>before<sp/>merging<sp/>&quot;compare&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Calling<sp/>InitSanitizer<sp/>&amp;operator=(T<sp/>const<sp/>&amp;t)<sp/>on<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_safe<sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_value<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ATTENTION:<sp/>do<sp/>NOT<sp/>define<sp/>the<sp/>assignment<sp/>operator<sp/>in<sp/>the<sp/>following<sp/>comment.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>fact,<sp/>it<sp/>will<sp/>conflict<sp/>to<sp/>the<sp/>one<sp/>uncommented<sp/>below<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i.e.<sp/>InitSanitizer<sp/>&amp;operator=(const<sp/>InitSanitizer&lt;T&gt;<sp/>&amp;other)).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>By<sp/>defining<sp/>them<sp/>both<sp/>there<sp/>will<sp/>be<sp/>a<sp/>warning<sp/>from<sp/>-Wdeprecated_copy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Alternatively,<sp/>if<sp/>one<sp/>defines<sp/>only<sp/>the<sp/>one<sp/>with<sp/>the<sp/>two<sp/>templates,<sp/>then<sp/>the<sp/>other<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>defined<sp/>by<sp/>default,<sp/>and<sp/>the<sp/>&quot;name&quot;<sp/>member<sp/>WILL<sp/>be<sp/>modified.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>U&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>InitSanitizer<sp/>&amp;operator=(const<sp/>InitSanitizer&lt;U&gt;<sp/>&amp;other)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;Calling<sp/>InitSanitizer<sp/>&amp;operator=(InitSanitizer&lt;U&gt;<sp/>const<sp/>&amp;other)<sp/>on<sp/>&quot;<sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/>&quot;\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;operator=(other.get());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>*this;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1InitSanitizer" kindref="compound">InitSanitizer</ref><sp/>&amp;operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1InitSanitizer" kindref="compound">InitSanitizer&lt;T&gt;</ref><sp/>&amp;other)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Calling<sp/>InitSanitizer<sp/>&amp;operator=(InitSanitizer&lt;T&gt;<sp/>const<sp/>&amp;other)<sp/>on<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_safe=other.hasValue();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_value=<sp/>(m_safe<sp/>?<sp/>other.m_value<sp/>:<sp/>m_value);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcsl_1_1InitSanitizer" kindref="compound">InitSanitizer</ref>(<ref refid="classcsl_1_1InitSanitizer" kindref="compound">InitSanitizer&lt;T&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;other)<sp/>:<sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name(other.getName()),</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_value(other.m_value),</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_safe(other.m_safe)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasValue()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="87"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_safe;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>get()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="92"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Called<sp/>.get()\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_safe)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>param<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>getName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>is<sp/>used<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;uninitialized,<sp/>please<sp/>assign<sp/>it<sp/>a<sp/>m_value<sp/>using<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;standard<sp/>m_value<sp/>assignement.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Uninitialized<sp/>value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_value;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset()</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_safe<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator<sp/>==<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1InitSanitizer" kindref="compound">InitSanitizer&lt;T&gt;</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="111"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/><sp/></highlight><highlight class="comment">//<sp/>Defined<sp/>in<sp/>&quot;compare&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>(hasValue()<sp/>&amp;&amp;<sp/>other.hasValue())<sp/>?<sp/><sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(get())==</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(other.get()))<sp/>:<sp/>(!hasValue()<sp/>&amp;&amp;<sp/>!other.hasValue())<sp/>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator<sp/>==<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="116"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Defined<sp/>in<sp/>&quot;compare&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>hasValue()<sp/>?<sp/>(m_value==other)<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator<sp/>!=<sp/>(<ref refid="classcsl_1_1InitSanitizer" kindref="compound">InitSanitizer&lt;T&gt;</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="122"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Defined<sp/>in<sp/>&quot;compare&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>other)<sp/>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator<sp/>!=<sp/>(T<sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="127"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Defined<sp/>in<sp/>&quot;compare&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>other)<sp/>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>T()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="132"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>getName()</highlight><highlight class="keyword"><sp/>const<sp/></highlight></codeline>
<codeline lineno="137"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setName(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;newname)<sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=std::move(newname);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print(std::ostream<sp/>&amp;out=std::cout)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="147"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>getName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>=<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(hasValue()<sp/>?<sp/><sp/>(out<sp/>&lt;&lt;<sp/>get())<sp/>:<sp/>(out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;uninitialized&quot;</highlight><highlight class="normal">))<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name=</highlight><highlight class="stringliteral">&quot;unnamed_var&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><sp/><sp/><sp/>m_value;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_safe{</highlight><highlight class="keyword">false</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="156"><highlight class="normal">};</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>csl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="162"><highlight class="normal">std::ostream&amp;<sp/>operator<sp/>&lt;&lt;<sp/>(std::ostream<sp/>&amp;out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsl_1_1InitSanitizer" kindref="compound">csl::InitSanitizer&lt;T&gt;</ref><sp/>&amp;var)<sp/><sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>var.print(out);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/csl/initSanitizer.h"/>
  </compounddef>
</doxygen>
