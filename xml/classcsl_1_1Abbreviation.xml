<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classcsl_1_1Abbreviation" kind="class" language="C++" prot="public">
    <compoundname>csl::Abbreviation</compoundname>
    <basecompoundref prot="public" virt="non-virtual">BaseParent</basecompoundref>
    <templateparamlist>
      <param>
        <type>class BaseParent</type>
      </param>
    </templateparamlist>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classcsl_1_1Abbreviation_1abb72b5a6c6f8ce4b8af4a99597050db2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Abbrev</definition>
        <argsstring></argsstring>
        <name>Abbrev</name>
        <qualifiedname>csl::Abbreviation::Abbrev</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Abbrev" kindref="compound">Abbrev</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/abreviation.h" line="144" column="18" bodyfile="src/csl/abreviation.h" bodystart="144" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcsl_1_1Abbreviation_1ac179fe66434f3f60915265fec7c865f8" prot="private" static="no" mutable="no">
        <type><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref></type>
        <definition>Expr csl::Abbreviation&lt; BaseParent &gt;::encapsulated</definition>
        <argsstring></argsstring>
        <name>encapsulated</name>
        <qualifiedname>csl::Abbreviation::encapsulated</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/abreviation.h" line="299" column="10" bodyfile="src/csl/abreviation.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcsl_1_1Abbreviation_1a8cbc425b147f82f60375b1cbe0a3bc3b" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string csl::Abbreviation&lt; BaseParent &gt;::baseName</definition>
        <argsstring></argsstring>
        <name>baseName</name>
        <qualifiedname>csl::Abbreviation::baseName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/abreviation.h" line="301" column="17" bodyfile="src/csl/abreviation.h" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcsl_1_1Abbreviation_1a86791cb5f656c85fa5ce81a3752d3c80" prot="private" static="no" mutable="no">
        <type><ref refid="classcsl_1_1IndexStructure" kindref="compound">csl::IndexStructure</ref></type>
        <definition>csl::IndexStructure csl::Abbreviation&lt; BaseParent &gt;::initialStructure</definition>
        <argsstring></argsstring>
        <name>initialStructure</name>
        <qualifiedname>csl::Abbreviation::initialStructure</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/abreviation.h" line="303" column="25" bodyfile="src/csl/abreviation.h" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcsl_1_1Abbreviation_1adbe6f77ae1fc9f541700a346e4c89d07" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool csl::Abbreviation&lt; BaseParent &gt;::evaluation</definition>
        <argsstring></argsstring>
        <name>evaluation</name>
        <qualifiedname>csl::Abbreviation::evaluation</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/abreviation.h" line="305" column="10" bodyfile="src/csl/abreviation.h" bodystart="305" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classcsl_1_1Abbreviation_1ae929dd6904f9f606d370b9b1ef807ee6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>csl::Abbreviation&lt; BaseParent &gt;::Abbreviation</definition>
        <argsstring>(Expr const &amp;t_encapsulated, std::string const &amp;t_name, Args &amp;&amp;... args)</argsstring>
        <name>Abbreviation</name>
        <qualifiedname>csl::Abbreviation::Abbreviation</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref> const &amp;</type>
          <declname>t_encapsulated</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>t_name</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/abreviation.h" line="148" column="5" bodyfile="src/csl/abreviation.h" bodystart="148" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1Abbreviation_1a0ff7f72e77a89cacb25eb1167e696fc8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>csl::Abbreviation&lt; BaseParent &gt;::~Abbreviation</definition>
        <argsstring>()</argsstring>
        <name>~Abbreviation</name>
        <qualifiedname>csl::Abbreviation::~Abbreviation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/abreviation.h" line="160" column="5" bodyfile="src/csl/abreviation.h" bodystart="160" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1Abbreviation_1aaf3e3d244799b5da7a1414ad60ad8005" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool csl::Abbreviation&lt; BaseParent &gt;::isAnAbbreviation</definition>
        <argsstring>() const override</argsstring>
        <name>isAnAbbreviation</name>
        <qualifiedname>csl::Abbreviation::isAnAbbreviation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/abreviation.h" line="165" column="10" bodyfile="src/csl/abreviation.h" bodystart="165" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1Abbreviation_1a8fecbeed8931603daea1d424ba568896" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void csl::Abbreviation&lt; BaseParent &gt;::printDefinition</definition>
        <argsstring>(std::ostream &amp;out=std::cout, int indentSize=4, bool header=false) const override</argsstring>
        <name>printDefinition</name>
        <qualifiedname>csl::Abbreviation::printDefinition</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
          <defval>std::cout</defval>
        </param>
        <param>
          <type>int</type>
          <declname>indentSize</declname>
          <defval>4</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>header</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/abreviation.h" line="170" column="10" bodyfile="src/csl/abreviation.h" bodystart="170" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1Abbreviation_1a1496103bce79ef2dc277ceaa1f25f442" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string const &amp;</type>
        <definition>std::string const  &amp; csl::Abbreviation&lt; BaseParent &gt;::getBaseName</definition>
        <argsstring>() const override</argsstring>
        <name>getBaseName</name>
        <qualifiedname>csl::Abbreviation::getBaseName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/abreviation.h" line="190" column="23" bodyfile="src/csl/abreviation.h" bodystart="190" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1Abbreviation_1a7e3e23da1ff8e24680ae56467530fb68" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void csl::Abbreviation&lt; BaseParent &gt;::enableEvaluation</definition>
        <argsstring>() override</argsstring>
        <name>enableEvaluation</name>
        <qualifiedname>csl::Abbreviation::enableEvaluation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/abreviation.h" line="195" column="10" bodyfile="src/csl/abreviation.h" bodystart="195" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1Abbreviation_1ae78b853e53b8963b14acfbc5264e0797" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void csl::Abbreviation&lt; BaseParent &gt;::disableEvaluation</definition>
        <argsstring>() override</argsstring>
        <name>disableEvaluation</name>
        <qualifiedname>csl::Abbreviation::disableEvaluation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/abreviation.h" line="200" column="10" bodyfile="src/csl/abreviation.h" bodystart="200" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1Abbreviation_1ad1246a47f86a3c5843165bc1b490e089" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void csl::Abbreviation&lt; BaseParent &gt;::toggleEvaluation</definition>
        <argsstring>() override</argsstring>
        <name>toggleEvaluation</name>
        <qualifiedname>csl::Abbreviation::toggleEvaluation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/abreviation.h" line="205" column="10" bodyfile="src/csl/abreviation.h" bodystart="205" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1Abbreviation_1a9503bc71a0694eddede5c14f0ac767fb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcsl_1_1Expr" kindref="compound">csl::Expr</ref></type>
        <definition>csl::Expr csl::Abbreviation&lt; BaseParent &gt;::getExactEncapsulated</definition>
        <argsstring>(Expr_info self) const override</argsstring>
        <name>getExactEncapsulated</name>
        <qualifiedname>csl::Abbreviation::getExactEncapsulated</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref></type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Returns the encapsulated expression, applying to it the correct index structure. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>Abbreviated expression.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The encapsulated expression with the correct index structure.</para>
</simplesect>
This function uses <ref refid="classcsl_1_1Abbreviation_1a251f11eaccb4ab482de2a706d2729a01" kindref="member">getEncapsulated()</ref> and applies the current index structure, from the abbreviation object <bold>self</bold>, to it. The result is then the mathematically equivalent encapsulated expression. Therefore this function performs calculations (contrary to <ref refid="classcsl_1_1Abbreviation_1a251f11eaccb4ab482de2a706d2729a01" kindref="member">getEncapsulated()</ref>) but yields an expression that can replace the initial abbreviation object in expressions ensuring that the result is still mathematically valid. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/abreviation.h" line="226" column="15" bodyfile="src/csl/abreviation.h" bodystart="226" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1Abbreviation_1a5eb677f879ccb72e590442b51693aebb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::optional&lt; <ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref> &gt;</type>
        <definition>std::optional&lt; Expr &gt; csl::Abbreviation&lt; BaseParent &gt;::evaluate</definition>
        <argsstring>(Expr_info self, csl::eval::mode user_mode=csl::eval::base) const override</argsstring>
        <name>evaluate</name>
        <qualifiedname>csl::Abbreviation::evaluate</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Abstract" kindref="compound">Expr_info</ref></type>
          <declname>self</declname>
        </param>
        <param>
          <type>csl::eval::mode</type>
          <declname>user_mode</declname>
          <defval>csl::eval::base</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/abreviation.h" line="270" column="19" bodyfile="src/csl/abreviation.h" bodystart="270" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1Abbreviation_1a251f11eaccb4ab482de2a706d2729a01" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref> const &amp;</type>
        <definition>Expr const  &amp; csl::Abbreviation&lt; BaseParent &gt;::getEncapsulated</definition>
        <argsstring>() const override</argsstring>
        <name>getEncapsulated</name>
        <qualifiedname>csl::Abbreviation::getEncapsulated</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The initial encapsulated expression.</para>
</simplesect>
To have the exact index correspondence with the actual abbreviation see <ref refid="classcsl_1_1Abbreviation_1a9503bc71a0694eddede5c14f0ac767fb" kindref="member">getExactEncapsulated()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/abreviation.h" line="288" column="16" bodyfile="src/csl/abreviation.h" bodystart="288" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1Abbreviation_1ad31adee18094861f9776ec2815ed27af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void csl::Abbreviation&lt; BaseParent &gt;::setEncapsulated</definition>
        <argsstring>(Expr const &amp;t_encapsulated) override</argsstring>
        <name>setEncapsulated</name>
        <qualifiedname>csl::Abbreviation::setEncapsulated</qualifiedname>
        <param>
          <type><ref refid="classcsl_1_1Expr" kindref="compound">Expr</ref> const &amp;</type>
          <declname>t_encapsulated</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/abreviation.h" line="293" column="10" bodyfile="src/csl/abreviation.h" bodystart="293" bodyend="296"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>BaseParent</label>
      </node>
      <node id="1">
        <label>csl::Abbreviation&lt; BaseParent &gt;</label>
        <link refid="classcsl_1_1Abbreviation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>BaseParent</label>
      </node>
      <node id="1">
        <label>csl::Abbreviation&lt; BaseParent &gt;</label>
        <link refid="classcsl_1_1Abbreviation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/csl/abreviation.h" line="38" column="1" bodyfile="src/csl/abreviation.h" bodystart="142" bodyend="306"/>
    <listofallmembers>
      <member refid="classcsl_1_1Abbreviation_1abb72b5a6c6f8ce4b8af4a99597050db2" prot="private" virt="non-virtual"><scope>csl::Abbreviation</scope><name>Abbrev</name></member>
      <member refid="classcsl_1_1Abbreviation_1ae929dd6904f9f606d370b9b1ef807ee6" prot="public" virt="non-virtual"><scope>csl::Abbreviation</scope><name>Abbreviation</name></member>
      <member refid="classcsl_1_1Abbreviation_1a8cbc425b147f82f60375b1cbe0a3bc3b" prot="private" virt="non-virtual"><scope>csl::Abbreviation</scope><name>baseName</name></member>
      <member refid="classcsl_1_1Abbreviation_1ae78b853e53b8963b14acfbc5264e0797" prot="public" virt="non-virtual"><scope>csl::Abbreviation</scope><name>disableEvaluation</name></member>
      <member refid="classcsl_1_1Abbreviation_1a7e3e23da1ff8e24680ae56467530fb68" prot="public" virt="non-virtual"><scope>csl::Abbreviation</scope><name>enableEvaluation</name></member>
      <member refid="classcsl_1_1Abbreviation_1ac179fe66434f3f60915265fec7c865f8" prot="private" virt="non-virtual"><scope>csl::Abbreviation</scope><name>encapsulated</name></member>
      <member refid="classcsl_1_1Abbreviation_1a5eb677f879ccb72e590442b51693aebb" prot="public" virt="non-virtual"><scope>csl::Abbreviation</scope><name>evaluate</name></member>
      <member refid="classcsl_1_1Abbreviation_1adbe6f77ae1fc9f541700a346e4c89d07" prot="private" virt="non-virtual"><scope>csl::Abbreviation</scope><name>evaluation</name></member>
      <member refid="classcsl_1_1Abbreviation_1a1496103bce79ef2dc277ceaa1f25f442" prot="public" virt="non-virtual"><scope>csl::Abbreviation</scope><name>getBaseName</name></member>
      <member refid="classcsl_1_1Abbreviation_1a251f11eaccb4ab482de2a706d2729a01" prot="public" virt="non-virtual"><scope>csl::Abbreviation</scope><name>getEncapsulated</name></member>
      <member refid="classcsl_1_1Abbreviation_1a9503bc71a0694eddede5c14f0ac767fb" prot="public" virt="non-virtual"><scope>csl::Abbreviation</scope><name>getExactEncapsulated</name></member>
      <member refid="classcsl_1_1Abbreviation_1a86791cb5f656c85fa5ce81a3752d3c80" prot="private" virt="non-virtual"><scope>csl::Abbreviation</scope><name>initialStructure</name></member>
      <member refid="classcsl_1_1Abbreviation_1aaf3e3d244799b5da7a1414ad60ad8005" prot="public" virt="non-virtual"><scope>csl::Abbreviation</scope><name>isAnAbbreviation</name></member>
      <member refid="classcsl_1_1Abbreviation_1a8fecbeed8931603daea1d424ba568896" prot="public" virt="non-virtual"><scope>csl::Abbreviation</scope><name>printDefinition</name></member>
      <member refid="classcsl_1_1Abbreviation_1ad31adee18094861f9776ec2815ed27af" prot="public" virt="non-virtual"><scope>csl::Abbreviation</scope><name>setEncapsulated</name></member>
      <member refid="classcsl_1_1Abbreviation_1ad1246a47f86a3c5843165bc1b490e089" prot="public" virt="non-virtual"><scope>csl::Abbreviation</scope><name>toggleEvaluation</name></member>
      <member refid="classcsl_1_1Abbreviation_1a0ff7f72e77a89cacb25eb1167e696fc8" prot="public" virt="non-virtual"><scope>csl::Abbreviation</scope><name>~Abbreviation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
