<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classcsl_1_1linear__map" kind="class" language="C++" prot="public">
    <compoundname>csl::linear_map</compoundname>
    <templateparamlist>
      <param>
        <type>class Key</type>
      </param>
      <param>
        <type>class Value</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classcsl_1_1linear__map_1a96faa94fed5f7102478d7e0b20a6ace3" prot="public" static="no">
        <type>typename std::vector&lt; std::pair&lt; Key, Value &gt; &gt;::iterator</type>
        <definition>using csl::linear_map&lt; Key, Value &gt;::iterator =  typename std::vector&lt;std::pair&lt;Key, Value&gt;&gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <qualifiedname>csl::linear_map::iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/linear_map.h" line="27" column="5" bodyfile="src/csl/linear_map.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classcsl_1_1linear__map_1aed901260a883c591ef7ff9aaa625acff" prot="public" static="no">
        <type>typename std::vector&lt; std::pair&lt; Key, Value &gt; &gt;::const_iterator</type>
        <definition>using csl::linear_map&lt; Key, Value &gt;::const_iterator = 
        typename std::vector&lt;std::pair&lt;Key, Value&gt;&gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <qualifiedname>csl::linear_map::const_iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/linear_map.h" line="28" column="5" bodyfile="src/csl/linear_map.h" bodystart="28" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcsl_1_1linear__map_1a8b7039985efb4c04101d7e1e08e07233" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::pair&lt; Key, Value &gt; &gt;</type>
        <definition>std::vector&lt;std::pair&lt;Key, Value&gt; &gt; csl::linear_map&lt; Key, Value &gt;::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <qualifiedname>csl::linear_map::data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/linear_map.h" line="104" column="17" bodyfile="src/csl/linear_map.h" bodystart="104" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classcsl_1_1linear__map_1aac55554251b6d842cf0bc7973077c360" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto csl::linear_map&lt; Key, Value &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>csl::linear_map::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/linear_map.h" line="31" column="10" bodyfile="src/csl/linear_map.h" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1linear__map_1acfdfa012cb66840bdaa6bbdf6895b479" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool csl::linear_map&lt; Key, Value &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <qualifiedname>csl::linear_map::empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/linear_map.h" line="35" column="10" bodyfile="src/csl/linear_map.h" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1linear__map_1a4fb688cc7fbb934775fc77153b1df96f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto csl::linear_map&lt; Key, Value &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <qualifiedname>csl::linear_map::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/linear_map.h" line="39" column="10" bodyfile="src/csl/linear_map.h" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1linear__map_1a6a4ee07e3dc855d5de3ba609aca38bf6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto csl::linear_map&lt; Key, Value &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <qualifiedname>csl::linear_map::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/linear_map.h" line="43" column="10" bodyfile="src/csl/linear_map.h" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1linear__map_1a078c3a7383f136ff926ad1bcb30d25b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto csl::linear_map&lt; Key, Value &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <qualifiedname>csl::linear_map::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/linear_map.h" line="47" column="10" bodyfile="src/csl/linear_map.h" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1linear__map_1a4a01af169a19911b79daa8d83317a4b7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto csl::linear_map&lt; Key, Value &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <qualifiedname>csl::linear_map::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/linear_map.h" line="51" column="10" bodyfile="src/csl/linear_map.h" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1linear__map_1a98b54a289de26c18d9a73006895c296a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto csl::linear_map&lt; Key, Value &gt;::cbegin</definition>
        <argsstring>() const</argsstring>
        <name>cbegin</name>
        <qualifiedname>csl::linear_map::cbegin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/linear_map.h" line="55" column="10" bodyfile="src/csl/linear_map.h" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1linear__map_1a3607081421f32f48bd7e592ba6ec97dc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto csl::linear_map&lt; Key, Value &gt;::cend</definition>
        <argsstring>() const</argsstring>
        <name>cend</name>
        <qualifiedname>csl::linear_map::cend</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/linear_map.h" line="59" column="10" bodyfile="src/csl/linear_map.h" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1linear__map_1a20d9343945f556e72787fa7ab805ccfb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator csl::linear_map&lt; Key, Value &gt;::erase</definition>
        <argsstring>(iterator iter)</argsstring>
        <name>erase</name>
        <qualifiedname>csl::linear_map::erase</qualifiedname>
        <param>
          <type>iterator</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/linear_map.h" line="64" column="14" bodyfile="src/csl/linear_map.h" bodystart="64" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1linear__map_1a090702581cf21e690a2bd636976c2181" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator csl::linear_map&lt; Key, Value &gt;::find</definition>
        <argsstring>(Key const &amp;value)</argsstring>
        <name>find</name>
        <qualifiedname>csl::linear_map::find</qualifiedname>
        <param>
          <type>Key const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/linear_map.h" line="70" column="14" bodyfile="src/csl/linear_map.h" bodystart="70" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1linear__map_1aa3f5fd15057770eb84aca5973b3521f2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator csl::linear_map&lt; Key, Value &gt;::find</definition>
        <argsstring>(Key const &amp;value) const</argsstring>
        <name>find</name>
        <qualifiedname>csl::linear_map::find</qualifiedname>
        <param>
          <type>Key const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/linear_map.h" line="81" column="20" bodyfile="src/csl/linear_map.h" bodystart="81" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classcsl_1_1linear__map_1ab98a5647a90a5435ac7f740412cad8f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Value &amp;</type>
        <definition>Value &amp; csl::linear_map&lt; Key, Value &gt;::operator[]</definition>
        <argsstring>(Key const &amp;key)</argsstring>
        <name>operator[]</name>
        <qualifiedname>csl::linear_map::operator[]</qualifiedname>
        <param>
          <type>Key const &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/csl/linear_map.h" line="93" column="11" bodyfile="src/csl/linear_map.h" bodystart="93" bodyend="101"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/csl/linear_map.h" line="24" column="1" bodyfile="src/csl/linear_map.h" bodystart="24" bodyend="105"/>
    <listofallmembers>
      <member refid="classcsl_1_1linear__map_1a4fb688cc7fbb934775fc77153b1df96f" prot="public" virt="non-virtual"><scope>csl::linear_map</scope><name>begin</name></member>
      <member refid="classcsl_1_1linear__map_1a6a4ee07e3dc855d5de3ba609aca38bf6" prot="public" virt="non-virtual"><scope>csl::linear_map</scope><name>begin</name></member>
      <member refid="classcsl_1_1linear__map_1a98b54a289de26c18d9a73006895c296a" prot="public" virt="non-virtual"><scope>csl::linear_map</scope><name>cbegin</name></member>
      <member refid="classcsl_1_1linear__map_1a3607081421f32f48bd7e592ba6ec97dc" prot="public" virt="non-virtual"><scope>csl::linear_map</scope><name>cend</name></member>
      <member refid="classcsl_1_1linear__map_1aed901260a883c591ef7ff9aaa625acff" prot="public" virt="non-virtual"><scope>csl::linear_map</scope><name>const_iterator</name></member>
      <member refid="classcsl_1_1linear__map_1a8b7039985efb4c04101d7e1e08e07233" prot="private" virt="non-virtual"><scope>csl::linear_map</scope><name>data</name></member>
      <member refid="classcsl_1_1linear__map_1acfdfa012cb66840bdaa6bbdf6895b479" prot="public" virt="non-virtual"><scope>csl::linear_map</scope><name>empty</name></member>
      <member refid="classcsl_1_1linear__map_1a078c3a7383f136ff926ad1bcb30d25b8" prot="public" virt="non-virtual"><scope>csl::linear_map</scope><name>end</name></member>
      <member refid="classcsl_1_1linear__map_1a4a01af169a19911b79daa8d83317a4b7" prot="public" virt="non-virtual"><scope>csl::linear_map</scope><name>end</name></member>
      <member refid="classcsl_1_1linear__map_1a20d9343945f556e72787fa7ab805ccfb" prot="public" virt="non-virtual"><scope>csl::linear_map</scope><name>erase</name></member>
      <member refid="classcsl_1_1linear__map_1a090702581cf21e690a2bd636976c2181" prot="public" virt="non-virtual"><scope>csl::linear_map</scope><name>find</name></member>
      <member refid="classcsl_1_1linear__map_1aa3f5fd15057770eb84aca5973b3521f2" prot="public" virt="non-virtual"><scope>csl::linear_map</scope><name>find</name></member>
      <member refid="classcsl_1_1linear__map_1a96faa94fed5f7102478d7e0b20a6ace3" prot="public" virt="non-virtual"><scope>csl::linear_map</scope><name>iterator</name></member>
      <member refid="classcsl_1_1linear__map_1ab98a5647a90a5435ac7f740412cad8f0" prot="public" virt="non-virtual"><scope>csl::linear_map</scope><name>operator[]</name></member>
      <member refid="classcsl_1_1linear__map_1aac55554251b6d842cf0bc7973077c360" prot="public" virt="non-virtual"><scope>csl::linear_map</scope><name>size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
